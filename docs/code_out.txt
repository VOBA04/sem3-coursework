Файл iconautosizepushbutton.h: 
#ifndef ICONAUTOSIZEPUSHBUTTON_H
#define ICONAUTOSIZEPUSHBUTTON_H
#include <QPushButton>
#include <QPixmap>
#include <QResizeEvent>
class IconautosizePushButton : public QPushButton {
    Q_OBJECT
public:
    explicit IconautosizePushButton(QWidget *parent = 0) : QPushButton(parent) { }
    void set_image_path(QString &s) {
        image_path = s; }
    QString &get_image_path() {
        return image_path; }
public slots:
    void resizeEvent(QResizeEvent *e) override {
        setIconSize(icon().actualSize(QSize(
            e->size().width() - 10,
            e->size().height() - 10)));
        QPushButton::resizeEvent(e); }
private:
    QString image_path;
};
#endif // ICONAUTOSIZEPUSHBUTTON_H
 
Файл image_filters.cpp: 
#include "image_filters.h"
std::string Filter::get_filter_name() {
    return name; }
Mat Filter::apply() {
    return image; }
Filter::~Filter() {}
Inverse::Inverse(Mat image) {
    name = "Inverse";
    Mat max255 = image.clone();
    max255 = Scalar(255, 255, 255);
    absdiff(max255, image, this->image); }
Original::Original(Mat image) {
    this->image = image;
    name = "Original"; }
Gray::Gray(Mat image) {
    this->image = image;
    name = "Gray";
    cvtColor(image, this->image, COLOR_BGR2GRAY); }
CustomFilter::CustomFilter(std::string name, Mat image, int br, int co, int st, int cl, int tmp) {
    this->name = name;
    this->image = image;
    brightness = br;
    contrast = co;
    saturation = st;
    clarity = cl;
    temperature = tmp;
    if (brightness) {
        Oper_brightness oper(brightness, this->image);
        this->image = oper.exec(); }
    if (contrast) {
        Oper_contrast oper(contrast, this->image);
        this->image = oper.exec(); }
    if (saturation) {
        Oper_saturation oper(saturation, this->image);
        this->image = oper.exec(); }
    if (clarity) {
        Oper_clarity oper(clarity, this->image);
        this->image = oper.exec(); }
    if (temperature) {
        Oper_temperature oper(temperature, this->image);
        this->image = oper.exec(); } }
int Filter::get_brightness() {
    return brightness; }
int Filter::get_contrast() {
    return contrast; }
int Filter::get_saturation() {
    return saturation; }
int Filter::get_clarity() {
    return clarity; }
int Filter::get_temperature() {
    return temperature; }
 
Файл image_filters.h: 
#ifndef FILTERS_H
#define FILTERS_H
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgproc.hpp>
#include "image_processing.h"
using namespace cv;
class Filter {
protected:
    Mat image;
    std::string name;
    int brightness, contrast, saturation, clarity, temperature;
public:
    Mat apply();
    std::string get_filter_name();
    int get_brightness();
    int get_contrast();
    int get_saturation();
    int get_clarity();
    int get_temperature();
    virtual ~Filter() = 0;
};
class Inverse : public Filter {
public:
    Inverse(Mat);
};
class Original : public Filter {
public:
    Original(Mat);
};
class Gray : public Filter {
public:
    Gray(Mat);
};
class CustomFilter : public Filter {
public:
    CustomFilter(std::string, Mat, int, int, int, int, int);
};
#endif
 
Файл image_processing.cpp: 
#include "image_processing.h"
Mat Oper_brightness::exec() {
    image.convertTo(image, -1, 1, value);
    return image; }
Mat Oper_contrast::exec() {
    double alpha = 1;
    alpha += value / 100.0;
    image.convertTo(image, -1, alpha, 0);
    return image; }
Mat Oper_saturation::exec() {
    cvtColor(image, image, COLOR_BGR2HSV);
    std::vector<Mat> channels;
    split(image, channels);
    double alpha = 1;
    alpha += value / 100.0;
    channels[1].convertTo(channels[1], -1, alpha, 0);
    merge(channels, image);
    cvtColor(image, image, COLOR_HSV2BGR);
    return image; }
Mat Oper_clarity::exec() {
    if (value > 0) {
        double alpha = 1;
        alpha += value / 100.0;
        Mat kernel = (Mat_<double>(3, 3) << 0, -1 * alpha, 0,
                      -1 * alpha, 5 * alpha, -1 * alpha,
                      0, -1 * alpha, 0);
        filter2D(image, image, image.depth(), kernel); }
    return image; }
Mat Oper_temperature::exec() {
    double gamma = 1;
    gamma += abs(value) / 100.0;
    Mat lookUpTable(1, 256, CV_8U);
    uchar *p = lookUpTable.ptr();
    for (int i = 0; i < 256; ++i)
        p[i] = saturate_cast<uchar>(pow(i / 255.0, gamma) * 255.0);
    std::vector<Mat> bgr;
    split(image, bgr);
    if (value < 0)
        LUT(bgr[2], lookUpTable, bgr[2]);
    if (value > 0)
        LUT(bgr[0], lookUpTable, bgr[0]);
    merge(bgr, image);
    return image; }
 
Файл image_processing.h: 
#ifndef IMAGE_PROCESSING_H
#define IMAGE_PROCESSING_H
#include <QPixmap>
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgproc.hpp>
using namespace cv;
namespace fs = std::filesystem;
typedef Point3_<uint8_t> Pixel;
class Operation {
protected:
    int value;
    Mat image;
public:
    virtual Mat exec() = 0;
};
class Oper_brightness : public Operation {
public:
    Oper_brightness(int val, Mat image) {
        value = val;
        this->image = image; }
    virtual Mat exec() override;
};
class Oper_contrast : public Operation {
public:
    Oper_contrast(int val, Mat image) {
        value = val;
        this->image = image; }
    virtual Mat exec() override;
};
class Oper_saturation : public Operation {
public:
    Oper_saturation(int val, Mat image) {
        value = val;
        this->image = image; }
    virtual Mat exec() override;
};
class Oper_clarity : public Operation {
public:
    Oper_clarity(int val, Mat image) {
        value = val;
        this->image = image; }
    virtual Mat exec() override;
};
class Oper_temperature : public Operation {
public:
    Oper_temperature(int val, Mat image) {
        value = val;
        this->image = image; }
    virtual Mat exec() override;
};
#endif
 
Файл main.cpp: 
#include "mainwindow.h"
#include <QApplication>
#include <cstdlib>
#include <iostream>
#include "image_processing.h"
int main(int argc, char *argv[]) {
    QApplication a(argc, argv);
    MainWindow w;
    w.show();
    return a.exec(); }
 
Файл mainwindow.cpp: 
#include "mainwindow.h"
MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent) {
    setupUi(this);
    FN_W = new FilterName_window();
    image_info.start_image = new QPixmap;
    image_info.image_in_proc = new QPixmap;
    pixmap = new QGraphicsPixmapItem;
    graphicsScene = new QGraphicsScene;
    qApp->installTranslator(&qtlangtransl);
    graphicsScene->addItem(pixmap);
    graphicsView_main_im->setScene(graphicsScene);
    image_info.brightness = 0;
    image_info.contrast = 0;
    image_info.saturation = 0;
    image_info.clarity = 0;
    image_info.temperture = 0;
    image_info.filter = FILTER::ORIGINAL;
    FN_W->hide();
    FN_W->setWindowModality(Qt::WindowModality::ApplicationModal);
    graphicsView_main_im->hide();
    pushButton_Rec_open_1->hide();
    pushButton_Rec_open_2->hide();
    pushButton_Rec_open_3->hide();
    pushButton_Rec_open_4->hide();
    pushButton_Rec_open_5->hide();
    pushButton_brightness->hide();
    pushButton_clarity->hide();
    pushButton_temperature->hide();
    pushButton_contrast->hide();
    pushButton_saturation->hide();
    regulation->hide();
    out_amount->hide();
    pushButton_left->hide();
    pushButton_right->hide();
    actionExport->setEnabled(false);
    actionNew_image->setEnabled(false);
    actionEnglish->setEnabled(false);
    pushButton_applyFilter->hide();
    pushButton_filters->hide();
    pushButton_centerF->hide();
    pushButton_leftF->hide();
    pushButton_rightF->hide();
    pushButton_toLeft->hide();
    pushButton_toRight->hide();
    label_centerFname->hide();
    label_leftFname->hide();
    label_rightFname->hide();
    pushButton_back->hide();
    pushButton_addF->hide();
    pushButton_deleteF->hide();
    set_curr_proc(PROCESSES::NON);
    set_rec_opened_butts();
    mythread = new MyThread();
    QObject::connect(QApplication::instance(), &QApplication::aboutToQuit, mythread, &MyThread::terminateThread);
    mythread->start();
    QObject::connect(mythread, &MyThread::signalGUI, this, &MainWindow::change_image);
    set_connections(); }
MainWindow::~MainWindow() {
    if (!filters.empty())
        save_filters();
    delete image_info.start_image;
    delete image_info.image_in_proc;
    delete pixmap;
    delete graphicsScene; }
void MainWindow::change_image(cv::Mat cv_im) {
    QPixmap Qpixmap = QPixmap::fromImage(QtOcv::mat2Image(cv_im));
    pixmap->setPixmap(Qpixmap);
    QSize sz = Qpixmap.size();
    graphicsView_main_im->fitInView(pixmap, Qt::KeepAspectRatio); }
void MainWindow::start_proc(QString &QPath) {
    QString Qpath_from;
    if (QPath.isEmpty()) {
        Qpath_from = QFileDialog::getOpenFileName(this, QObject::tr("Open file"), "", QObject::tr("Images (*.png *.jpg)"), nullptr);
        for (int i = 0; i < Qpath_from.size(); i++) {
            if (Qpath_from[i] == '/')
                Qpath_from[i] = '\\'; }
        if (Qpath_from.isEmpty())
            return; }
    else
        Qpath_from = QPath;
    if (!Qpath_from.isEmpty()) {
        QPixmap Qpixmap(Qpath_from);
        *(image_info.start_image) = Qpixmap;
        *(image_info.image_in_proc) = Qpixmap;
        graphicsView_main_im->show();
        pixmap = new QGraphicsPixmapItem;
        graphicsScene = new QGraphicsScene;
        graphicsScene->addItem(pixmap);
        graphicsView_main_im->setScene(graphicsScene);
        pixmap->setPixmap(Qpixmap);
        graphicsView_main_im->fitInView(pixmap, Qt::KeepAspectRatio);
        label_greeting->hide();
        pushButton_Rec_open_1->hide();
        pushButton_Rec_open_2->hide();
        pushButton_Rec_open_3->hide();
        pushButton_Rec_open_4->hide();
        pushButton_Rec_open_5->hide();
        pushButton_New->hide();
        pushButton_brightness->show();
        pushButton_clarity->show();
        pushButton_temperature->show();
        pushButton_contrast->show();
        pushButton_saturation->show();
        pushButton_left->show();
        pushButton_right->show();
        pushButton_filters->show();
        actionExport->setEnabled(true);
        actionNew_image->setEnabled(true);
        QFile file;
        file.setFileName("D:\\University\\cs\\sem3\\cursach\\photored\\recently_opened.json");
        file.open(QIODevice::ReadWrite);
        QString s;
        s = file.readAll();
        QJsonDocument d;
        d = QJsonDocument::fromJson(s.toUtf8());
        QJsonArray pathes = d.array();
        QJsonValue path(Qpath_from);
        if (!pathes.contains(path)) {
            int n = pathes.size();
            if (n < 5) {
                pathes.push_back(path); }
            else {
                pathes.pop_front();
                pathes.push_back(path); }
            d.setArray(pathes);
            s = d.toJson();
            file.resize(0);
            file.write(s.toUtf8()); }
        file.close(); } }
void MainWindow::main_proc(int value) {
    PROCESSES proc = get_curr_proc();
    QPixmap image = (*image_info.image_in_proc);
    switch (proc) {
    case PROCESSES::BRIGHTNESS: {
        mythread->push(new Oper_brightness(value, QtOcv::image2Mat(image.toImage())));
        break; }
    case PROCESSES::CONTRAST: {
        mythread->push(new Oper_contrast(value, QtOcv::image2Mat(image.toImage())));
        break; }
    case PROCESSES::SATURATUIN: {
        mythread->push(new Oper_saturation(value, QtOcv::image2Mat(image.toImage())));
        break; }
    case PROCESSES::CLARITY: {
        mythread->push(new Oper_clarity(value, QtOcv::image2Mat(image.toImage())));
        break; }
    case PROCESSES::TEMPERATURE: {
        mythread->push(new Oper_temperature(value, QtOcv::image2Mat(image.toImage())));
        break; } } }
void MainWindow::end_main_proc() {
    PROCESSES proc = get_curr_proc();
    int value = regulation->value();
    switch (proc) {
    case PROCESSES::BRIGHTNESS: {
        image_info.brightness = value;
        break; }
    case PROCESSES::CONTRAST: {
        image_info.contrast = value;
        break; }
    case PROCESSES::SATURATUIN: {
        image_info.saturation = value;
        break; }
    case PROCESSES::CLARITY: {
        image_info.clarity = value;
        break; }
    case PROCESSES::TEMPERATURE: {
        image_info.temperture = value;
        break; } } }
void MainWindow::save_image() {
    QString filter = "PNG(*.png);;JPG(*.jpg)", selected_filter;
    QString filename;
    filename = filename.toUtf8();
    filename = QFileDialog::getSaveFileName(this, QObject::tr("Save File"), "D:\\", filter, &selected_filter);
    if (!filename.isEmpty()) {
        for (int i = 0; i < filename.size(); i++)
            if (filename[i] == '/')
                filename[i] = '\\';
        prepare_image();
        image_info.image_in_proc->save(filename); } }
void MainWindow::set_new_image() {
    current_process = PROCESSES::NON;
    show_pressed_button();
    image_info.brightness = 0;
    image_info.contrast = 0;
    image_info.saturation = 0;
    image_info.clarity = 0;
    image_info.temperture = 0;
    graphicsView_main_im->hide();
    regulation->hide();
    pushButton_brightness->hide();
    pushButton_contrast->hide();
    pushButton_saturation->hide();
    pushButton_clarity->hide();
    pushButton_temperature->hide();
    out_amount->hide();
    pushButton_left->hide();
    pushButton_right->hide();
    pushButton_filters->hide();
    pushButton_toLeft->hide();
    pushButton_leftF->hide();
    label_leftFname->hide();
    pushButton_centerF->hide();
    label_centerFname->hide();
    pushButton_rightF->hide();
    label_rightFname->hide();
    pushButton_toRight->hide();
    pushButton_addF->hide();
    pushButton_deleteF->hide();
    pushButton_back->hide();
    pushButton_applyFilter->hide();
    pushButton_New->show();
    pushButton_Rec_open_1->show();
    pushButton_Rec_open_2->show();
    pushButton_Rec_open_3->show();
    pushButton_Rec_open_4->show();
    pushButton_Rec_open_5->show();
    label_greeting->show();
    actionExport->setEnabled(false);
    actionNew_image->setEnabled(false);
    set_rec_opened_butts();
    delete pixmap;
    delete graphicsScene; }
void MainWindow::apply_filter() {
    std::string filter_name = filters[filter_number]->get_filter_name();
    if (filter_name == "Inverse") {
        image_info.filter = FILTER::INVERSE; }
    else if (filter_name == "Gray") {
        image_info.filter = FILTER::GRAY; }
    else if (filter_name == "Original") {
        image_info.filter = FILTER::ORIGINAL;
        image_info.brightness = 0;
        image_info.contrast = 0;
        image_info.saturation = 0;
        image_info.clarity = 0;
        image_info.temperture = 0; }
    else {
        image_info.filter = FILTER::CUSTOM;
        image_info.brightness = filters[filter_number]->get_brightness();
        image_info.contrast = filters[filter_number]->get_contrast();
        image_info.saturation = filters[filter_number]->get_saturation();
        image_info.clarity = filters[filter_number]->get_clarity();
        image_info.temperture = filters[filter_number]->get_temperature(); }
    prepare_image();
    back_from_filters(); }
void MainWindow::rotate_left() {
    Mat image = QtOcv::image2Mat(image_info.image_in_proc->toImage());
    Mat start_image = QtOcv::image2Mat(image_info.start_image->toImage());
    rotate(image, image, ROTATE_90_COUNTERCLOCKWISE);
    rotate(start_image, start_image, ROTATE_90_COUNTERCLOCKWISE);
    (*image_info.image_in_proc) = QPixmap::fromImage(QtOcv::mat2Image(image));
    (*image_info.start_image) = QPixmap::fromImage(QtOcv::mat2Image(start_image));
    change_image(image); }
void MainWindow::rotate_right() {
    Mat image = QtOcv::image2Mat(image_info.image_in_proc->toImage());
    Mat start_image = QtOcv::image2Mat(image_info.start_image->toImage());
    rotate(image, image, ROTATE_90_CLOCKWISE);
    rotate(start_image, start_image, ROTATE_90_CLOCKWISE);
    (*image_info.image_in_proc) = QPixmap::fromImage(QtOcv::mat2Image(image));
    (*image_info.start_image) = QPixmap::fromImage(QtOcv::mat2Image(start_image));
    change_image(image); }
 
Файл mainwindow.h: 
#ifndef MAINWINDOW_H
#define MAINWINDOW_H
#include <QMainWindow>
#include <QFileDialog>
#include <QTranslator>
#include "ui_mainwindow.h"
#include <filesystem>
#include <string>
#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonValue>
#include <QGraphicsScene>
#include <QGraphicsPixmapItem>
#include "workerthread.h"
#include "cvmatandqimage.h"
#include <opencv2/core/core.hpp>
#include "MyRing.h"
#include "image_filters.h"
#include "set_FilterName_window.h"
enum class PROCESSES {
    BRIGHTNESS,
    CONTRAST,
    SATURATUIN,
    CLARITY,
    TEMPERATURE,
    ROTATION,
    FILTER,
    NON
};
enum class FILTER {
    INVERSE,
    ORIGINAL,
    GRAY,
    CUSTOM
};
namespace fs = std::filesystem;
class MyThread;
class MainWindow : public QMainWindow, protected Ui::MainWindow {
    Q_OBJECT
    MyThread *mythread;
    PROCESSES current_process;
    MyRing<Filter *> filters;
    int filter_number;
    void set_connections();
    QTranslator qtlangtransl;
public:
    FilterName_window *FN_W;
    explicit MainWindow(QWidget *parent = nullptr);
    void set_curr_proc(PROCESSES);
    PROCESSES get_curr_proc();
    void prepare_image();
    void set_filters();
    void save_filters();
    cv::Mat get_filtered_image(int);
    std::string get_filter_name(int);
    void set_filter_number(int);
    void next_prev_filter(int);
    ~MainWindow();
public slots:
    void change_image(cv::Mat);
    void set_rec_opened_butts();
    void start_proc(QString &);
    void main_proc(int);
    void set_slider_limits();
    void end_main_proc();
    void rotate_left();
    void rotate_right();
    void save_image();
    void set_new_image();
    void set_filters_buttons();
    void set_deleteF_enabled(std::string);
    void back_from_filters();
    void apply_filter();
    void delete_filter();
    void add_filter();
    void show_pressed_button();
    void change_language(const char *);
protected:
    void changeEvent(QEvent *) override;
    QGraphicsScene *graphicsScene;
    QGraphicsPixmapItem *pixmap;
    struct image_info {
        QPixmap *start_image;
        QPixmap *image_in_proc;
        int brightness, contrast, saturation, clarity, temperture;
        FILTER filter;
    } image_info;
};
#endif // MAINWINDOW_H
 
Файл MyRing.h: 
#ifndef MYRING_H
#define MYRING_H
template <typename T>
class RingNode {
public:
    T data;
    RingNode *next;
    RingNode *prev;
    RingNode() {
        next = nullptr;
        prev = nullptr; }
    RingNode(T data) {
        this->data = data;
        next = nullptr;
        prev = nullptr; }
};
template <typename T>
class MyRing {
    RingNode<T> *head;
    int ring_size;
public:
    MyRing() {
        head = nullptr;
        ring_size = 0; }
    MyRing(const MyRing &other) {
        RingNode<T> *temp = other.head;
        for (int i = 0; i < other.ring_size; i++) {
            push(temp->data);
            temp = temp->next; }
        delete temp; }
    ~MyRing() {
        while (ring_size)
            pop_head(); }
    void push(T data) {
        RingNode<T> *newNode = new RingNode<T>(data);
        if (ring_size == 0) {
            head = newNode;
            head->next = head;
            head->prev = head; }
        else {
            newNode->prev = head->prev;
            head->prev->next = newNode;
            newNode->next = head;
            head->prev = newNode; }
        ring_size++; }
    void pop_head() {
        if (ring_size == 0)
            throw "Ring is empty";
        else if (ring_size == 1) {
            delete head;
            head = nullptr; }
        else {
            RingNode<T> *temp = head;
            head->prev->next = head->next;
            head->next->prev = head->prev;
            head = head->next;
            delete temp; }
        ring_size--; }
    T get_data() {
        if (ring_size == 0)
            throw "Ring is empty";
        return head->data; }
    void next_node() {
        if (ring_size == 0)
            throw "Ring is empty";
        head = head->next; }
    void prev_node() {
        if (ring_size == 0)
            throw "Ring is empty";
        head = head->prev; }
    bool empty() {
        if (ring_size)
            return false;
        return true; }
    int size() {
        return ring_size; }
    void clean() {
        while (ring_size)
            pop_head();
        head = nullptr; }
    T &operator[](const int index) {
        RingNode<T> *temp = head;
        if (index > 0) {
            for (int i = 0; i < index; i++)
                temp = temp->next; }
        if (index < 0) {
            for (int i = 0; i > index; i--)
                temp = temp->prev; }
        return temp->data; }
};
#endif
 
Файл set_FilterName_window.cpp: 
#include "set_FilterName_window.h"
FilterName_window::FilterName_window(QWidget *parent) : QWidget(parent) {
    setupUi(this);
    QObject::connect(pushButton_cansel, &QPushButton::clicked, this, &FilterName_window::hide);
    QObject::connect(pushButton_save, &QPushButton::clicked, this, &FilterName_window::save_filter_name); }
void FilterName_window::set_filters(MyRing<Filter *> *main_filters) {
    filters = main_filters; }
bool FilterName_window::is_name_in_filters(std::string filter_name) {
    for (int i = 0; i < filters->size(); i++) {
        if ((*filters)[i]->get_filter_name() == filter_name)
            return true; }
    return false; }
void FilterName_window::save_filter_name() {
    label_2->setText("");
    std::string s = lineEdit->text().toStdString();
    while (s[0] == ' ')
        s.erase(0, 1);
    while (s[s.length() - 1] == ' ')
        s.erase(s.length() - 1, 1);
    if (s.empty()) {
        label_2->setText(tr("Name is empty"));
        return; }
    if (is_name_in_filters(s)) {
        label_2->setText(tr("This name already exists"));
        return; }
    filter_name = s;
    emit filter_name_got();
    hide(); }
std::string FilterName_window::get_filter_name() {
    return filter_name; }
void FilterName_window::changeEvent(QEvent *e) {
    if (e->type() == QEvent::LanguageChange) {
        retranslateUi(this); } }
 
Файл set_FilterName_window.h: 
#ifndef SET_FILTERNAME_WINDOW_H
#define SET_FILTERNAME_WINDOW_H
#include "ui_set_FilterName_window.h"
#include "MyRing.h"
#include "image_filters.h"
#include <QString>
class FilterName_window : public QWidget, protected Ui::Form {
    Q_OBJECT
    MyRing<Filter *> *filters;
    std::string filter_name;
public:
    explicit FilterName_window(QWidget *parent = nullptr);
    void set_filters(MyRing<Filter *> *);
    bool is_name_in_filters(std::string);
    std::string get_filter_name();
protected:
    void changeEvent(QEvent *) override;
public slots:
    void save_filter_name();
signals:
    void filter_name_got();
};
#endif
 
Файл utils.cpp: 
#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonValue>
#include <QJsonObject>
#include "mainwindow.h"
#include <QString>
#include <QFile>
void MainWindow::set_rec_opened_butts() {
    QFile file;
    file.setFileName("D:\\University\\cs\\sem3\\cursach\\photored\\recently_opened.json");
    if (file.open(QIODevice::ReadOnly)) {
        QString s;
        s = file.readAll();
        file.close();
        QJsonDocument d;
        d = QJsonDocument::fromJson(s.toUtf8());
        QJsonArray pathes = d.array();
        QJsonValue path;
        int n = pathes.size(), button_n = 0;
        for (int i = 0; i < n; i++) {
            path = pathes[i];
            s = path.toString();
            QPixmap im(s);
            if (!im.isNull()) {
                QIcon but_im(im);
                switch (button_n) {
                case 0:
                    pushButton_Rec_open_1->set_image_path(s);
                    pushButton_Rec_open_1->setIcon(but_im);
                    pushButton_Rec_open_1->show();
                    break;
                case 1:
                    pushButton_Rec_open_2->set_image_path(s);
                    pushButton_Rec_open_2->setIcon(but_im);
                    pushButton_Rec_open_2->show();
                    break;
                case 2:
                    pushButton_Rec_open_3->set_image_path(s);
                    pushButton_Rec_open_3->setIcon(but_im);
                    pushButton_Rec_open_3->show();
                    break;
                case 3:
                    pushButton_Rec_open_4->set_image_path(s);
                    pushButton_Rec_open_4->setIcon(but_im);
                    pushButton_Rec_open_4->show();
                    break;
                case 4:
                    pushButton_Rec_open_5->set_image_path(s);
                    pushButton_Rec_open_5->setIcon(but_im);
                    pushButton_Rec_open_5->show();
                    break; }
                button_n++; } } } }
void MainWindow::set_curr_proc(PROCESSES n) {
    current_process = n; }
PROCESSES MainWindow::get_curr_proc() {
    return current_process; }
void MainWindow::set_slider_limits() {
    PROCESSES n = get_curr_proc();
    if (n == PROCESSES::CLARITY) {
        regulation->setMinimum(0);
        regulation->setMaximum(100); }
    else {
        regulation->setMinimum(-100);
        regulation->setMaximum(100); }
    switch (n) {
    case PROCESSES::BRIGHTNESS: {
        regulation->setValue(image_info.brightness);
        out_amount->setNum(image_info.brightness);
        break; }
    case PROCESSES::CONTRAST: {
        regulation->setValue(image_info.contrast);
        out_amount->setNum(image_info.contrast);
        break; }
    case PROCESSES::SATURATUIN: {
        regulation->setValue(image_info.saturation);
        out_amount->setNum(image_info.saturation);
        break; }
    case PROCESSES::CLARITY: {
        regulation->setValue(image_info.clarity);
        out_amount->setNum(image_info.clarity);
        break; }
    case PROCESSES::TEMPERATURE: {
        regulation->setValue(image_info.temperture);
        out_amount->setNum(image_info.temperture);
        break; } } }
void MainWindow::prepare_image() {
    QPixmap image = *(image_info.start_image);
    if (current_process != PROCESSES::BRIGHTNESS) {
        Oper_brightness oper(image_info.brightness, QtOcv::image2Mat(image.toImage()));
        image = QPixmap::fromImage(QtOcv::mat2Image(oper.exec())); }
    if (current_process != PROCESSES::CONTRAST) {
        Oper_contrast oper(image_info.contrast, QtOcv::image2Mat(image.toImage()));
        image = QPixmap::fromImage(QtOcv::mat2Image(oper.exec())); }
    if (current_process != PROCESSES::SATURATUIN) {
        Oper_saturation oper(image_info.saturation, QtOcv::image2Mat(image.toImage()));
        image = QPixmap::fromImage(QtOcv::mat2Image(oper.exec())); }
    if (current_process != PROCESSES::CLARITY) {
        Oper_clarity oper(image_info.clarity, QtOcv::image2Mat(image.toImage()));
        image = QPixmap::fromImage(QtOcv::mat2Image(oper.exec())); }
    if (current_process != PROCESSES::TEMPERATURE) {
        Oper_temperature oper(image_info.temperture, QtOcv::image2Mat(image.toImage()));
        image = QPixmap::fromImage(QtOcv::mat2Image(oper.exec())); }
    if (image_info.filter == FILTER::INVERSE) {
        Inverse filt(QtOcv::image2Mat(image.toImage()));
        image = QPixmap::fromImage(QtOcv::mat2Image(filt.apply())); }
    else if (image_info.filter == FILTER::GRAY) {
        Gray filt(QtOcv::image2Mat(image.toImage()));
        image = QPixmap::fromImage(QtOcv::mat2Image(filt.apply())); }
    (*image_info.image_in_proc) = image; }
void MainWindow::set_filter_number(int n) {
    filter_number = n; }
void MainWindow::set_filters() {
    pushButton_deleteF->setEnabled(false);
    FILTER temp = image_info.filter;
    image_info.filter = FILTER::CUSTOM;
    prepare_image();
    image_info.filter = temp;
    filters.clean();
    Mat image = QtOcv::image2Mat(image_info.image_in_proc->toImage());
    Mat start_image = QtOcv::image2Mat(image_info.start_image->toImage());
    filters.push(new Inverse(image));
    filters.push(new Original(start_image.clone()));
    filters.push(new Gray(image));
    QFile file;
    file.setFileName("D:\\University\\cs\\sem3\\cursach\\photored\\filters_inform.json");
    if (file.open(QIODevice::ReadOnly)) {
        QString s;
        s = file.readAll();
        file.close();
        QJsonDocument d;
        d = QJsonDocument::fromJson(s.toUtf8());
        QJsonArray js_filters = d.array();
        QJsonObject js_filter;
        std::string filter_name;
        int br, co, st, cl, tmp;
        for (int i = 0; i < js_filters.size(); i++) {
            js_filter = js_filters[i].toObject();
            filter_name = js_filter["name"].toString().toStdString();
            br = js_filter["brightness"].toInt();
            co = js_filter["contrast"].toInt();
            st = js_filter["saturation"].toInt();
            cl = js_filter["clarity"].toInt();
            tmp = js_filter["temperature"].toInt();
            filters.push(new CustomFilter(filter_name, start_image.clone(), br, co, st, cl, tmp)); } } }
void MainWindow::save_filters() {
    QFile file;
    file.setFileName("D:\\University\\cs\\sem3\\cursach\\photored\\filters_inform.json");
    file.open(QIODevice::WriteOnly);
    file.resize(0);
    QJsonObject js_filter;
    QJsonArray js_filters;
    QJsonDocument d;
    for (int i = 0; i < filters.size(); i++) {
        std::string filter_name = filters[i]->get_filter_name();
        if (filter_name != "Inverse" && filter_name != "Original" && filter_name != "Gray") {
            js_filter["name"] = QString::fromStdString(filter_name);
            js_filter["brightness"] = filters[i]->get_brightness();
            js_filter["contrast"] = filters[i]->get_contrast();
            js_filter["saturation"] = filters[i]->get_saturation();
            js_filter["clarity"] = filters[i]->get_clarity();
            js_filter["temperature"] = filters[i]->get_temperature();
            js_filters.push_back(js_filter); } }
    d.setArray(js_filters);
    QString s = d.toJson();
    file.write(s.toUtf8());
    file.close(); }
void MainWindow::set_filters_buttons() {
    QIcon leftF(QPixmap::fromImage(QtOcv::mat2Image(filters[0]->apply())));
    pushButton_leftF->setIcon(leftF);
    pushButton_leftF->setIconSize(pushButton_leftF->icon().actualSize(QSize(pushButton_leftF->size().width() - 10, pushButton_leftF->size().height() - 10)));
    label_leftFname->setText(QString::fromStdString(filters[0]->get_filter_name()));
    QIcon centerF(QPixmap::fromImage(QtOcv::mat2Image(filters[1]->apply())));
    pushButton_centerF->setIcon(centerF);
    pushButton_centerF->setIconSize(pushButton_centerF->icon().actualSize(QSize(pushButton_centerF->size().width() - 10, pushButton_centerF->size().height() - 10)));
    label_centerFname->setText(QString::fromStdString(filters[1]->get_filter_name()));
    QIcon rightF(QPixmap::fromImage(QtOcv::mat2Image(filters[2]->apply())));
    pushButton_rightF->setIcon(rightF);
    pushButton_rightF->setIconSize(pushButton_rightF->icon().actualSize(QSize(pushButton_rightF->size().width() - 10, pushButton_rightF->size().height() - 10)));
    label_rightFname->setText(QString::fromStdString(filters[2]->get_filter_name())); }
void MainWindow::next_prev_filter(int n) {
    if (n > 0)
        filters.next_node();
    if (n < 0)
        filters.prev_node(); }
Mat MainWindow::get_filtered_image(int n) {
    return filters[n]->apply(); }
std::string MainWindow::get_filter_name(int n) {
    return filters[n]->get_filter_name(); }
void MainWindow::set_deleteF_enabled(std::string filter_name) {
    if (filter_name == "Inverse" || filter_name == "Original" || filter_name == "Gray")
        pushButton_deleteF->setEnabled(false);
    else
        pushButton_deleteF->setEnabled(true); }
void MainWindow::back_from_filters() {
    prepare_image();
    change_image(QtOcv::image2Mat((*image_info.image_in_proc).toImage()));
    save_filters();
    filters.clean();
    pushButton_toLeft->hide();
    pushButton_leftF->hide();
    label_leftFname->hide();
    pushButton_centerF->hide();
    label_centerFname->hide();
    pushButton_rightF->hide();
    label_rightFname->hide();
    pushButton_toRight->hide();
    pushButton_addF->hide();
    pushButton_deleteF->hide();
    pushButton_back->hide();
    pushButton_applyFilter->hide();
    pushButton_brightness->show();
    pushButton_contrast->show();
    pushButton_saturation->show();
    pushButton_clarity->show();
    pushButton_temperature->show();
    pushButton_filters->show();
    pushButton_left->show();
    pushButton_right->show(); }
void MainWindow::delete_filter() {
    switch (filter_number) {
    case 0: {
        filters.pop_head();
        break; }
    case 1: {
        filters.next_node();
        filters.pop_head();
        filters.prev_node();
        break; }
    case 2: {
        filters.next_node();
        filters.next_node();
        filters.pop_head();
        filters.prev_node();
        filters.prev_node();
        break; } }
    set_filters_buttons();
    prepare_image();
    change_image(QtOcv::image2Mat((*image_info.image_in_proc).toImage())); }
void MainWindow::add_filter() {
    std::string filter_name = FN_W->get_filter_name();
    filters.push(new CustomFilter(filter_name, QtOcv::image2Mat((*image_info.start_image).toImage()), image_info.brightness, image_info.contrast, image_info.saturation, image_info.clarity, image_info.temperture)); }
void MainWindow::show_pressed_button() {
    QString pressed = "background-color: gray";
    QString not_pressed = "";
    if (current_process == PROCESSES::BRIGHTNESS)
        pushButton_brightness->setStyleSheet(pressed);
    else
        pushButton_brightness->setStyleSheet(not_pressed);
    if (current_process == PROCESSES::CONTRAST)
        pushButton_contrast->setStyleSheet(pressed);
    else
        pushButton_contrast->setStyleSheet(not_pressed);
    if (current_process == PROCESSES::SATURATUIN)
        pushButton_saturation->setStyleSheet(pressed);
    else
        pushButton_saturation->setStyleSheet(not_pressed);
    if (current_process == PROCESSES::CLARITY)
        pushButton_clarity->setStyleSheet(pressed);
    else
        pushButton_clarity->setStyleSheet(not_pressed);
    if (current_process == PROCESSES::TEMPERATURE)
        pushButton_temperature->setStyleSheet(pressed);
    else
        pushButton_temperature->setStyleSheet(not_pressed); }
void MainWindow::set_connections() {
    QObject::connect(pushButton_New, &QPushButton::clicked, this, [&]()
                     { QString tmp; start_proc(tmp); });
    QObject::connect(pushButton_Rec_open_1, &QPushButton::clicked, this, [&]()
                     { start_proc(pushButton_Rec_open_1->get_image_path()); });
    QObject::connect(pushButton_Rec_open_2, &QPushButton::clicked, this, [&]()
                     { start_proc(pushButton_Rec_open_2->get_image_path()); });
    QObject::connect(pushButton_Rec_open_3, &QPushButton::clicked, this, [&]()
                     { start_proc(pushButton_Rec_open_3->get_image_path()); });
    QObject::connect(pushButton_Rec_open_4, &QPushButton::clicked, this, [&]()
                     { start_proc(pushButton_Rec_open_4->get_image_path()); });
    QObject::connect(pushButton_Rec_open_5, &QPushButton::clicked, this, [&]()
                     { start_proc(pushButton_Rec_open_5->get_image_path()); });
    QObject::connect(pushButton_brightness, &QPushButton::clicked, this, [&]()
                     {  end_main_proc();
                        set_curr_proc(PROCESSES::BRIGHTNESS);
                        show_pressed_button();
                        set_slider_limits(); 
                        prepare_image(); });
    QObject::connect(pushButton_contrast, &QPushButton::clicked, this, [&]()
                     {  end_main_proc();
                        set_curr_proc(PROCESSES::CONTRAST);
                        show_pressed_button();
                        set_slider_limits();
                        prepare_image(); });
    QObject::connect(pushButton_saturation, &QPushButton::clicked, this, [&]()
                     {  end_main_proc();
                        set_curr_proc(PROCESSES::SATURATUIN);
                        show_pressed_button();
                        set_slider_limits();
                        prepare_image(); });
    QObject::connect(pushButton_clarity, &QPushButton::clicked, this, [&]()
                     {  end_main_proc();
                        set_curr_proc(PROCESSES::CLARITY);
                        show_pressed_button();
                        set_slider_limits();
                        prepare_image(); });
    QObject::connect(pushButton_temperature, &QPushButton::clicked, this, [&]()
                     {  end_main_proc();
                        set_curr_proc(PROCESSES::TEMPERATURE);
                        show_pressed_button();
                        set_slider_limits();
                        prepare_image(); });
    QObject::connect(regulation, SIGNAL(sliderMoved(int)), out_amount, SLOT(setNum(int)));
    QObject::connect(regulation, &QSlider::sliderMoved, this, &MainWindow::main_proc);
    QObject::connect(actionExport, &QAction::triggered, this, [&]()
                     {  end_main_proc();
                        set_curr_proc(PROCESSES::NON); 
                        save_image(); });
    QObject::connect(actionNew_image, &QAction::triggered, this, &MainWindow::set_new_image);
    QObject::connect(pushButton_left, &QPushButton::clicked, this, [&]()
                     {  end_main_proc();
                        set_curr_proc(PROCESSES::ROTATION);
                        show_pressed_button();
                        prepare_image();
                        rotate_left(); });
    QObject::connect(pushButton_right, &QPushButton::clicked, this, [&]()
                     {  end_main_proc();
                        set_curr_proc(PROCESSES::ROTATION);
                        show_pressed_button();
                        prepare_image();
                        rotate_right(); });
    QObject::connect(pushButton_filters, &QPushButton::clicked, this, [&]()
                     {  end_main_proc();
                        set_curr_proc(PROCESSES::FILTER);
                        show_pressed_button();
                        set_filters();
                        set_filters_buttons(); });
    QObject::connect(pushButton_toLeft, &QPushButton::clicked, this, [&]()
                     {  next_prev_filter(-1);
                        set_filters_buttons(); });
    QObject::connect(pushButton_toRight, &QPushButton::clicked, this, [&]()
                     {  next_prev_filter(1);
                        set_filters_buttons(); });
    QObject::connect(pushButton_leftF, &QPushButton::clicked, this, [&]()
                     { set_filter_number(0);
                       change_image(get_filtered_image(0)); 
                       set_deleteF_enabled(get_filter_name(0)); });
    QObject::connect(pushButton_centerF, &QPushButton::clicked, this, [&]()
                     { set_filter_number(1);
                       change_image(get_filtered_image(1)); 
                       set_deleteF_enabled(get_filter_name(1)); });
    QObject::connect(pushButton_rightF, &QPushButton::clicked, this, [&]()
                     { set_filter_number(2);
                       change_image(get_filtered_image(2)); 
                       set_deleteF_enabled(get_filter_name(2)); });
    QObject::connect(pushButton_back, &QPushButton::clicked, this, &MainWindow::back_from_filters);
    QObject::connect(pushButton_applyFilter, &QPushButton::clicked, this, &MainWindow::apply_filter);
    QObject::connect(pushButton_deleteF, &QPushButton::clicked, this, &MainWindow::delete_filter);
    QObject::connect(pushButton_addF, &QPushButton::clicked, this, [&]()
                     {   FN_W->set_filters(&filters);
                         FN_W->show(); });
    QObject::connect(FN_W, &FilterName_window::filter_name_got, this, &MainWindow::add_filter);
    QObject::connect(actionRussian, &QAction::triggered, this, [&]()
                     { change_language("ru"); 
                       actionRussian->setEnabled(false);
                       actionEnglish->setEnabled(true); 
                       actionBelarusian->setEnabled(true); });
    QObject::connect(actionEnglish, &QAction::triggered, this, [&]()
                     { change_language("en");
                       actionRussian->setEnabled(true);
                       actionEnglish->setEnabled(false); 
                       actionBelarusian->setEnabled(true); });
    QObject::connect(actionBelarusian, &QAction::triggered, this, [&]()
                     { change_language("be");
                       actionRussian->setEnabled(true);
                       actionEnglish->setEnabled(true); 
                       actionBelarusian->setEnabled(false); }); }
void MainWindow::changeEvent(QEvent *e) {
    if (e->type() == QEvent::LanguageChange) {
        retranslateUi(this); } }
void MainWindow::change_language(const char *lng) {
    if (!qtlangtransl.load("photored_" + QString(lng) + ".")) { } }
 
Файл viewwithoutwheel.h: 
#ifndef VIEWWITHOUTWHEEL_H
#define VIEWWITHOUTWHEEL_H
#include <QGraphicsView>
class ViewWithoutWheel : public QGraphicsView {
    Q_OBJECT
public:
    explicit ViewWithoutWheel(QWidget *parent = 0) : QGraphicsView(parent) { }
public slots:
    virtual void wheelEvent(QWheelEvent *e) override { }
    virtual void resizeEvent(QResizeEvent *e) override {
        QGraphicsView::resizeEvent(e);
        if (scene() != nullptr)
            fitInView(scene()->items()[0], Qt::KeepAspectRatio); }
};
#endif
 
Файл workerthread.cpp: 
#include "workerthread.h"
void MyThread::run() {
    while (!isInterruptionRequested()) {
        while (queue.empty()) {
            if (isInterruptionRequested())
                return;
            msleep(10); }
        Operation *oper_now = queue.front();
        queue.pop();
        cv::Mat image = oper_now->exec();
        emit signalGUI(image);
        delete oper_now; } }
void MyThread::push(Operation *oper) {
    queue.push(oper); }
 
Файл workerthread.h: 
#ifndef WORKERTHREAD_H
#define WORKERTHREAD_H
#include <QThread>
#include <queue>
#include "mainwindow.h"
#include "image_processing.h"
#include <opencv2/core/core.hpp>
class MainWindow;
class Operation;
class MyThread : public QThread {
    Q_OBJECT
public:
    std::queue<Operation *> queue;
    MyThread() {}
    void push(Operation *);
protected:
    virtual void run() override;
signals:
    void signalGUI(cv::Mat);
public slots:
    void terminateThread() {
        if (isRunning()) {
            requestInterruption();
            wait(); } }
};
#endif
 
Файл qrc_photored_translations.cpp: 
/****************************************************************************
** Resource object code
**
** Created by: The Resource Compiler for Qt version 6.5.1
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/
static const unsigned char qt_resource_data[] = {
  // D:/University/cs/sem3/cursach/photored/build/photored_ru.qm
  0x0,0x0,0xa,0x16,
  0x3c,
  0xb8,0x64,0x18,0xca,0xef,0x9c,0x95,0xcd,0x21,0x1c,0xbf,0x60,0xa1,0xbd,0xdd,0xa7,
  0x0,0x0,0x0,0x5,0x72,0x75,0x5f,0x52,0x55,0x42,0x0,0x0,0x0,0xf8,0x0,0x4,
  0x87,0x9b,0x0,0x0,0x3,0xa7,0x0,0x4,0xd0,0x25,0x0,0x0,0x5,0x76,0x0,0x5,
  0x98,0xc5,0x0,0x0,0x1,0x78,0x0,0x48,0x77,0x39,0x0,0x0,0x3,0x71,0x1,0xe9,
  0x30,0xe9,0x0,0x0,0x0,0x0,0x4,0x98,0x59,0xbc,0x0,0x0,0x0,0xc3,0x4,0xaa,
  0x2,0x13,0x0,0x0,0x0,0x61,0x4,0xcf,0x76,0x94,0x0,0x0,0x5,0x43,0x6,0x18,
  0xf6,0xf4,0x0,0x0,0x6,0x95,0x6,0x5b,0x8c,0x4,0x0,0x0,0x4,0x80,0x6,0xcc,
  0x40,0xa2,0x0,0x0,0x3,0x2a,0x8,0x4e,0xb2,0xf5,0x0,0x0,0x5,0xd5,0x8,0x67,
  0xff,0x55,0x0,0x0,0x0,0xee,0x8,0x98,0x13,0x5e,0x0,0x0,0x3,0xd4,0x9,0x70,
  0x63,0x15,0x0,0x0,0x6,0x4,0x9,0xca,0x9f,0x2e,0x0,0x0,0x7,0x2c,0xa,0x28,
  0x90,0xf9,0x0,0x0,0x4,0x4a,0xb,0x1d,0xa2,0x29,0x0,0x0,0x8,0x1a,0xc,0x6,
  0x9a,0x45,0x0,0x0,0x8,0x7c,0xc,0xc,0x45,0x95,0x0,0x0,0x1,0x3e,0xc,0xe,
  0xf0,0xf2,0x0,0x0,0x4,0xc1,0xc,0x4e,0x30,0xd8,0x0,0x0,0x5,0x9,0xc,0x74,
  0x97,0xa5,0x0,0x0,0x8,0xaf,0xc,0x8d,0x38,0xee,0x0,0x0,0x7,0x60,0xc,0xbb,
  0x1,0x73,0x0,0x0,0x7,0xa1,0xc,0xd2,0x78,0xe5,0x0,0x0,0x7,0xda,0xd,0x3,
  0xac,0xd3,0x0,0x0,0x5,0xa1,0xd,0xff,0xd4,0x53,0x0,0x0,0x4,0x13,0xe,0x39,
  0xa,0x2e,0x0,0x0,0x1,0xa7,0xf,0x38,0x3a,0xfe,0x0,0x0,0x2,0x67,0xf,0xb0,
  0x46,0x75,0x0,0x0,0x6,0x4e,0x69,0x0,0x0,0x8,0xe8,0x3,0x0,0x0,0x0,0x2e,
  0x4,0x1f,0x4,0x3e,0x4,0x36,0x4,0x30,0x4,0x3b,0x4,0x43,0x4,0x39,0x4,0x41,
  0x4,0x42,0x4,0x30,0x0,0x2c,0x0,0x20,0x4,0x32,0x4,0x32,0x4,0x35,0x4,0x34,
  0x4,0x38,0x4,0x42,0x4,0x35,0x0,0x20,0x4,0x38,0x4,0x3c,0x4,0x4f,0x8,0x0,
  0x0,0x0,0x0,0x6,0x0,0x0,0x0,0xd,0x4e,0x61,0x6d,0x65,0x20,0x69,0x73,0x20,
  0x65,0x6d,0x70,0x74,0x79,0x7,0x0,0x0,0x0,0x11,0x46,0x69,0x6c,0x74,0x65,0x72,
  0x4e,0x61,0x6d,0x65,0x5f,0x77,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,
  0x24,0x4,0x2d,0x4,0x42,0x4,0x3e,0x0,0x20,0x4,0x38,0x4,0x3c,0x4,0x4f,0x0,
  0x20,0x4,0x43,0x4,0x36,0x4,0x35,0x0,0x20,0x4,0x37,0x4,0x30,0x4,0x3d,0x4,
  0x4f,0x4,0x42,0x4,0x3e,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x18,0x54,
  0x68,0x69,0x73,0x20,0x6e,0x61,0x6d,0x65,0x20,0x61,0x6c,0x72,0x65,0x61,0x64,0x79,
  0x20,0x65,0x78,0x69,0x73,0x74,0x73,0x7,0x0,0x0,0x0,0x11,0x46,0x69,0x6c,0x74,
  0x65,0x72,0x4e,0x61,0x6d,0x65,0x5f,0x77,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,
  0x0,0x0,0xc,0x4,0x1e,0x4,0x42,0x4,0x3c,0x4,0x35,0x4,0x3d,0x4,0x30,0x8,
  0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x6,0x43,0x61,0x6e,0x73,0x65,0x6c,0x7,
  0x0,0x0,0x0,0x4,0x46,0x6f,0x72,0x6d,0x1,0x3,0x0,0x0,0x0,0x26,0x4,0x12,
  0x4,0x32,0x4,0x35,0x4,0x34,0x4,0x38,0x4,0x42,0x4,0x35,0x0,0x20,0x4,0x38,
  0x4,0x3c,0x4,0x4f,0x0,0x20,0x4,0x44,0x4,0x38,0x4,0x3b,0x4,0x4c,0x4,0x42,
  0x4,0x40,0x4,0x30,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x11,0x45,0x6e,
  0x74,0x65,0x72,0x20,0x66,0x69,0x6c,0x74,0x65,0x72,0x20,0x6e,0x61,0x6d,0x65,0x7,
  0x0,0x0,0x0,0x4,0x46,0x6f,0x72,0x6d,0x1,0x3,0x0,0x0,0x0,0x16,0x4,0x18,
  0x4,0x3c,0x4,0x4f,0x0,0x20,0x4,0x44,0x4,0x38,0x4,0x3b,0x4,0x4c,0x4,0x42,
  0x4,0x40,0x4,0x30,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0xb,0x46,0x69,
  0x6c,0x74,0x65,0x72,0x20,0x6e,0x61,0x6d,0x65,0x7,0x0,0x0,0x0,0x4,0x46,0x6f,
  0x72,0x6d,0x1,0x3,0x0,0x0,0x0,0x12,0x4,0x21,0x4,0x3e,0x4,0x45,0x4,0x40,
  0x4,0x30,0x4,0x3d,0x4,0x38,0x4,0x42,0x4,0x4c,0x8,0x0,0x0,0x0,0x0,0x6,
  0x0,0x0,0x0,0x4,0x53,0x61,0x76,0x65,0x7,0x0,0x0,0x0,0x4,0x46,0x6f,0x72,
  0x6d,0x1,0x3,0x0,0x0,0x0,0x6e,0x0,0x3c,0x0,0x68,0x0,0x74,0x0,0x6d,0x0,
  0x6c,0x0,0x3e,0x0,0x3c,0x0,0x68,0x0,0x65,0x0,0x61,0x0,0x64,0x0,0x2f,0x0,
  0x3e,0x0,0x3c,0x0,0x62,0x0,0x6f,0x0,0x64,0x0,0x79,0x0,0x3e,0x0,0x3c,0x0,
  0x70,0x0,0x3e,0x4,0x1f,0x4,0x3e,0x4,0x32,0x4,0x35,0x4,0x40,0x4,0x3d,0x4,
  0x43,0x4,0x42,0x4,0x4c,0x0,0x20,0x4,0x32,0x4,0x3b,0x4,0x35,0x4,0x32,0x4,
  0x3e,0x0,0x3c,0x0,0x2f,0x0,0x70,0x0,0x3e,0x0,0x3c,0x0,0x2f,0x0,0x62,0x0,
  0x6f,0x0,0x64,0x0,0x79,0x0,0x3e,0x0,0x3c,0x0,0x2f,0x0,0x68,0x0,0x74,0x0,
  0x6d,0x0,0x6c,0x0,0x3e,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x33,0x3c,
  0x68,0x74,0x6d,0x6c,0x3e,0x3c,0x68,0x65,0x61,0x64,0x2f,0x3e,0x3c,0x62,0x6f,0x64,
  0x79,0x3e,0x3c,0x70,0x3e,0x52,0x6f,0x74,0x61,0x74,0x65,0x20,0x6c,0x65,0x66,0x74,
  0x3c,0x2f,0x70,0x3e,0x3c,0x2f,0x62,0x6f,0x64,0x79,0x3e,0x3c,0x2f,0x68,0x74,0x6d,
  0x6c,0x3e,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,
  0x77,0x1,0x3,0x0,0x0,0x0,0x70,0x0,0x3c,0x0,0x68,0x0,0x74,0x0,0x6d,0x0,
  0x6c,0x0,0x3e,0x0,0x3c,0x0,0x68,0x0,0x65,0x0,0x61,0x0,0x64,0x0,0x2f,0x0,
  0x3e,0x0,0x3c,0x0,0x62,0x0,0x6f,0x0,0x64,0x0,0x79,0x0,0x3e,0x0,0x3c,0x0,
  0x70,0x0,0x3e,0x4,0x1f,0x4,0x3e,0x4,0x32,0x4,0x35,0x4,0x40,0x4,0x3d,0x4,
  0x43,0x4,0x42,0x4,0x4c,0x0,0x20,0x4,0x32,0x4,0x3f,0x4,0x40,0x4,0x30,0x4,
  0x32,0x4,0x3e,0x0,0x3c,0x0,0x2f,0x0,0x70,0x0,0x3e,0x0,0x3c,0x0,0x2f,0x0,
  0x62,0x0,0x6f,0x0,0x64,0x0,0x79,0x0,0x3e,0x0,0x3c,0x0,0x2f,0x0,0x68,0x0,
  0x74,0x0,0x6d,0x0,0x6c,0x0,0x3e,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,
  0x34,0x3c,0x68,0x74,0x6d,0x6c,0x3e,0x3c,0x68,0x65,0x61,0x64,0x2f,0x3e,0x3c,0x62,
  0x6f,0x64,0x79,0x3e,0x3c,0x70,0x3e,0x52,0x6f,0x74,0x61,0x74,0x65,0x20,0x72,0x69,
  0x67,0x68,0x74,0x3c,0x2f,0x70,0x3e,0x3c,0x2f,0x62,0x6f,0x64,0x79,0x3e,0x3c,0x2f,
  0x68,0x74,0x6d,0x6c,0x3e,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,
  0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x1e,0x4,0x14,0x4,0x3e,0x4,0x31,
  0x4,0x30,0x4,0x32,0x4,0x38,0x4,0x42,0x4,0x4c,0x0,0x20,0x4,0x44,0x4,0x38,
  0x4,0x3b,0x4,0x4c,0x4,0x42,0x4,0x40,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,
  0x0,0xa,0x41,0x64,0x64,0x20,0x66,0x69,0x6c,0x74,0x65,0x72,0x7,0x0,0x0,0x0,
  0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,
  0x12,0x4,0x1f,0x4,0x40,0x4,0x38,0x4,0x3c,0x4,0x35,0x4,0x3d,0x4,0x38,0x4,
  0x42,0x4,0x4c,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x5,0x41,0x70,0x70,
  0x6c,0x79,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,
  0x77,0x1,0x3,0x0,0x0,0x0,0xa,0x4,0x1d,0x4,0x30,0x4,0x37,0x4,0x30,0x4,
  0x34,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x4,0x42,0x61,0x63,0x6b,0x7,
  0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,
  0x0,0x0,0x0,0x16,0x4,0x11,0x4,0x35,0x4,0x3b,0x4,0x3e,0x4,0x40,0x4,0x43,
  0x4,0x41,0x4,0x41,0x4,0x3a,0x4,0x38,0x4,0x39,0x8,0x0,0x0,0x0,0x0,0x6,
  0x0,0x0,0x0,0xa,0x42,0x65,0x6c,0x61,0x72,0x75,0x73,0x69,0x61,0x6e,0x7,0x0,
  0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,
  0x0,0x0,0xe,0x4,0x2f,0x4,0x40,0x4,0x3a,0x4,0x3e,0x4,0x41,0x4,0x42,0x4,
  0x4c,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0xa,0x42,0x72,0x69,0x67,0x68,
  0x74,0x6e,0x65,0x73,0x73,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,
  0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x10,0x4,0x20,0x4,0x35,0x4,0x37,
  0x4,0x3a,0x4,0x3e,0x4,0x41,0x4,0x42,0x4,0x4c,0x8,0x0,0x0,0x0,0x0,0x6,
  0x0,0x0,0x0,0x7,0x43,0x6c,0x61,0x72,0x69,0x74,0x79,0x7,0x0,0x0,0x0,0xa,
  0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x1a,
  0x4,0x1a,0x4,0x3e,0x4,0x3d,0x4,0x42,0x4,0x40,0x4,0x30,0x4,0x41,0x4,0x42,
  0x4,0x3d,0x4,0x3e,0x4,0x41,0x4,0x42,0x4,0x4c,0x8,0x0,0x0,0x0,0x0,0x6,
  0x0,0x0,0x0,0x8,0x43,0x6f,0x6e,0x74,0x72,0x61,0x73,0x74,0x7,0x0,0x0,0x0,
  0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,
  0x1c,0x4,0x23,0x4,0x34,0x4,0x30,0x4,0x3b,0x4,0x38,0x4,0x42,0x4,0x4c,0x0,
  0x20,0x4,0x44,0x4,0x38,0x4,0x3b,0x4,0x4c,0x4,0x42,0x4,0x40,0x8,0x0,0x0,
  0x0,0x0,0x6,0x0,0x0,0x0,0xd,0x44,0x65,0x6c,0x65,0x74,0x65,0x20,0x66,0x69,
  0x6c,0x74,0x65,0x72,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,
  0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x14,0x4,0x10,0x4,0x3d,0x4,0x33,0x4,
  0x3b,0x4,0x38,0x4,0x39,0x4,0x41,0x4,0x3a,0x4,0x38,0x4,0x39,0x8,0x0,0x0,
  0x0,0x0,0x6,0x0,0x0,0x0,0x7,0x45,0x6e,0x67,0x6c,0x69,0x73,0x68,0x7,0x0,
  0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,
  0x0,0x0,0xe,0x4,0x2d,0x4,0x3a,0x4,0x41,0x4,0x3f,0x4,0x3e,0x4,0x40,0x4,
  0x42,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x6,0x45,0x78,0x70,0x6f,0x72,
  0x74,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,
  0x1,0x3,0x0,0x0,0x0,0x8,0x4,0x24,0x4,0x30,0x4,0x39,0x4,0x3b,0x8,0x0,
  0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x4,0x46,0x69,0x6c,0x65,0x7,0x0,0x0,0x0,
  0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,
  0xe,0x4,0x24,0x4,0x38,0x4,0x3b,0x4,0x4c,0x4,0x42,0x4,0x40,0x4,0x4b,0x8,
  0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x7,0x46,0x69,0x6c,0x74,0x65,0x72,0x73,
  0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,
  0x3,0x0,0x0,0x0,0x8,0x4,0x2f,0x4,0x37,0x4,0x4b,0x4,0x3a,0x8,0x0,0x0,
  0x0,0x0,0x6,0x0,0x0,0x0,0x8,0x4c,0x61,0x6e,0x67,0x75,0x61,0x67,0x65,0x7,
  0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,
  0x0,0x0,0x0,0x22,0x4,0x1d,0x4,0x3e,0x4,0x32,0x4,0x3e,0x4,0x35,0x0,0x20,
  0x4,0x38,0x4,0x37,0x4,0x3e,0x4,0x31,0x4,0x40,0x4,0x30,0x4,0x36,0x4,0x35,
  0x4,0x3d,0x4,0x38,0x4,0x35,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x9,
  0x4e,0x65,0x77,0x20,0x69,0x6d,0x61,0x67,0x65,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,
  0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x1a,0x4,0x1e,
  0x4,0x42,0x4,0x3a,0x4,0x40,0x4,0x4b,0x4,0x42,0x4,0x4c,0x0,0x20,0x4,0x3d,
  0x4,0x3e,0x4,0x32,0x4,0x3e,0x4,0x35,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,
  0x0,0xe,0x4f,0x70,0x65,0x6e,0x20,0x6e,0x65,0x77,0x20,0x69,0x6d,0x61,0x67,0x65,
  0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,
  0x3,0x0,0x0,0x0,0x58,0x4,0x1e,0x4,0x42,0x4,0x3a,0x4,0x40,0x4,0x4b,0x4,
  0x42,0x4,0x4c,0x0,0x20,0x4,0x3d,0x4,0x3e,0x4,0x32,0x4,0x3e,0x4,0x35,0x0,
  0x20,0x4,0x38,0x4,0x3b,0x4,0x38,0x0,0x20,0x4,0x40,0x4,0x30,0x4,0x3d,0x4,
  0x35,0x4,0x35,0x0,0x20,0x4,0x3e,0x4,0x42,0x4,0x3a,0x4,0x40,0x4,0x4b,0x4,
  0x42,0x4,0x3e,0x4,0x35,0x0,0x20,0x4,0x38,0x4,0x37,0x4,0x3e,0x4,0x31,0x4,
  0x40,0x4,0x30,0x4,0x36,0x4,0x35,0x4,0x3d,0x4,0x38,0x4,0x35,0x8,0x0,0x0,
  0x0,0x0,0x6,0x0,0x0,0x0,0x20,0x4f,0x70,0x65,0x6e,0x20,0x6e,0x65,0x77,0x20,
  0x69,0x6d,0x61,0x67,0x65,0x20,0x6f,0x72,0x20,0x72,0x65,0x63,0x65,0x6e,0x6c,0x79,
  0x20,0x6f,0x70,0x65,0x6e,0x65,0x64,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,
  0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0xe,0x4,0x20,0x4,0x43,
  0x4,0x41,0x4,0x41,0x4,0x3a,0x4,0x38,0x4,0x39,0x8,0x0,0x0,0x0,0x0,0x6,
  0x0,0x0,0x0,0x7,0x52,0x75,0x73,0x73,0x69,0x61,0x6e,0x7,0x0,0x0,0x0,0xa,
  0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x18,
  0x4,0x1d,0x4,0x30,0x4,0x41,0x4,0x4b,0x4,0x49,0x4,0x35,0x4,0x3d,0x4,0x3d,
  0x4,0x3e,0x4,0x41,0x4,0x42,0x4,0x4c,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,
  0x0,0xa,0x53,0x61,0x74,0x75,0x72,0x61,0x74,0x69,0x6f,0x6e,0x7,0x0,0x0,0x0,
  0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,
  0x12,0x4,0x1d,0x4,0x30,0x4,0x41,0x4,0x42,0x4,0x40,0x4,0x3e,0x4,0x39,0x4,
  0x3a,0x4,0x38,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x8,0x53,0x65,0x74,
  0x74,0x69,0x6e,0x67,0x73,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,
  0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x16,0x4,0x22,0x4,0x35,0x4,0x3c,
  0x4,0x3f,0x4,0x35,0x4,0x40,0x4,0x30,0x4,0x42,0x4,0x43,0x4,0x40,0x4,0x30,
  0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0xb,0x54,0x65,0x6d,0x70,0x65,0x72,
  0x61,0x74,0x75,0x72,0x65,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,
  0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x32,0x4,0x18,0x4,0x37,0x4,0x3e,
  0x4,0x31,0x4,0x40,0x4,0x30,0x4,0x36,0x4,0x35,0x4,0x3d,0x4,0x38,0x4,0x4f,
  0x0,0x20,0x0,0x28,0x0,0x2a,0x0,0x2e,0x0,0x70,0x0,0x6e,0x0,0x67,0x0,0x20,
  0x0,0x2a,0x0,0x2e,0x0,0x6a,0x0,0x70,0x0,0x67,0x0,0x29,0x8,0x0,0x0,0x0,
  0x0,0x6,0x0,0x0,0x0,0x14,0x49,0x6d,0x61,0x67,0x65,0x73,0x20,0x28,0x2a,0x2e,
  0x70,0x6e,0x67,0x20,0x2a,0x2e,0x6a,0x70,0x67,0x29,0x7,0x0,0x0,0x0,0x7,0x51,
  0x4f,0x62,0x6a,0x65,0x63,0x74,0x1,0x3,0x0,0x0,0x0,0xe,0x4,0x1e,0x4,0x42,
  0x4,0x3a,0x4,0x40,0x4,0x4b,0x4,0x42,0x4,0x4c,0x8,0x0,0x0,0x0,0x0,0x6,
  0x0,0x0,0x0,0x9,0x4f,0x70,0x65,0x6e,0x20,0x66,0x69,0x6c,0x65,0x7,0x0,0x0,
  0x0,0x7,0x51,0x4f,0x62,0x6a,0x65,0x63,0x74,0x1,0x3,0x0,0x0,0x0,0x14,0x4,
  0x21,0x4,0x3e,0x4,0x45,0x4,0x40,0x4,0x30,0x4,0x3d,0x4,0x35,0x4,0x3d,0x4,
  0x38,0x4,0x35,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x9,0x53,0x61,0x76,
  0x65,0x20,0x46,0x69,0x6c,0x65,0x7,0x0,0x0,0x0,0x7,0x51,0x4f,0x62,0x6a,0x65,
  0x63,0x74,0x1,0x88,0x0,0x0,0x0,0xd,0x11,0x1,0xfd,0x29,0xb,0xff,0x14,0x2,
  0x4,0xfd,0x2c,0xa,0x13,
    // D:/University/cs/sem3/cursach/photored/build/photored_be.qm
  0x0,0x0,0xa,0x3a,
  0x3c,
  0xb8,0x64,0x18,0xca,0xef,0x9c,0x95,0xcd,0x21,0x1c,0xbf,0x60,0xa1,0xbd,0xdd,0xa7,
  0x0,0x0,0x0,0x5,0x62,0x65,0x5f,0x42,0x59,0x42,0x0,0x0,0x0,0xf8,0x0,0x4,
  0x87,0x9b,0x0,0x0,0x3,0xc5,0x0,0x4,0xd0,0x25,0x0,0x0,0x5,0xa4,0x0,0x5,
  0x98,0xc5,0x0,0x0,0x1,0x9a,0x0,0x48,0x77,0x39,0x0,0x0,0x3,0x8d,0x1,0xe9,
  0x30,0xe9,0x0,0x0,0x0,0x0,0x4,0x98,0x59,0xbc,0x0,0x0,0x0,0xdb,0x4,0xaa,
  0x2,0x13,0x0,0x0,0x0,0x77,0x4,0xcf,0x76,0x94,0x0,0x0,0x5,0x67,0x6,0x18,
  0xf6,0xf4,0x0,0x0,0x6,0xc7,0x6,0x5b,0x8c,0x4,0x0,0x0,0x4,0xa2,0x6,0xcc,
  0x40,0xa2,0x0,0x0,0x3,0x4a,0x8,0x4e,0xb2,0xf5,0x0,0x0,0x6,0x3,0x8,0x67,
  0xff,0x55,0x0,0x0,0x1,0x6,0x8,0x98,0x13,0x5e,0x0,0x0,0x3,0xf2,0x9,0x70,
  0x63,0x15,0x0,0x0,0x6,0x32,0x9,0xca,0x9f,0x2e,0x0,0x0,0x7,0x54,0xa,0x28,
  0x90,0xf9,0x0,0x0,0x4,0x66,0xb,0x1d,0xa2,0x29,0x0,0x0,0x8,0x38,0xc,0x6,
  0x9a,0x45,0x0,0x0,0x8,0x92,0xc,0xc,0x45,0x95,0x0,0x0,0x1,0x5c,0xc,0xe,
  0xf0,0xf2,0x0,0x0,0x4,0xe3,0xc,0x4e,0x30,0xd8,0x0,0x0,0x5,0x2d,0xc,0x74,
  0x97,0xa5,0x0,0x0,0x8,0xcf,0xc,0x8d,0x38,0xee,0x0,0x0,0x7,0x86,0xc,0xbb,
  0x1,0x73,0x0,0x0,0x7,0xc5,0xc,0xd2,0x78,0xe5,0x0,0x0,0x7,0xf8,0xd,0x3,
  0xac,0xd3,0x0,0x0,0x5,0xcf,0xd,0xff,0xd4,0x53,0x0,0x0,0x4,0x2f,0xe,0x39,
  0xa,0x2e,0x0,0x0,0x1,0xc7,0xf,0x38,0x3a,0xfe,0x0,0x0,0x2,0x87,0xf,0xb0,
  0x46,0x75,0x0,0x0,0x6,0x72,0x69,0x0,0x0,0x9,0xc,0x3,0x0,0x0,0x0,0x44,
  0x4,0x1a,0x4,0x30,0x4,0x3b,0x4,0x56,0x0,0x20,0x4,0x3b,0x4,0x30,0x4,0x41,
  0x4,0x3a,0x4,0x30,0x0,0x2c,0x0,0x20,0x4,0x43,0x4,0x32,0x4,0x4f,0x4,0x34,
  0x4,0x37,0x4,0x56,0x4,0x46,0x4,0x35,0x0,0x20,0x4,0x3d,0x4,0x30,0x4,0x37,
  0x4,0x32,0x4,0x43,0x0,0x20,0x4,0x44,0x4,0x56,0x4,0x3b,0x4,0x4c,0x4,0x42,
  0x4,0x40,0x4,0x30,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0xd,0x4e,0x61,
  0x6d,0x65,0x20,0x69,0x73,0x20,0x65,0x6d,0x70,0x74,0x79,0x7,0x0,0x0,0x0,0x11,
  0x46,0x69,0x6c,0x74,0x65,0x72,0x4e,0x61,0x6d,0x65,0x5f,0x77,0x69,0x6e,0x64,0x6f,
  0x77,0x1,0x3,0x0,0x0,0x0,0x26,0x4,0x13,0x4,0x4d,0x4,0x42,0x4,0x30,0x0,
  0x20,0x4,0x56,0x4,0x3c,0x4,0x4f,0x0,0x20,0x4,0x5e,0x4,0x36,0x4,0x3e,0x0,
  0x20,0x4,0x37,0x4,0x30,0x4,0x3d,0x4,0x4f,0x4,0x42,0x4,0x30,0x8,0x0,0x0,
  0x0,0x0,0x6,0x0,0x0,0x0,0x18,0x54,0x68,0x69,0x73,0x20,0x6e,0x61,0x6d,0x65,
  0x20,0x61,0x6c,0x72,0x65,0x61,0x64,0x79,0x20,0x65,0x78,0x69,0x73,0x74,0x73,0x7,
  0x0,0x0,0x0,0x11,0x46,0x69,0x6c,0x74,0x65,0x72,0x4e,0x61,0x6d,0x65,0x5f,0x77,
  0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0xc,0x4,0x10,0x4,0x34,0x4,
  0x3c,0x4,0x35,0x4,0x3d,0x4,0x30,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,
  0x6,0x43,0x61,0x6e,0x73,0x65,0x6c,0x7,0x0,0x0,0x0,0x4,0x46,0x6f,0x72,0x6d,
  0x1,0x3,0x0,0x0,0x0,0x2c,0x4,0x23,0x4,0x32,0x4,0x4f,0x4,0x34,0x4,0x37,
  0x4,0x56,0x4,0x46,0x4,0x35,0x0,0x20,0x4,0x3d,0x4,0x30,0x4,0x37,0x4,0x32,
  0x4,0x43,0x0,0x20,0x4,0x44,0x4,0x56,0x4,0x3b,0x4,0x4c,0x4,0x42,0x4,0x40,
  0x4,0x30,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x11,0x45,0x6e,0x74,0x65,
  0x72,0x20,0x66,0x69,0x6c,0x74,0x65,0x72,0x20,0x6e,0x61,0x6d,0x65,0x7,0x0,0x0,
  0x0,0x4,0x46,0x6f,0x72,0x6d,0x1,0x3,0x0,0x0,0x0,0x1a,0x4,0x1d,0x4,0x30,
  0x4,0x37,0x4,0x32,0x4,0x30,0x0,0x20,0x4,0x44,0x4,0x56,0x4,0x3b,0x4,0x4c,
  0x4,0x42,0x4,0x40,0x4,0x30,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0xb,
  0x46,0x69,0x6c,0x74,0x65,0x72,0x20,0x6e,0x61,0x6d,0x65,0x7,0x0,0x0,0x0,0x4,
  0x46,0x6f,0x72,0x6d,0x1,0x3,0x0,0x0,0x0,0x10,0x4,0x17,0x4,0x30,0x4,0x45,
  0x4,0x30,0x4,0x32,0x4,0x30,0x4,0x46,0x4,0x4c,0x8,0x0,0x0,0x0,0x0,0x6,
  0x0,0x0,0x0,0x4,0x53,0x61,0x76,0x65,0x7,0x0,0x0,0x0,0x4,0x46,0x6f,0x72,
  0x6d,0x1,0x3,0x0,0x0,0x0,0x6e,0x0,0x3c,0x0,0x68,0x0,0x74,0x0,0x6d,0x0,
  0x6c,0x0,0x3e,0x0,0x3c,0x0,0x68,0x0,0x65,0x0,0x61,0x0,0x64,0x0,0x2f,0x0,
  0x3e,0x0,0x3c,0x0,0x62,0x0,0x6f,0x0,0x64,0x0,0x79,0x0,0x3e,0x0,0x3c,0x0,
  0x70,0x0,0x3e,0x4,0x1f,0x4,0x30,0x4,0x32,0x4,0x4f,0x4,0x40,0x4,0x3d,0x4,
  0x43,0x4,0x46,0x4,0x4c,0x0,0x20,0x4,0x43,0x4,0x3b,0x4,0x35,0x4,0x32,0x4,
  0x30,0x0,0x3c,0x0,0x2f,0x0,0x70,0x0,0x3e,0x0,0x3c,0x0,0x2f,0x0,0x62,0x0,
  0x6f,0x0,0x64,0x0,0x79,0x0,0x3e,0x0,0x3c,0x0,0x2f,0x0,0x68,0x0,0x74,0x0,
  0x6d,0x0,0x6c,0x0,0x3e,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x33,0x3c,
  0x68,0x74,0x6d,0x6c,0x3e,0x3c,0x68,0x65,0x61,0x64,0x2f,0x3e,0x3c,0x62,0x6f,0x64,
  0x79,0x3e,0x3c,0x70,0x3e,0x52,0x6f,0x74,0x61,0x74,0x65,0x20,0x6c,0x65,0x66,0x74,
  0x3c,0x2f,0x70,0x3e,0x3c,0x2f,0x62,0x6f,0x64,0x79,0x3e,0x3c,0x2f,0x68,0x74,0x6d,
  0x6c,0x3e,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,
  0x77,0x1,0x3,0x0,0x0,0x0,0x70,0x0,0x3c,0x0,0x68,0x0,0x74,0x0,0x6d,0x0,
  0x6c,0x0,0x3e,0x0,0x3c,0x0,0x68,0x0,0x65,0x0,0x61,0x0,0x64,0x0,0x2f,0x0,
  0x3e,0x0,0x3c,0x0,0x62,0x0,0x6f,0x0,0x64,0x0,0x79,0x0,0x3e,0x0,0x3c,0x0,
  0x70,0x0,0x3e,0x4,0x1f,0x4,0x30,0x4,0x32,0x4,0x4f,0x4,0x40,0x4,0x3d,0x4,
  0x43,0x4,0x46,0x4,0x4c,0x0,0x20,0x4,0x43,0x4,0x3f,0x4,0x40,0x4,0x30,0x4,
  0x32,0x4,0x30,0x0,0x3c,0x0,0x2f,0x0,0x70,0x0,0x3e,0x0,0x3c,0x0,0x2f,0x0,
  0x62,0x0,0x6f,0x0,0x64,0x0,0x79,0x0,0x3e,0x0,0x3c,0x0,0x2f,0x0,0x68,0x0,
  0x74,0x0,0x6d,0x0,0x6c,0x0,0x3e,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,
  0x34,0x3c,0x68,0x74,0x6d,0x6c,0x3e,0x3c,0x68,0x65,0x61,0x64,0x2f,0x3e,0x3c,0x62,
  0x6f,0x64,0x79,0x3e,0x3c,0x70,0x3e,0x52,0x6f,0x74,0x61,0x74,0x65,0x20,0x72,0x69,
  0x67,0x68,0x74,0x3c,0x2f,0x70,0x3e,0x3c,0x2f,0x62,0x6f,0x64,0x79,0x3e,0x3c,0x2f,
  0x68,0x74,0x6d,0x6c,0x3e,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,
  0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x1a,0x4,0x14,0x4,0x30,0x4,0x34,
  0x4,0x30,0x4,0x46,0x4,0x4c,0x0,0x20,0x4,0x44,0x4,0x56,0x4,0x3b,0x4,0x4c,
  0x4,0x42,0x4,0x40,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0xa,0x41,0x64,
  0x64,0x20,0x66,0x69,0x6c,0x74,0x65,0x72,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,
  0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x14,0x4,0x21,0x4,
  0x3a,0x4,0x30,0x4,0x40,0x4,0x4b,0x4,0x41,0x4,0x42,0x4,0x30,0x4,0x46,0x4,
  0x4c,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x5,0x41,0x70,0x70,0x6c,0x79,
  0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,
  0x3,0x0,0x0,0x0,0xa,0x4,0x1d,0x4,0x30,0x4,0x37,0x4,0x30,0x4,0x34,0x8,
  0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x4,0x42,0x61,0x63,0x6b,0x7,0x0,0x0,
  0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,
  0x0,0x14,0x4,0x11,0x4,0x35,0x4,0x3b,0x4,0x30,0x4,0x40,0x4,0x43,0x4,0x41,
  0x4,0x3a,0x4,0x30,0x4,0x4f,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0xa,
  0x42,0x65,0x6c,0x61,0x72,0x75,0x73,0x69,0x61,0x6e,0x7,0x0,0x0,0x0,0xa,0x4d,
  0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0xe,0x4,
  0x2f,0x4,0x40,0x4,0x3a,0x4,0x30,0x4,0x41,0x4,0x46,0x4,0x4c,0x8,0x0,0x0,
  0x0,0x0,0x6,0x0,0x0,0x0,0xa,0x42,0x72,0x69,0x67,0x68,0x74,0x6e,0x65,0x73,
  0x73,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,
  0x1,0x3,0x0,0x0,0x0,0x16,0x4,0x10,0x4,0x3a,0x4,0x43,0x4,0x40,0x4,0x30,
  0x4,0x42,0x4,0x3d,0x4,0x30,0x4,0x41,0x4,0x46,0x4,0x4c,0x8,0x0,0x0,0x0,
  0x0,0x6,0x0,0x0,0x0,0x7,0x43,0x6c,0x61,0x72,0x69,0x74,0x79,0x7,0x0,0x0,
  0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,
  0x0,0x1a,0x4,0x1a,0x4,0x30,0x4,0x3d,0x4,0x42,0x4,0x40,0x4,0x30,0x4,0x41,
  0x4,0x42,0x4,0x3d,0x4,0x30,0x4,0x41,0x4,0x46,0x4,0x4c,0x8,0x0,0x0,0x0,
  0x0,0x6,0x0,0x0,0x0,0x8,0x43,0x6f,0x6e,0x74,0x72,0x61,0x73,0x74,0x7,0x0,
  0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,
  0x0,0x0,0x1e,0x4,0x12,0x4,0x4b,0x4,0x34,0x4,0x30,0x4,0x3b,0x4,0x56,0x4,
  0x46,0x4,0x4c,0x0,0x20,0x4,0x44,0x4,0x56,0x4,0x3b,0x4,0x4c,0x4,0x42,0x4,
  0x40,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0xd,0x44,0x65,0x6c,0x65,0x74,
  0x65,0x20,0x66,0x69,0x6c,0x74,0x65,0x72,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,
  0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x14,0x4,0x10,0x4,
  0x3d,0x4,0x33,0x4,0x3b,0x4,0x56,0x4,0x39,0x4,0x41,0x4,0x3a,0x4,0x30,0x4,
  0x4f,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x7,0x45,0x6e,0x67,0x6c,0x69,
  0x73,0x68,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,
  0x77,0x1,0x3,0x0,0x0,0x0,0x18,0x4,0x2d,0x4,0x3a,0x4,0x41,0x4,0x3f,0x4,
  0x30,0x4,0x40,0x4,0x42,0x4,0x30,0x4,0x32,0x4,0x30,0x4,0x46,0x4,0x4c,0x8,
  0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x6,0x45,0x78,0x70,0x6f,0x72,0x74,0x7,
  0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,
  0x0,0x0,0x0,0x8,0x4,0x24,0x4,0x30,0x4,0x39,0x4,0x3b,0x8,0x0,0x0,0x0,
  0x0,0x6,0x0,0x0,0x0,0x4,0x46,0x69,0x6c,0x65,0x7,0x0,0x0,0x0,0xa,0x4d,
  0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0xe,0x4,
  0x24,0x4,0x56,0x4,0x3b,0x4,0x4c,0x4,0x42,0x4,0x40,0x4,0x4b,0x8,0x0,0x0,
  0x0,0x0,0x6,0x0,0x0,0x0,0x7,0x46,0x69,0x6c,0x74,0x65,0x72,0x73,0x7,0x0,
  0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,
  0x0,0x0,0x8,0x4,0x1c,0x4,0x3e,0x4,0x32,0x4,0x30,0x8,0x0,0x0,0x0,0x0,
  0x6,0x0,0x0,0x0,0x8,0x4c,0x61,0x6e,0x67,0x75,0x61,0x67,0x65,0x7,0x0,0x0,
  0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,
  0x0,0x18,0x4,0x1d,0x4,0x3e,0x4,0x32,0x4,0x4b,0x0,0x20,0x4,0x32,0x4,0x56,
  0x4,0x34,0x4,0x30,0x4,0x40,0x4,0x4b,0x4,0x41,0x8,0x0,0x0,0x0,0x0,0x6,
  0x0,0x0,0x0,0x9,0x4e,0x65,0x77,0x20,0x69,0x6d,0x61,0x67,0x65,0x7,0x0,0x0,
  0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,0x0,0x0,
  0x0,0x28,0x4,0x10,0x4,0x34,0x4,0x3a,0x4,0x40,0x4,0x4b,0x4,0x46,0x4,0x4c,
  0x0,0x20,0x4,0x3d,0x4,0x3e,0x4,0x32,0x4,0x4b,0x0,0x20,0x4,0x32,0x4,0x56,
  0x4,0x34,0x4,0x30,0x4,0x40,0x4,0x4b,0x4,0x41,0x8,0x0,0x0,0x0,0x0,0x6,
  0x0,0x0,0x0,0xe,0x4f,0x70,0x65,0x6e,0x20,0x6e,0x65,0x77,0x20,0x69,0x6d,0x61,
  0x67,0x65,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,
  0x77,0x1,0x3,0x0,0x0,0x0,0x4e,0x4,0x10,0x4,0x34,0x4,0x3a,0x4,0x40,0x4,
  0x4b,0x4,0x46,0x4,0x4c,0x0,0x20,0x4,0x3d,0x4,0x3e,0x4,0x32,0x4,0x4b,0x0,
  0x20,0x4,0x32,0x4,0x56,0x4,0x34,0x4,0x30,0x4,0x40,0x4,0x4b,0x4,0x41,0x0,
  0x20,0x4,0x46,0x4,0x56,0x0,0x20,0x4,0x3d,0x4,0x4f,0x4,0x34,0x4,0x30,0x4,
  0x5e,0x4,0x3d,0x4,0x30,0x0,0x20,0x4,0x30,0x4,0x34,0x4,0x3a,0x4,0x40,0x4,
  0x4b,0x4,0x42,0x4,0x4b,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x20,0x4f,
  0x70,0x65,0x6e,0x20,0x6e,0x65,0x77,0x20,0x69,0x6d,0x61,0x67,0x65,0x20,0x6f,0x72,
  0x20,0x72,0x65,0x63,0x65,0x6e,0x6c,0x79,0x20,0x6f,0x70,0x65,0x6e,0x65,0x64,0x7,
  0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,0x3,
  0x0,0x0,0x0,0xc,0x4,0x20,0x4,0x43,0x4,0x41,0x4,0x3a,0x4,0x30,0x4,0x4f,
  0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x7,0x52,0x75,0x73,0x73,0x69,0x61,
  0x6e,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,
  0x1,0x3,0x0,0x0,0x0,0x16,0x4,0x1d,0x4,0x30,0x4,0x41,0x4,0x4b,0x4,0x47,
  0x4,0x30,0x4,0x3d,0x4,0x30,0x4,0x41,0x4,0x46,0x4,0x4c,0x8,0x0,0x0,0x0,
  0x0,0x6,0x0,0x0,0x0,0xa,0x53,0x61,0x74,0x75,0x72,0x61,0x74,0x69,0x6f,0x6e,
  0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,0x6f,0x77,0x1,
  0x3,0x0,0x0,0x0,0xc,0x4,0x1d,0x4,0x30,0x4,0x3b,0x4,0x30,0x4,0x34,0x4,
  0x4b,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x8,0x53,0x65,0x74,0x74,0x69,
  0x6e,0x67,0x73,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,
  0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x16,0x4,0x22,0x4,0x4d,0x4,0x3c,0x4,0x3f,
  0x4,0x35,0x4,0x40,0x4,0x30,0x4,0x42,0x4,0x43,0x4,0x40,0x4,0x30,0x8,0x0,
  0x0,0x0,0x0,0x6,0x0,0x0,0x0,0xb,0x54,0x65,0x6d,0x70,0x65,0x72,0x61,0x74,
  0x75,0x72,0x65,0x7,0x0,0x0,0x0,0xa,0x4d,0x61,0x69,0x6e,0x57,0x69,0x6e,0x64,
  0x6f,0x77,0x1,0x3,0x0,0x0,0x0,0x2a,0x4,0x12,0x4,0x56,0x4,0x34,0x4,0x30,
  0x4,0x40,0x4,0x4b,0x4,0x41,0x4,0x4b,0x0,0x28,0x0,0x2a,0x0,0x2e,0x0,0x70,
  0x0,0x6e,0x0,0x67,0x0,0x20,0x0,0x2a,0x0,0x2e,0x0,0x6a,0x0,0x70,0x0,0x67,
  0x0,0x29,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x14,0x49,0x6d,0x61,0x67,
  0x65,0x73,0x20,0x28,0x2a,0x2e,0x70,0x6e,0x67,0x20,0x2a,0x2e,0x6a,0x70,0x67,0x29,
  0x7,0x0,0x0,0x0,0x7,0x51,0x4f,0x62,0x6a,0x65,0x63,0x74,0x1,0x3,0x0,0x0,
  0x0,0x18,0x4,0x10,0x4,0x34,0x4,0x3a,0x4,0x40,0x4,0x4b,0x4,0x46,0x4,0x4c,
  0x0,0x20,0x4,0x44,0x4,0x30,0x4,0x39,0x4,0x3b,0x8,0x0,0x0,0x0,0x0,0x6,
  0x0,0x0,0x0,0x9,0x4f,0x70,0x65,0x6e,0x20,0x66,0x69,0x6c,0x65,0x7,0x0,0x0,
  0x0,0x7,0x51,0x4f,0x62,0x6a,0x65,0x63,0x74,0x1,0x3,0x0,0x0,0x0,0x18,0x4,
  0x17,0x4,0x30,0x4,0x45,0x4,0x32,0x4,0x30,0x4,0x46,0x4,0x4c,0x0,0x20,0x4,
  0x44,0x4,0x30,0x4,0x39,0x4,0x3b,0x8,0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,
  0x9,0x53,0x61,0x76,0x65,0x20,0x46,0x69,0x6c,0x65,0x7,0x0,0x0,0x0,0x7,0x51,
  0x4f,0x62,0x6a,0x65,0x63,0x74,0x1,0x88,0x0,0x0,0x0,0xd,0x11,0x1,0xfd,0x29,
  0xb,0xff,0x14,0x2,0x4,0xfd,0x2c,0xa,0x13,
};
static const unsigned char qt_resource_name[] = {
  // i18n
  0x0,0x4,
  0x0,0x6,0xc4,0xee,
  0x0,0x69,
  0x0,0x31,0x0,0x38,0x0,0x6e,
    // photored_ru.qm
  0x0,0xe,
  0x8,0xbf,0xc9,0xbd,
  0x0,0x70,
  0x0,0x68,0x0,0x6f,0x0,0x74,0x0,0x6f,0x0,0x72,0x0,0x65,0x0,0x64,0x0,0x5f,0x0,0x72,0x0,0x75,0x0,0x2e,0x0,0x71,0x0,0x6d,
    // photored_be.qm
  0x0,0xe,
  0x8,0x8e,0xc9,0xbd,
  0x0,0x70,
  0x0,0x68,0x0,0x6f,0x0,0x74,0x0,0x6f,0x0,0x72,0x0,0x65,0x0,0x64,0x0,0x5f,0x0,0x62,0x0,0x65,0x0,0x2e,0x0,0x71,0x0,0x6d,
};
static const unsigned char qt_resource_struct[] = {
  // :
  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x1,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  // :/i18n
  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x2,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  // :/i18n/photored_be.qm
  0x0,0x0,0x0,0x30,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0xa,0x1a,
0x0,0x0,0x1,0x8c,0x53,0xaf,0x3c,0xd6,
  // :/i18n/photored_ru.qm
  0x0,0x0,0x0,0xe,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,
0x0,0x0,0x1,0x8c,0x53,0xaf,0x3c,0xd4,
};
#ifdef QT_NAMESPACE
#  define QT_RCC_PREPEND_NAMESPACE(name) ::QT_NAMESPACE::name
#  define QT_RCC_MANGLE_NAMESPACE0(x) x
#  define QT_RCC_MANGLE_NAMESPACE1(a, b) a##_##b
#  define QT_RCC_MANGLE_NAMESPACE2(a, b) QT_RCC_MANGLE_NAMESPACE1(a,b)
#  define QT_RCC_MANGLE_NAMESPACE(name) QT_RCC_MANGLE_NAMESPACE2( \
        QT_RCC_MANGLE_NAMESPACE0(name), QT_RCC_MANGLE_NAMESPACE0(QT_NAMESPACE))
#else
#   define QT_RCC_PREPEND_NAMESPACE(name) name
#   define QT_RCC_MANGLE_NAMESPACE(name) name
#endif
#ifdef QT_NAMESPACE
namespace QT_NAMESPACE {
#endif
bool qRegisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);
bool qUnregisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);
#ifdef QT_NAMESPACE }
#endif
int QT_RCC_MANGLE_NAMESPACE(qInitResources_photored_translations)();
int QT_RCC_MANGLE_NAMESPACE(qInitResources_photored_translations)() {
    int version = 3;
    QT_RCC_PREPEND_NAMESPACE(qRegisterResourceData)
        (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1; }
int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_photored_translations)();
int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_photored_translations)() {
    int version = 3;
    QT_RCC_PREPEND_NAMESPACE(qUnregisterResourceData)
       (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1; }
#ifdef __clang__
#   pragma clang diagnostic push
#   pragma clang diagnostic ignored "-Wexit-time-destructors"
#endif
namespace {
   struct initializer {
       initializer() { QT_RCC_MANGLE_NAMESPACE(qInitResources_photored_translations)(); }
       ~initializer() { QT_RCC_MANGLE_NAMESPACE(qCleanupResources_photored_translations)(); }
   } dummy; }
#ifdef __clang__
#   pragma clang diagnostic pop
#endif
 
Файл CMakeCXXCompilerId.cpp: 
/* This source file must have a .cpp extension so that all C++ compilers
   recognize the extension without flags.  Borland does not know .cxx for
   example.  */
#ifndef __cplusplus
# error "A C compiler has been selected for C++."
#endif
#if !defined(__has_include)
/* If the compiler does not have __has_include, pretend the answer is
   always no.  */
#  define __has_include(x) 0
#endif
/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
#if defined(__COMO__)
# define COMPILER_ID "Comeau"
  /* __COMO_VERSION__ = VRR */
# define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)
# define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)
#elif defined(__INTEL_COMPILER) || defined(__ICC)
# define COMPILER_ID "Intel"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# if defined(__GNUC__)
#  define SIMULATE_ID "GNU"
# endif
  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
     except that a few beta releases use the old format with V=2021.  */
# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
#  if defined(__INTEL_COMPILER_UPDATE)
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
#  else
#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
#  endif
# else
#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
   /* The third version component from --version is an update index,
      but no macro is provided for it.  */
#  define COMPILER_VERSION_PATCH DEC(0)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
# elif defined(__GNUG__)
#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif
#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
# define COMPILER_ID "IntelLLVM"
#if defined(_MSC_VER)
# define SIMULATE_ID "MSVC"
#endif
#if defined(__GNUC__)
# define SIMULATE_ID "GNU"
#endif
/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
 * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
 * VVVV is no smaller than the current year when a version is released.
 */
#if __INTEL_LLVM_COMPILER < 1000000L
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
#else
# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
#endif
#if defined(_MSC_VER)
  /* _MSC_VER = VVRR */
# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
#endif
#if defined(__GNUC__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#elif defined(__GNUG__)
# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
#endif
#if defined(__GNUC_MINOR__)
# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#endif
#if defined(__GNUC_PATCHLEVEL__)
# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#endif
#elif defined(__PATHCC__)
# define COMPILER_ID "PathScale"
# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
# endif
#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
# define COMPILER_ID "Embarcadero"
# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
#elif defined(__BORLANDC__)
# define COMPILER_ID "Borland"
  /* __BORLANDC__ = 0xVRR */
# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
# define COMPILER_ID "Watcom"
   /* __WATCOMC__ = VVRR */
# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif
#elif defined(__WATCOMC__)
# define COMPILER_ID "OpenWatcom"
   /* __WATCOMC__ = VVRP + 1100 */
# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
# endif
#elif defined(__SUNPRO_CC)
# define COMPILER_ID "SunPro"
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
# endif
#elif defined(__HP_aCC)
# define COMPILER_ID "HP"
  /* __HP_aCC = VVRRPP */
# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
#elif defined(__DECCXX)
# define COMPILER_ID "Compaq"
  /* __DECCXX_VER = VVRRTPPPP */
# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
# define COMPILER_ID "zOS"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
#elif defined(__open_xl__) && defined(__clang__)
# define COMPILER_ID "IBMClang"
# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)
#elif defined(__ibmxl__) && defined(__clang__)
# define COMPILER_ID "XLClang"
# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
# define COMPILER_ID "XL"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
# define COMPILER_ID "VisualAge"
  /* __IBMCPP__ = VRP */
# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
#elif defined(__NVCOMPILER)
# define COMPILER_ID "NVHPC"
# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
# if defined(__NVCOMPILER_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
# endif
#elif defined(__PGI)
# define COMPILER_ID "PGI"
# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
# endif
#elif defined(__clang__) && defined(__cray__)
# define COMPILER_ID "CrayClang"
# define COMPILER_VERSION_MAJOR DEC(__cray_major__)
# define COMPILER_VERSION_MINOR DEC(__cray_minor__)
# define COMPILER_VERSION_PATCH DEC(__cray_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__
#elif defined(_CRAYC)
# define COMPILER_ID "Cray"
# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
#elif defined(__TI_COMPILER_VERSION__)
# define COMPILER_ID "TI"
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
#elif defined(__CLANG_FUJITSU)
# define COMPILER_ID "FujitsuClang"
# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# define COMPILER_VERSION_INTERNAL_STR __clang_version__
#elif defined(__FUJITSU)
# define COMPILER_ID "Fujitsu"
# if defined(__FCC_version__)
#   define COMPILER_VERSION __FCC_version__
# elif defined(__FCC_major__)
#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
# endif
# if defined(__fcc_version)
#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
# elif defined(__FCC_VERSION)
#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
# endif
#elif defined(__ghs__)
# define COMPILER_ID "GHS"
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
# endif
#elif defined(__TASKING__)
# define COMPILER_ID "Tasking"
  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
#elif defined(__ORANGEC__)
# define COMPILER_ID "OrangeC"
# define COMPILER_VERSION_MAJOR DEC(__ORANGEC_MAJOR__)
# define COMPILER_VERSION_MINOR DEC(__ORANGEC_MINOR__)
# define COMPILER_VERSION_PATCH DEC(__ORANGEC_PATCHLEVEL__)
#elif defined(__SCO_VERSION__)
# define COMPILER_ID "SCO"
#elif defined(__ARMCC_VERSION) && !defined(__clang__)
# define COMPILER_ID "ARMCC"
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
#endif
#elif defined(__clang__) && defined(__apple_build_version__)
# define COMPILER_ID "AppleClang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
# define COMPILER_ID "ARMClang"
  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION/100   % 100)
# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
#elif defined(__clang__)
# define COMPILER_ID "Clang"
# if defined(_MSC_VER)
#  define SIMULATE_ID "MSVC"
# endif
# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
# endif
#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
# define COMPILER_ID "LCC"
# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
# if defined(__LCC_MINOR__)
#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
# endif
# if defined(__GNUC__) && defined(__GNUC_MINOR__)
#  define SIMULATE_ID "GNU"
#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
#  if defined(__GNUC_PATCHLEVEL__)
#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
#  endif
# endif
#elif defined(__GNUC__) || defined(__GNUG__)
# define COMPILER_ID "GNU"
# if defined(__GNUC__)
#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
# else
#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
# endif
#elif defined(_MSC_VER)
# define COMPILER_ID "MSVC"
  /* _MSC_VER = VVRR */
# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
# endif
#elif defined(_ADI_COMPILER)
# define COMPILER_ID "ADSP"
#if defined(__VERSIONNUM__)
  /* __VERSIONNUM__ = 0xVVRRPPTT */
#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
#endif
#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# define COMPILER_ID "IAR"
# if defined(__VER__) && defined(__ICCARM__)
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
# endif
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define COMPILER_ID "HP"
#else /* unknown compiler */
# define COMPILER_ID ""
#endif
/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
#ifdef SIMULATE_ID
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
#endif
#ifdef __QNXNTO__
char const* qnxnto = "INFO" ":" "qnxnto[]";
#endif
#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
#endif
#define STRINGIFY_HELPER(X) #X
#define STRINGIFY(X) STRINGIFY_HELPER(X)
/* Identify known platforms by name.  */
#if defined(__linux) || defined(__linux__) || defined(linux)
# define PLATFORM_ID "Linux"
#elif defined(__MSYS__)
# define PLATFORM_ID "MSYS"
#elif defined(__CYGWIN__)
# define PLATFORM_ID "Cygwin"
#elif defined(__MINGW32__)
# define PLATFORM_ID "MinGW"
#elif defined(__APPLE__)
# define PLATFORM_ID "Darwin"
#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
# define PLATFORM_ID "Windows"
#elif defined(__FreeBSD__) || defined(__FreeBSD)
# define PLATFORM_ID "FreeBSD"
#elif defined(__NetBSD__) || defined(__NetBSD)
# define PLATFORM_ID "NetBSD"
#elif defined(__OpenBSD__) || defined(__OPENBSD)
# define PLATFORM_ID "OpenBSD"
#elif defined(__sun) || defined(sun)
# define PLATFORM_ID "SunOS"
#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
# define PLATFORM_ID "AIX"
#elif defined(__hpux) || defined(__hpux__)
# define PLATFORM_ID "HP-UX"
#elif defined(__HAIKU__)
# define PLATFORM_ID "Haiku"
#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
# define PLATFORM_ID "BeOS"
#elif defined(__QNX__) || defined(__QNXNTO__)
# define PLATFORM_ID "QNX"
#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
# define PLATFORM_ID "Tru64"
#elif defined(__riscos) || defined(__riscos__)
# define PLATFORM_ID "RISCos"
#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
# define PLATFORM_ID "SINIX"
#elif defined(__UNIX_SV__)
# define PLATFORM_ID "UNIX_SV"
#elif defined(__bsdos__)
# define PLATFORM_ID "BSDOS"
#elif defined(_MPRAS) || defined(MPRAS)
# define PLATFORM_ID "MP-RAS"
#elif defined(__osf) || defined(__osf__)
# define PLATFORM_ID "OSF1"
#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
# define PLATFORM_ID "SCO_SV"
#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
# define PLATFORM_ID "ULTRIX"
#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
# define PLATFORM_ID "Xenix"
#elif defined(__WATCOMC__)
# if defined(__LINUX__)
#  define PLATFORM_ID "Linux"
# elif defined(__DOS__)
#  define PLATFORM_ID "DOS"
# elif defined(__OS2__)
#  define PLATFORM_ID "OS2"
# elif defined(__WINDOWS__)
#  define PLATFORM_ID "Windows3x"
# elif defined(__VXWORKS__)
#  define PLATFORM_ID "VxWorks"
# else /* unknown platform */
#  define PLATFORM_ID
# endif
#elif defined(__INTEGRITY)
# if defined(INT_178B)
#  define PLATFORM_ID "Integrity178"
# else /* regular Integrity */
#  define PLATFORM_ID "Integrity"
# endif
# elif defined(_ADI_COMPILER)
#  define PLATFORM_ID "ADSP"
#else /* unknown platform */
# define PLATFORM_ID
#endif
/* For windows compilers MSVC and Intel we can determine
   the architecture of the compiler being used.  This is because
   the compilers do not have flags that can change the architecture,
   but rather depend on which compiler is being used
*/
#if defined(_WIN32) && defined(_MSC_VER)
# if defined(_M_IA64)
#  define ARCHITECTURE_ID "IA64"
# elif defined(_M_ARM64EC)
#  define ARCHITECTURE_ID "ARM64EC"
# elif defined(_M_X64) || defined(_M_AMD64)
#  define ARCHITECTURE_ID "x64"
# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"
# elif defined(_M_ARM64)
#  define ARCHITECTURE_ID "ARM64"
# elif defined(_M_ARM)
#  if _M_ARM == 4
#   define ARCHITECTURE_ID "ARMV4I"
#  elif _M_ARM == 5
#   define ARCHITECTURE_ID "ARMV5I"
#  else
#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
#  endif
# elif defined(_M_MIPS)
#  define ARCHITECTURE_ID "MIPS"
# elif defined(_M_SH)
#  define ARCHITECTURE_ID "SHx"
# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif
#elif defined(__WATCOMC__)
# if defined(_M_I86)
#  define ARCHITECTURE_ID "I86"
# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"
# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif
#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# if defined(__ICCARM__)
#  define ARCHITECTURE_ID "ARM"
# elif defined(__ICCRX__)
#  define ARCHITECTURE_ID "RX"
# elif defined(__ICCRH850__)
#  define ARCHITECTURE_ID "RH850"
# elif defined(__ICCRL78__)
#  define ARCHITECTURE_ID "RL78"
# elif defined(__ICCRISCV__)
#  define ARCHITECTURE_ID "RISCV"
# elif defined(__ICCAVR__)
#  define ARCHITECTURE_ID "AVR"
# elif defined(__ICC430__)
#  define ARCHITECTURE_ID "MSP430"
# elif defined(__ICCV850__)
#  define ARCHITECTURE_ID "V850"
# elif defined(__ICC8051__)
#  define ARCHITECTURE_ID "8051"
# elif defined(__ICCSTM8__)
#  define ARCHITECTURE_ID "STM8"
# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif
#elif defined(__ghs__)
# if defined(__PPC64__)
#  define ARCHITECTURE_ID "PPC64"
# elif defined(__ppc__)
#  define ARCHITECTURE_ID "PPC"
# elif defined(__ARM__)
#  define ARCHITECTURE_ID "ARM"
# elif defined(__x86_64__)
#  define ARCHITECTURE_ID "x64"
# elif defined(__i386__)
#  define ARCHITECTURE_ID "X86"
# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif
#elif defined(__TI_COMPILER_VERSION__)
# if defined(__TI_ARM__)
#  define ARCHITECTURE_ID "ARM"
# elif defined(__MSP430__)
#  define ARCHITECTURE_ID "MSP430"
# elif defined(__TMS320C28XX__)
#  define ARCHITECTURE_ID "TMS320C28x"
# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
#  define ARCHITECTURE_ID "TMS320C6x"
# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif
# elif defined(__ADSPSHARC__)
#  define ARCHITECTURE_ID "SHARC"
# elif defined(__ADSPBLACKFIN__)
#  define ARCHITECTURE_ID "Blackfin"
#elif defined(__TASKING__)
# if defined(__CTC__) || defined(__CPTC__)
#  define ARCHITECTURE_ID "TriCore"
# elif defined(__CMCS__)
#  define ARCHITECTURE_ID "MCS"
# elif defined(__CARM__)
#  define ARCHITECTURE_ID "ARM"
# elif defined(__CARC__)
#  define ARCHITECTURE_ID "ARC"
# elif defined(__C51__)
#  define ARCHITECTURE_ID "8051"
# elif defined(__CPCP__)
#  define ARCHITECTURE_ID "PCP"
# else
#  define ARCHITECTURE_ID ""
# endif
#else
#  define ARCHITECTURE_ID
#endif
/* Convert integer to decimal digit literals.  */
#define DEC(n)                   \
  ('0' + (((n) / 10000000)%10)), \
  ('0' + (((n) / 1000000)%10)),  \
  ('0' + (((n) / 100000)%10)),   \
  ('0' + (((n) / 10000)%10)),    \
  ('0' + (((n) / 1000)%10)),     \
  ('0' + (((n) / 100)%10)),      \
  ('0' + (((n) / 10)%10)),       \
  ('0' +  ((n) % 10))
/* Convert integer to hex digit literals.  */
#define HEX(n)             \
  ('0' + ((n)>>28 & 0xF)), \
  ('0' + ((n)>>24 & 0xF)), \
  ('0' + ((n)>>20 & 0xF)), \
  ('0' + ((n)>>16 & 0xF)), \
  ('0' + ((n)>>12 & 0xF)), \
  ('0' + ((n)>>8  & 0xF)), \
  ('0' + ((n)>>4  & 0xF)), \
  ('0' + ((n)     & 0xF))
/* Construct a string literal encoding the version number. */
#ifdef COMPILER_VERSION
char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
/* Construct a string literal encoding the version number components. */
#elif defined(COMPILER_VERSION_MAJOR)
char const info_version[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
  COMPILER_VERSION_MAJOR,
# ifdef COMPILER_VERSION_MINOR
  '.', COMPILER_VERSION_MINOR,
#  ifdef COMPILER_VERSION_PATCH
   '.', COMPILER_VERSION_PATCH,
#   ifdef COMPILER_VERSION_TWEAK
    '.', COMPILER_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif
/* Construct a string literal encoding the internal version number. */
#ifdef COMPILER_VERSION_INTERNAL
char const info_version_internal[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
  'i','n','t','e','r','n','a','l','[',
  COMPILER_VERSION_INTERNAL,']','\0'};
#elif defined(COMPILER_VERSION_INTERNAL_STR)
char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
#endif
/* Construct a string literal encoding the version number components. */
#ifdef SIMULATE_VERSION_MAJOR
char const info_simulate_version[] = {
  'I', 'N', 'F', 'O', ':',
  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
  SIMULATE_VERSION_MAJOR,
# ifdef SIMULATE_VERSION_MINOR
  '.', SIMULATE_VERSION_MINOR,
#  ifdef SIMULATE_VERSION_PATCH
   '.', SIMULATE_VERSION_PATCH,
#   ifdef SIMULATE_VERSION_TWEAK
    '.', SIMULATE_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif
/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L
#  if defined(__INTEL_CXX11_MODE__)
#    if defined(__cpp_aggregate_nsdmi)
#      define CXX_STD 201402L
#    else
#      define CXX_STD 201103L
#    endif
#  else
#    define CXX_STD 199711L
#  endif
#elif defined(_MSC_VER) && defined(_MSVC_LANG)
#  define CXX_STD _MSVC_LANG
#else
#  define CXX_STD __cplusplus
#endif
const char* info_language_standard_default = "INFO" ":" "standard_default["
#if CXX_STD > 202002L
  "23"
#elif CXX_STD > 201703L
  "20"
#elif CXX_STD >= 201703L
  "17"
#elif CXX_STD >= 201402L
  "14"
#elif CXX_STD >= 201103L
  "11"
#else
  "98"
#endif
"]";
const char* info_language_extensions_default = "INFO" ":" "extensions_default["
#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
     defined(__TI_COMPILER_VERSION__)) &&                                     \
  !defined(__STRICT_ANSI__)
  "ON"
#else
  "OFF"
#endif
"]";
/*--------------------------------------------------------------------------*/
int main(int argc, char* argv[]) {
  int require = 0;
  require += info_compiler[argc];
  require += info_platform[argc];
  require += info_arch[argc];
#ifdef COMPILER_VERSION_MAJOR
  require += info_version[argc];
#endif
#ifdef COMPILER_VERSION_INTERNAL
  require += info_version_internal[argc];
#endif
#ifdef SIMULATE_ID
  require += info_simulate[argc];
#endif
#ifdef SIMULATE_VERSION_MAJOR
  require += info_simulate_version[argc];
#endif
#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
  require += info_cray[argc];
#endif
  require += info_language_standard_default[argc];
  require += info_language_extensions_default[argc];
  (void)argv;
  return require; }
 
Файл mocs_compilation.cpp: 
// This file is autogenerated. Changes will be overwritten.
#include "EWIEGA46WW/moc_iconautosizepushbutton.cpp"
#include "EWIEGA46WW/moc_mainwindow.cpp"
#include "EWIEGA46WW/moc_set_FilterName_window.cpp"
#include "EWIEGA46WW/moc_viewwithoutwheel.cpp"
#include "EWIEGA46WW/moc_workerthread.cpp"
 
Файл moc_predefs.h: 
#define __DBL_MIN_EXP__ (-1021)
#define __cpp_attributes 200809L
#define __cpp_nontype_template_parameter_auto 201606L
#define __UINT_LEAST16_MAX__ 0xffff
#define __FLT16_HAS_QUIET_NAN__ 1
#define __ATOMIC_ACQUIRE 2
#define __FLT128_MAX_10_EXP__ 4932
#define __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
#define __GCC_IEC_559_COMPLEX 2
#define __cpp_aggregate_nsdmi 201304L
#define __UINT_LEAST8_TYPE__ unsigned char
#define __SIZEOF_FLOAT80__ 16
#define __INTMAX_C(c) c ## LL
#define __CHAR_BIT__ 8
#define __MINGW32__ 1
#define __UINT8_MAX__ 0xff
#define __SCHAR_WIDTH__ 8
#define _WIN64 1
#define __WINT_MAX__ 0xffff
#define __FLT32_MIN_EXP__ (-125)
#define __cpp_static_assert 201411L
#define QT_NEEDS_QMAIN 1
#define QT_GUI_LIB 1
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __SIZE_MAX__ 0xffffffffffffffffULL
#define __WCHAR_MAX__ 0xffff
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
#define __GCC_ATOMIC_CHAR_LOCK_FREE 2
#define __GCC_IEC_559 2
#define __FLT32X_DECIMAL_DIG__ 17
#define __FLT_EVAL_METHOD__ 0
#define __cpp_binary_literals 201304L
#define __FLT64_DECIMAL_DIG__ 17
#define __cpp_noexcept_function_type 201510L
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
#define __cpp_variadic_templates 200704L
#define __UINT_FAST64_MAX__ 0xffffffffffffffffULL
#define __SIG_ATOMIC_TYPE__ int
#define __DBL_MIN_10_EXP__ (-307)
#define __FINITE_MATH_ONLY__ 0
#define __cpp_variable_templates 201304L
#define __FLT32X_MAX_EXP__ 1024
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
#define __FLT32_HAS_DENORM__ 1
#define __UINT_FAST8_MAX__ 0xff
#define __cpp_rvalue_reference 200610L
#define __cpp_nested_namespace_definitions 201411L
#define _stdcall __attribute__((__stdcall__))
#define __DEC64_MAX_EXP__ 385
#define __INT8_C(c) c
#define __INT_LEAST8_WIDTH__ 8
#define __cpp_variadic_using 201611L
#define __UINT_LEAST64_MAX__ 0xffffffffffffffffULL
#define __INT_LEAST8_MAX__ 0x7f
#define __cpp_capture_star_this 201603L
#define __SHRT_MAX__ 0x7fff
#define __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L
#define __FLT64X_MAX_10_EXP__ 4932
#define __cpp_if_constexpr 201606L
#define __LDBL_IS_IEC_60559__ 2
#define __FLT64X_HAS_QUIET_NAN__ 1
#define __UINT_LEAST8_MAX__ 0xff
#define __GCC_ATOMIC_BOOL_LOCK_FREE 2
#define __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
#define __UINTMAX_TYPE__ long long unsigned int
#define __DEC32_EPSILON__ 1E-6DF
#define __FLT_EVAL_METHOD_TS_18661_3__ 0
#define __UINT32_MAX__ 0xffffffffU
#define __GXX_EXPERIMENTAL_CXX0X__ 1
#define __DBL_DENORM_MIN__ double(4.94065645841246544176568792868221372e-324L)
#define __FLT128_MIN_EXP__ (-16381)
#define __WINT_MIN__ 0
#define __FLT128_MIN_10_EXP__ (-4931)
#define __FLT32X_IS_IEC_60559__ 2
#define __INT_LEAST16_WIDTH__ 16
#define MINGW_HAS_SECURE_API 1
#define __SCHAR_MAX__ 0x7f
#define __FLT128_MANT_DIG__ 113
#define __WCHAR_MIN__ 0
#define __INT64_C(c) c ## LL
#define __GCC_ATOMIC_POINTER_LOCK_FREE 2
#define _UNICODE 1
#define __FLT32X_MANT_DIG__ 53
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
#define __cpp_aligned_new 201606L
#define __FLT32_MAX_10_EXP__ 38
#define __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
#define __STDC_HOSTED__ 1
#define __DEC64_MIN_EXP__ (-382)
#define __WIN64 1
#define __cpp_decltype_auto 201304L
#define __DBL_DIG__ 15
#define __FLT32_DIG__ 6
#define __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
#define __GXX_WEAK__ 1
#define __SHRT_WIDTH__ 16
#define __FLT32_IS_IEC_60559__ 2
#define __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L
#define __DBL_IS_IEC_60559__ 2
#define __DEC32_MAX__ 9.999999E96DF
#define __cpp_threadsafe_static_init 200806L
#define __cpp_enumerator_attributes 201411L
#define __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
#define __FLT32X_HAS_INFINITY__ 1
#define __INT32_MAX__ 0x7fffffff
#define __FLT16_DIG__ 3
#define __INT_WIDTH__ 32
#define __SIZEOF_LONG__ 4
#define __UINT16_C(c) c
#define UNICODE 1
#define __DECIMAL_DIG__ 21
#define __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
#define __INT16_MAX__ 0x7fff
#define __FLT64_MIN_EXP__ (-1021)
#define __FLT64X_MIN_10_EXP__ (-4931)
#define __LDBL_HAS_QUIET_NAN__ 1
#define __FLT16_MIN_EXP__ (-13)
#define __FLT64_MANT_DIG__ 53
#define _REENTRANT 1
#define __FLT64X_MANT_DIG__ 64
#define __GNUC__ 12
#define _cdecl __attribute__((__cdecl__))
#define __GXX_RTTI 1
#define __MMX__ 1
#define __FLT_HAS_DENORM__ 1
#define __SIZEOF_LONG_DOUBLE__ 16
#define __BIGGEST_ALIGNMENT__ 16
#define __STDC_UTF_16__ 1
#define __FLT64_MAX_10_EXP__ 308
#define __FLT16_MAX_10_EXP__ 4
#define __cpp_delegating_constructors 200604L
#define __FLT32_HAS_INFINITY__ 1
#define __DBL_MAX__ double(1.79769313486231570814527423731704357e+308L)
#define _thiscall __attribute__((__thiscall__))
#define __cpp_raw_strings 200710L
#define __INT_FAST32_MAX__ 0x7fffffff
#define __WINNT 1
#define __DBL_HAS_INFINITY__ 1
#define __SIZEOF_FLOAT__ 4
#define __WINNT__ 1
#define __HAVE_SPECULATION_SAFE_VALUE 1
#define __cpp_fold_expressions 201603L
#define __DEC32_MIN_EXP__ (-94)
#define __INTPTR_WIDTH__ 64
#define __FLT64X_HAS_INFINITY__ 1
#define __UINT_LEAST32_MAX__ 0xffffffffU
#define __FLT32X_HAS_DENORM__ 1
#define __INT_FAST16_TYPE__ short int
#define __MMX_WITH_SSE__ 1
#define _fastcall __attribute__((__fastcall__))
#define __LDBL_HAS_DENORM__ 1
#define QT_WIDGETS_LIB 1
#define __SEG_GS 1
#define __cplusplus 201703L
#define __cpp_ref_qualifiers 200710L
#define __DEC32_MIN__ 1E-95DF
#define __DEPRECATED 1
#define __cpp_rvalue_references 200610L
#define __DBL_MAX_EXP__ 1024
#define __WCHAR_WIDTH__ 16
#define __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
#define __DEC128_EPSILON__ 1E-33DL
#define __FLT16_DECIMAL_DIG__ 5
#define __SSE2_MATH__ 1
#define __ATOMIC_HLE_RELEASE 131072
#define __WIN32__ 1
#define __PTRDIFF_MAX__ 0x7fffffffffffffffLL
#define __amd64 1
#define __ATOMIC_HLE_ACQUIRE 65536
#define __GNUG__ 12
#define __LONG_LONG_MAX__ 0x7fffffffffffffffLL
#define __SIZEOF_SIZE_T__ 8
#define __cpp_nsdmi 200809L
#define __FLT64X_MIN_EXP__ (-16381)
#define __SIZEOF_WINT_T__ 2
#define __LONG_LONG_WIDTH__ 64
#define __cpp_initializer_lists 200806L
#define __FLT32_MAX_EXP__ 128
#define __cpp_hex_float 201603L
#define __GXX_ABI_VERSION 1017
#define __FLT128_HAS_INFINITY__ 1
#define __FLT_MIN_EXP__ (-125)
#define __x86_64 1
#define __cpp_lambdas 200907L
#define __INT_FAST64_TYPE__ long long int
#define __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
#define __cpp_template_auto 201606L
#define __DBL_MIN__ double(2.22507385850720138309023271733240406e-308L)
#define __FLT16_DENORM_MIN__ 5.96046447753906250000000000000000000e-8F16
#define __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
#define __FLT64X_NORM_MAX__ 1.18973149535723176502126385303097021e+4932F64x
#define __SIZEOF_POINTER__ 8
#define __SIZE_TYPE__ long long unsigned int
#define __DBL_HAS_QUIET_NAN__ 1
#define __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
#define __DECIMAL_BID_FORMAT__ 1
#define __GXX_TYPEINFO_EQUALITY_INLINE 0
#define __FLT64_MIN_10_EXP__ (-307)
#define __FLT16_MIN_10_EXP__ (-4)
#define __FLT64X_DECIMAL_DIG__ 21
#define __DEC128_MIN__ 1E-6143DL
#define __REGISTER_PREFIX__ 
#define __UINT16_MAX__ 0xffff
#define __cdecl __attribute__((__cdecl__))
#define __LDBL_HAS_INFINITY__ 1
#define __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
#define __UINT8_TYPE__ unsigned char
#define __FLT_DIG__ 6
#define __NO_INLINE__ 1
#define __DEC_EVAL_METHOD__ 2
#define __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
#define __FLT_MANT_DIG__ 24
#define __LDBL_DECIMAL_DIG__ 21
#define __VERSION__ "12.2.0"
#define __UINT64_C(c) c ## ULL
#define __cpp_unicode_characters 201411L
#define _WIN32 1
#define __SEH__ 1
#define __INT_LEAST32_MAX__ 0x7fffffff
#define __GCC_ATOMIC_INT_LOCK_FREE 2
#define __FLT128_MAX_EXP__ 16384
#define __FLT32_MANT_DIG__ 24
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define SIZEOF_DPTR (sizeof(void*))
#define __FLT32X_MIN_EXP__ (-1021)
#define __cpp_aggregate_bases 201603L
#define __FLT128_HAS_DENORM__ 1
#define __FLT32_DECIMAL_DIG__ 9
#define __FLT128_DIG__ 33
#define __INT32_C(c) c
#define __DEC64_EPSILON__ 1E-15DD
#define __ORDER_PDP_ENDIAN__ 3412
#define __DEC128_MIN_EXP__ (-6142)
#define __INT_FAST32_TYPE__ int
#define __UINT_LEAST16_TYPE__ short unsigned int
#define __DBL_HAS_DENORM__ 1
#define __cpp_rtti 199711L
#define __UINT64_MAX__ 0xffffffffffffffffULL
#define __FLT_IS_IEC_60559__ 2
#define __GNUC_WIDE_EXECUTION_CHARSET_NAME "UTF-16LE"
#define __FLT64X_DIG__ 18
#define __INT8_TYPE__ signed char
#define __cpp_digit_separators 201309L
#define __GCC_ASM_FLAG_OUTPUTS__ 1
#define __UINT32_TYPE__ unsigned int
#define __FLT_RADIX__ 2
#define __INT_LEAST16_TYPE__ short int
#define __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L
#define __UINTMAX_C(c) c ## ULL
#define __GLIBCXX_BITSIZE_INT_N_0 128
#define __k8 1
#define __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
#define __SIG_ATOMIC_MAX__ 0x7fffffff
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
#define __USER_LABEL_PREFIX__ 
#define __SIZEOF_PTRDIFF_T__ 8
#define __LDBL_DIG__ 18
#define __FLT64_IS_IEC_60559__ 2
#define __x86_64__ 1
#define __FLT16_IS_IEC_60559__ 2
#define __FLT16_MAX_EXP__ 16
#define __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
#define __MSVCRT__ 1
#define __INT_FAST16_MAX__ 0x7fff
#define __GCC_CONSTRUCTIVE_SIZE 64
#define __FLT64_DIG__ 15
#define __UINT_FAST32_MAX__ 0xffffffffU
#define __UINT_LEAST64_TYPE__ long long unsigned int
#define __FLT16_EPSILON__ 9.76562500000000000000000000000000000e-4F16
#define __FLT_HAS_QUIET_NAN__ 1
#define __FLT_MAX_10_EXP__ 38
#define __LONG_MAX__ 0x7fffffffL
#define __FLT64X_HAS_DENORM__ 1
#define __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
#define __FLT_HAS_INFINITY__ 1
#define __GNUC_EXECUTION_CHARSET_NAME "UTF-8"
#define __cpp_unicode_literals 200710L
#define __UINT_FAST16_TYPE__ short unsigned int
#define __DEC64_MAX__ 9.999999999999999E384DD
#define __INT_FAST32_WIDTH__ 32
#define __CHAR16_TYPE__ short unsigned int
#define __PRAGMA_REDEFINE_EXTNAME 1
#define __SIZE_WIDTH__ 64
#define __SEG_FS 1
#define __INT_LEAST16_MAX__ 0x7fff
#define __FLT16_NORM_MAX__ 6.55040000000000000000000000000000000e+4F16
#define __DEC64_MANT_DIG__ 16
#define __INT64_MAX__ 0x7fffffffffffffffLL
#define __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
#define __SIG_ATOMIC_WIDTH__ 32
#define __INT_LEAST64_TYPE__ long long int
#define __INT16_TYPE__ short int
#define __INT_LEAST8_TYPE__ signed char
#define __FLT16_MAX__ 6.55040000000000000000000000000000000e+4F16
#define __cpp_structured_bindings 201606L
#define __SIZEOF_INT__ 4
#define __DEC32_MAX_EXP__ 97
#define __INT_FAST8_MAX__ 0x7f
#define __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
#define __INTPTR_MAX__ 0x7fffffffffffffffLL
#define __cpp_sized_deallocation 201309L
#define __cpp_guaranteed_copy_elision 201606L
#define __FLT64_HAS_QUIET_NAN__ 1
#define __stdcall __attribute__((__stdcall__))
#define __FLT32_MIN_10_EXP__ (-37)
#define __EXCEPTIONS 1
#define __GXX_MERGED_TYPEINFO_NAMES 0
#define __PTRDIFF_WIDTH__ 64
#define __LDBL_MANT_DIG__ 64
#define __cpp_range_based_for 201603L
#define __FLT64_HAS_INFINITY__ 1
#define __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
#define __FLT16_HAS_INFINITY__ 1
#define __STDCPP_DEFAULT_NEW_ALIGNMENT__ 16
#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
#define __GCC_ATOMIC_LONG_LOCK_FREE 2
#define __cpp_nontype_template_args 201411L
#define __DEC32_MANT_DIG__ 7
#define __cpp_return_type_deduction 201304L
#define __k8__ 1
#define __INTPTR_TYPE__ long long int
#define __UINT16_TYPE__ short unsigned int
#define __WCHAR_TYPE__ short unsigned int
#define __pic__ 1
#define __UINTPTR_MAX__ 0xffffffffffffffffULL
#define __INT_FAST64_WIDTH__ 64
#define __cpp_decltype 200707L
#define __INT_FAST64_MAX__ 0x7fffffffffffffffLL
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define __FLT_NORM_MAX__ 3.40282346638528859811704183484516925e+38F
#define __FLT64X_MAX_EXP__ 16384
#define __UINT_FAST64_TYPE__ long long unsigned int
#define __cpp_inline_variables 201606L
#define __INT_MAX__ 0x7fffffff
#define WIN32 1
#define __code_model_medium__ 1
#define __INT64_TYPE__ long long int
#define __FLT_MAX_EXP__ 128
#define WIN64 1
#define __ORDER_BIG_ENDIAN__ 4321
#define __DBL_MANT_DIG__ 53
#define __cpp_inheriting_constructors 201511L
#define QT_CORE_LIB 1
#define __SIZEOF_FLOAT128__ 16
#define __INT_LEAST64_MAX__ 0x7fffffffffffffffLL
#define __DEC64_MIN__ 1E-383DD
#define __WINT_TYPE__ short unsigned int
#define __UINT_LEAST32_TYPE__ unsigned int
#define __SIZEOF_SHORT__ 2
#define __FLT32_NORM_MAX__ 3.40282346638528859811704183484516925e+38F32
#define __SSE__ 1
#define __LDBL_MIN_EXP__ (-16381)
#define __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
#define __amd64__ 1
#define __WINT_WIDTH__ 16
#define __INT_LEAST64_WIDTH__ 64
#define __LDBL_MAX_EXP__ 16384
#define __FLT32X_MAX_10_EXP__ 308
#define __WIN32 1
#define __SIZEOF_INT128__ 16
#define __FLT16_MIN__ 6.10351562500000000000000000000000000e-5F16
#define __FLT64X_IS_IEC_60559__ 2
#define __WCHAR_UNSIGNED__ 1
#define __LDBL_MAX_10_EXP__ 4932
#define __ATOMIC_RELAXED 0
#define __DBL_EPSILON__ double(2.22044604925031308084726333618164062e-16L)
#define __thiscall __attribute__((__thiscall__))
#define __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
#define __UINT8_C(c) c
#define __FLT64_MAX_EXP__ 1024
#define __INT_LEAST32_TYPE__ int
#define __SIZEOF_WCHAR_T__ 2
#define __GNUC_PATCHLEVEL__ 0
#define __FLT128_NORM_MAX__ 1.18973149535723176508575932662800702e+4932F128
#define __FLT64_NORM_MAX__ 1.79769313486231570814527423731704357e+308F64
#define __FLT128_HAS_QUIET_NAN__ 1
#define __INTMAX_MAX__ 0x7fffffffffffffffLL
#define __INT_FAST8_TYPE__ signed char
#define __fastcall __attribute__((__fastcall__))
#define __cpp_namespace_attributes 201411L
#define __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
#define __STDCPP_THREADS__ 1
#define __GNUC_STDC_INLINE__ 1
#define __FLT64_HAS_DENORM__ 1
#define __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
#define __FLT16_HAS_DENORM__ 1
#define __DBL_DECIMAL_DIG__ 17
#define __STDC_UTF_32__ 1
#define __INT_FAST8_WIDTH__ 8
#define __FXSR__ 1
#define __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
#define __DBL_NORM_MAX__ double(1.79769313486231570814527423731704357e+308L)
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __MINGW64__ 1
#define __GCC_DESTRUCTIVE_SIZE 64
#define __INTMAX_WIDTH__ 64
#define __cpp_runtime_arrays 198712L
#define __UINT64_TYPE__ long long unsigned int
#define __UINT32_C(c) c ## U
#define __cpp_alias_templates 200704L
#define WINNT 1
#define __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
#define __FLT128_IS_IEC_60559__ 2
#define __INT8_MAX__ 0x7f
#define __LONG_WIDTH__ 32
#define __PIC__ 1
#define __UINT_FAST32_TYPE__ unsigned int
#define _ENABLE_EXTENDED_ALIGNED_STORAGE 1
#define __FLT16_MANT_DIG__ 11
#define __FLT32X_NORM_MAX__ 1.79769313486231570814527423731704357e+308F32x
#define __CHAR32_TYPE__ unsigned int
#define __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
#define __cpp_constexpr 201603L
#define __SSE2__ 1
#define __cpp_deduction_guides 201703L
#define __INT32_TYPE__ int
#define __SIZEOF_DOUBLE__ 8
#define __cpp_exceptions 199711L
#define __FLT_MIN_10_EXP__ (-37)
#define __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
#define __INT_LEAST32_WIDTH__ 32
#define __INTMAX_TYPE__ long long int
#define _INTEGRAL_MAX_BITS 64
#define __DEC128_MAX_EXP__ 6145
#define __FLT32X_HAS_QUIET_NAN__ 1
#define __ATOMIC_CONSUME 1
#define __GNUC_MINOR__ 2
#define __GLIBCXX_TYPE_INT_N_0 __int128
#define __INT_FAST16_WIDTH__ 16
#define __UINTMAX_MAX__ 0xffffffffffffffffULL
#define __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
#define __cpp_template_template_args 201611L
#define __DBL_MAX_10_EXP__ 308
#define __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L
#define __INT16_C(c) c
#define __STDC__ 1
#define __FLT32X_DIG__ 15
#define __PTRDIFF_TYPE__ long long int
#define __ATOMIC_SEQ_CST 5
#define __FLT32X_MIN_10_EXP__ (-307)
#define __UINTPTR_TYPE__ long long unsigned int
#define __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
#define __DEC128_MANT_DIG__ 34
#define __LDBL_MIN_10_EXP__ (-4931)
#define __cpp_generic_lambdas 201304L
#define __SSE_MATH__ 1
#define __SIZEOF_LONG_LONG__ 8
#define __cpp_user_defined_literals 200809L
#define __FLT128_DECIMAL_DIG__ 36
#define __GCC_ATOMIC_LLONG_LOCK_FREE 2
#define __FLT32_HAS_QUIET_NAN__ 1
#define __FLT_DECIMAL_DIG__ 9
#define __UINT_FAST16_MAX__ 0xffff
#define __LDBL_NORM_MAX__ 1.18973149535723176502126385303097021e+4932L
#define __GCC_ATOMIC_SHORT_LOCK_FREE 2
#define __UINT_FAST8_TYPE__ unsigned char
#define __WIN64__ 1
#define __cpp_init_captures 201304L
#define __ATOMIC_ACQ_REL 4
#define __ATOMIC_RELEASE 3
#define __declspec(x) __attribute__((x))
 
Файл moc_iconautosizepushbutton.cpp: 
/****************************************************************************
** Meta object code from reading C++ file 'iconautosizepushbutton.h'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.5.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/
#include "../../../iconautosizepushbutton.h"
#include <QtCore/qmetatype.h>
#if __has_include(<QtCore/qtmochelpers.h>)
#include <QtCore/qtmochelpers.h>
#else
QT_BEGIN_MOC_NAMESPACE
#endif
#include <memory>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'iconautosizepushbutton.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.5.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif
#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {
#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSIconautosizePushButtonENDCLASS_t {};
static constexpr auto qt_meta_stringdata_CLASSIconautosizePushButtonENDCLASS = QtMocHelpers::stringData(
    "IconautosizePushButton",
    "resizeEvent",
    "",
    "QResizeEvent*",
    "e"
);
#else  // !QT_MOC_HAS_STRING_DATA
struct qt_meta_stringdata_CLASSIconautosizePushButtonENDCLASS_t {
    uint offsetsAndSizes[10];
    char stringdata0[23];
    char stringdata1[12];
    char stringdata2[1];
    char stringdata3[14];
    char stringdata4[2];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_CLASSIconautosizePushButtonENDCLASS_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_CLASSIconautosizePushButtonENDCLASS_t qt_meta_stringdata_CLASSIconautosizePushButtonENDCLASS = { {
        QT_MOC_LITERAL(0, 22),  // "IconautosizePushButton"
        QT_MOC_LITERAL(23, 11),  // "resizeEvent"
        QT_MOC_LITERAL(35, 0),  // ""
        QT_MOC_LITERAL(36, 13),  // "QResizeEvent*"
        QT_MOC_LITERAL(50, 1)   // "e"
    },
    "IconautosizePushButton",
    "resizeEvent",
    "",
    "QResizeEvent*",
    "e"
};
#undef QT_MOC_LITERAL
#endif // !QT_MOC_HAS_STRING_DATA
} // unnamed namespace
Q_CONSTINIT static const uint qt_meta_data_CLASSIconautosizePushButtonENDCLASS[] = {
 // content:
      11,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount
 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    1,   20,    2, 0x0a,    1 /* Public */,
 // slots: parameters
    QMetaType::Void, 0x80000000 | 3,    4,
       0        // eod
};
Q_CONSTINIT const QMetaObject IconautosizePushButton::staticMetaObject = { {
    QMetaObject::SuperData::link<QPushButton::staticMetaObject>(),
    qt_meta_stringdata_CLASSIconautosizePushButtonENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSIconautosizePushButtonENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSIconautosizePushButtonENDCLASS_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<IconautosizePushButton, std::true_type>,
        // method 'resizeEvent'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<QResizeEvent *, std::false_type>
    >,
    nullptr
} };
void IconautosizePushButton::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a) {
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<IconautosizePushButton *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->resizeEvent((*reinterpret_cast< std::add_pointer_t<QResizeEvent*>>(_a[1]))); break;
        default: ; } } }
const QMetaObject *IconautosizePushButton::metaObject() const {
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject; }
void *IconautosizePushButton::qt_metacast(const char *_clname) {
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSIconautosizePushButtonENDCLASS.stringdata0))
        return static_cast<void*>(this);
    return QPushButton::qt_metacast(_clname); }
int IconautosizePushButton::qt_metacall(QMetaObject::Call _c, int _id, void **_a) {
    _id = QPushButton::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 1; }
    return _id; }
QT_WARNING_POP
 
Файл moc_mainwindow.cpp: 
/****************************************************************************
** Meta object code from reading C++ file 'mainwindow.h'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.5.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/
#include "../../../mainwindow.h"
#include <QtCore/qmetatype.h>
#if __has_include(<QtCore/qtmochelpers.h>)
#include <QtCore/qtmochelpers.h>
#else
QT_BEGIN_MOC_NAMESPACE
#endif
#include <memory>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'mainwindow.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.5.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif
#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {
#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSMainWindowENDCLASS_t {};
static constexpr auto qt_meta_stringdata_CLASSMainWindowENDCLASS = QtMocHelpers::stringData(
    "MainWindow",
    "change_image",
    "",
    "cv::Mat",
    "set_rec_opened_butts",
    "start_proc",
    "QString&",
    "main_proc",
    "set_slider_limits",
    "end_main_proc",
    "rotate_left",
    "rotate_right",
    "save_image",
    "set_new_image",
    "set_filters_buttons",
    "set_deleteF_enabled",
    "std::string",
    "back_from_filters",
    "apply_filter",
    "delete_filter",
    "add_filter",
    "show_pressed_button",
    "change_language",
    "const char*"
);
#else  // !QT_MOC_HAS_STRING_DATA
struct qt_meta_stringdata_CLASSMainWindowENDCLASS_t {
    uint offsetsAndSizes[48];
    char stringdata0[11];
    char stringdata1[13];
    char stringdata2[1];
    char stringdata3[8];
    char stringdata4[21];
    char stringdata5[11];
    char stringdata6[9];
    char stringdata7[10];
    char stringdata8[18];
    char stringdata9[14];
    char stringdata10[12];
    char stringdata11[13];
    char stringdata12[11];
    char stringdata13[14];
    char stringdata14[20];
    char stringdata15[20];
    char stringdata16[12];
    char stringdata17[18];
    char stringdata18[13];
    char stringdata19[14];
    char stringdata20[11];
    char stringdata21[20];
    char stringdata22[16];
    char stringdata23[12];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_CLASSMainWindowENDCLASS_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_CLASSMainWindowENDCLASS_t qt_meta_stringdata_CLASSMainWindowENDCLASS = { {
        QT_MOC_LITERAL(0, 10),  // "MainWindow"
        QT_MOC_LITERAL(11, 12),  // "change_image"
        QT_MOC_LITERAL(24, 0),  // ""
        QT_MOC_LITERAL(25, 7),  // "cv::Mat"
        QT_MOC_LITERAL(33, 20),  // "set_rec_opened_butts"
        QT_MOC_LITERAL(54, 10),  // "start_proc"
        QT_MOC_LITERAL(65, 8),  // "QString&"
        QT_MOC_LITERAL(74, 9),  // "main_proc"
        QT_MOC_LITERAL(84, 17),  // "set_slider_limits"
        QT_MOC_LITERAL(102, 13),  // "end_main_proc"
        QT_MOC_LITERAL(116, 11),  // "rotate_left"
        QT_MOC_LITERAL(128, 12),  // "rotate_right"
        QT_MOC_LITERAL(141, 10),  // "save_image"
        QT_MOC_LITERAL(152, 13),  // "set_new_image"
        QT_MOC_LITERAL(166, 19),  // "set_filters_buttons"
        QT_MOC_LITERAL(186, 19),  // "set_deleteF_enabled"
        QT_MOC_LITERAL(206, 11),  // "std::string"
        QT_MOC_LITERAL(218, 17),  // "back_from_filters"
        QT_MOC_LITERAL(236, 12),  // "apply_filter"
        QT_MOC_LITERAL(249, 13),  // "delete_filter"
        QT_MOC_LITERAL(263, 10),  // "add_filter"
        QT_MOC_LITERAL(274, 19),  // "show_pressed_button"
        QT_MOC_LITERAL(294, 15),  // "change_language"
        QT_MOC_LITERAL(310, 11)   // "const char*"
    },
    "MainWindow",
    "change_image",
    "",
    "cv::Mat",
    "set_rec_opened_butts",
    "start_proc",
    "QString&",
    "main_proc",
    "set_slider_limits",
    "end_main_proc",
    "rotate_left",
    "rotate_right",
    "save_image",
    "set_new_image",
    "set_filters_buttons",
    "set_deleteF_enabled",
    "std::string",
    "back_from_filters",
    "apply_filter",
    "delete_filter",
    "add_filter",
    "show_pressed_button",
    "change_language",
    "const char*"
};
#undef QT_MOC_LITERAL
#endif // !QT_MOC_HAS_STRING_DATA
} // unnamed namespace
Q_CONSTINIT static const uint qt_meta_data_CLASSMainWindowENDCLASS[] = {
 // content:
      11,       // revision
       0,       // classname
       0,    0, // classinfo
      18,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount
 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    1,  122,    2, 0x0a,    1 /* Public */,
       4,    0,  125,    2, 0x0a,    3 /* Public */,
       5,    1,  126,    2, 0x0a,    4 /* Public */,
       7,    1,  129,    2, 0x0a,    6 /* Public */,
       8,    0,  132,    2, 0x0a,    8 /* Public */,
       9,    0,  133,    2, 0x0a,    9 /* Public */,
      10,    0,  134,    2, 0x0a,   10 /* Public */,
      11,    0,  135,    2, 0x0a,   11 /* Public */,
      12,    0,  136,    2, 0x0a,   12 /* Public */,
      13,    0,  137,    2, 0x0a,   13 /* Public */,
      14,    0,  138,    2, 0x0a,   14 /* Public */,
      15,    1,  139,    2, 0x0a,   15 /* Public */,
      17,    0,  142,    2, 0x0a,   17 /* Public */,
      18,    0,  143,    2, 0x0a,   18 /* Public */,
      19,    0,  144,    2, 0x0a,   19 /* Public */,
      20,    0,  145,    2, 0x0a,   20 /* Public */,
      21,    0,  146,    2, 0x0a,   21 /* Public */,
      22,    1,  147,    2, 0x0a,   22 /* Public */,
 // slots: parameters
    QMetaType::Void, 0x80000000 | 3,    2,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 6,    2,
    QMetaType::Void, QMetaType::Int,    2,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 16,    2,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 23,    2,
       0        // eod
};
Q_CONSTINIT const QMetaObject MainWindow::staticMetaObject = { {
    QMetaObject::SuperData::link<QMainWindow::staticMetaObject>(),
    qt_meta_stringdata_CLASSMainWindowENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSMainWindowENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSMainWindowENDCLASS_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<MainWindow, std::true_type>,
        // method 'change_image'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<cv::Mat, std::false_type>,
        // method 'set_rec_opened_butts'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'start_proc'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<QString &, std::false_type>,
        // method 'main_proc'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<int, std::false_type>,
        // method 'set_slider_limits'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'end_main_proc'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'rotate_left'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'rotate_right'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'save_image'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'set_new_image'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'set_filters_buttons'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'set_deleteF_enabled'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<std::string, std::false_type>,
        // method 'back_from_filters'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'apply_filter'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'delete_filter'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'add_filter'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'show_pressed_button'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'change_language'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const char *, std::false_type>
    >,
    nullptr
} };
void MainWindow::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a) {
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<MainWindow *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->change_image((*reinterpret_cast< std::add_pointer_t<cv::Mat>>(_a[1]))); break;
        case 1: _t->set_rec_opened_butts(); break;
        case 2: _t->start_proc((*reinterpret_cast< std::add_pointer_t<QString&>>(_a[1]))); break;
        case 3: _t->main_proc((*reinterpret_cast< std::add_pointer_t<int>>(_a[1]))); break;
        case 4: _t->set_slider_limits(); break;
        case 5: _t->end_main_proc(); break;
        case 6: _t->rotate_left(); break;
        case 7: _t->rotate_right(); break;
        case 8: _t->save_image(); break;
        case 9: _t->set_new_image(); break;
        case 10: _t->set_filters_buttons(); break;
        case 11: _t->set_deleteF_enabled((*reinterpret_cast< std::add_pointer_t<std::string>>(_a[1]))); break;
        case 12: _t->back_from_filters(); break;
        case 13: _t->apply_filter(); break;
        case 14: _t->delete_filter(); break;
        case 15: _t->add_filter(); break;
        case 16: _t->show_pressed_button(); break;
        case 17: _t->change_language((*reinterpret_cast< std::add_pointer_t<const char*>>(_a[1]))); break;
        default: ; } } }
const QMetaObject *MainWindow::metaObject() const {
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject; }
void *MainWindow::qt_metacast(const char *_clname) {
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSMainWindowENDCLASS.stringdata0))
        return static_cast<void*>(this);
    if (!strcmp(_clname, "Ui::MainWindow"))
        return static_cast< Ui::MainWindow*>(this);
    return QMainWindow::qt_metacast(_clname); }
int MainWindow::qt_metacall(QMetaObject::Call _c, int _id, void **_a) {
    _id = QMainWindow::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 18)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 18;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 18)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 18; }
    return _id; }
QT_WARNING_POP
 
Файл moc_set_FilterName_window.cpp: 
/****************************************************************************
** Meta object code from reading C++ file 'set_FilterName_window.h'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.5.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/
#include "../../../set_FilterName_window.h"
#include <QtCore/qmetatype.h>
#if __has_include(<QtCore/qtmochelpers.h>)
#include <QtCore/qtmochelpers.h>
#else
QT_BEGIN_MOC_NAMESPACE
#endif
#include <memory>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'set_FilterName_window.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.5.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif
#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {
#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSFilterName_windowENDCLASS_t {};
static constexpr auto qt_meta_stringdata_CLASSFilterName_windowENDCLASS = QtMocHelpers::stringData(
    "FilterName_window",
    "filter_name_got",
    "",
    "save_filter_name"
);
#else  // !QT_MOC_HAS_STRING_DATA
struct qt_meta_stringdata_CLASSFilterName_windowENDCLASS_t {
    uint offsetsAndSizes[8];
    char stringdata0[18];
    char stringdata1[16];
    char stringdata2[1];
    char stringdata3[17];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_CLASSFilterName_windowENDCLASS_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_CLASSFilterName_windowENDCLASS_t qt_meta_stringdata_CLASSFilterName_windowENDCLASS = { {
        QT_MOC_LITERAL(0, 17),  // "FilterName_window"
        QT_MOC_LITERAL(18, 15),  // "filter_name_got"
        QT_MOC_LITERAL(34, 0),  // ""
        QT_MOC_LITERAL(35, 16)   // "save_filter_name"
    },
    "FilterName_window",
    "filter_name_got",
    "",
    "save_filter_name"
};
#undef QT_MOC_LITERAL
#endif // !QT_MOC_HAS_STRING_DATA
} // unnamed namespace
Q_CONSTINIT static const uint qt_meta_data_CLASSFilterName_windowENDCLASS[] = {
 // content:
      11,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount
 // signals: name, argc, parameters, tag, flags, initial metatype offsets
       1,    0,   26,    2, 0x06,    1 /* Public */,
 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       3,    0,   27,    2, 0x0a,    2 /* Public */,
 // signals: parameters
    QMetaType::Void,
 // slots: parameters
    QMetaType::Void,
       0        // eod
};
Q_CONSTINIT const QMetaObject FilterName_window::staticMetaObject = { {
    QMetaObject::SuperData::link<QWidget::staticMetaObject>(),
    qt_meta_stringdata_CLASSFilterName_windowENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSFilterName_windowENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSFilterName_windowENDCLASS_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<FilterName_window, std::true_type>,
        // method 'filter_name_got'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'save_filter_name'
        QtPrivate::TypeAndForceComplete<void, std::false_type>
    >,
    nullptr
} };
void FilterName_window::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a) {
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<FilterName_window *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->filter_name_got(); break;
        case 1: _t->save_filter_name(); break;
        default: ; }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]); {
            using _t = void (FilterName_window::*)();
            if (_t _q_method = &FilterName_window::filter_name_got; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 0;
                return; } } }
    (void)_a; }
const QMetaObject *FilterName_window::metaObject() const {
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject; }
void *FilterName_window::qt_metacast(const char *_clname) {
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSFilterName_windowENDCLASS.stringdata0))
        return static_cast<void*>(this);
    if (!strcmp(_clname, "Ui::Form"))
        return static_cast< Ui::Form*>(this);
    return QWidget::qt_metacast(_clname); }
int FilterName_window::qt_metacall(QMetaObject::Call _c, int _id, void **_a) {
    _id = QWidget::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 2; }
    return _id; }
// SIGNAL 0
void FilterName_window::filter_name_got() {
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr); }
QT_WARNING_POP
 
Файл moc_viewwithoutwheel.cpp: 
/****************************************************************************
** Meta object code from reading C++ file 'viewwithoutwheel.h'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.5.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/
#include "../../../viewwithoutwheel.h"
#include <QtCore/qmetatype.h>
#if __has_include(<QtCore/qtmochelpers.h>)
#include <QtCore/qtmochelpers.h>
#else
QT_BEGIN_MOC_NAMESPACE
#endif
#include <memory>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'viewwithoutwheel.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.5.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif
#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {
#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSViewWithoutWheelENDCLASS_t {};
static constexpr auto qt_meta_stringdata_CLASSViewWithoutWheelENDCLASS = QtMocHelpers::stringData(
    "ViewWithoutWheel",
    "wheelEvent",
    "",
    "QWheelEvent*",
    "e",
    "resizeEvent",
    "QResizeEvent*"
);
#else  // !QT_MOC_HAS_STRING_DATA
struct qt_meta_stringdata_CLASSViewWithoutWheelENDCLASS_t {
    uint offsetsAndSizes[14];
    char stringdata0[17];
    char stringdata1[11];
    char stringdata2[1];
    char stringdata3[13];
    char stringdata4[2];
    char stringdata5[12];
    char stringdata6[14];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_CLASSViewWithoutWheelENDCLASS_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_CLASSViewWithoutWheelENDCLASS_t qt_meta_stringdata_CLASSViewWithoutWheelENDCLASS = { {
        QT_MOC_LITERAL(0, 16),  // "ViewWithoutWheel"
        QT_MOC_LITERAL(17, 10),  // "wheelEvent"
        QT_MOC_LITERAL(28, 0),  // ""
        QT_MOC_LITERAL(29, 12),  // "QWheelEvent*"
        QT_MOC_LITERAL(42, 1),  // "e"
        QT_MOC_LITERAL(44, 11),  // "resizeEvent"
        QT_MOC_LITERAL(56, 13)   // "QResizeEvent*"
    },
    "ViewWithoutWheel",
    "wheelEvent",
    "",
    "QWheelEvent*",
    "e",
    "resizeEvent",
    "QResizeEvent*"
};
#undef QT_MOC_LITERAL
#endif // !QT_MOC_HAS_STRING_DATA
} // unnamed namespace
Q_CONSTINIT static const uint qt_meta_data_CLASSViewWithoutWheelENDCLASS[] = {
 // content:
      11,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount
 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    1,   26,    2, 0x0a,    1 /* Public */,
       5,    1,   29,    2, 0x0a,    3 /* Public */,
 // slots: parameters
    QMetaType::Void, 0x80000000 | 3,    4,
    QMetaType::Void, 0x80000000 | 6,    4,
       0        // eod
};
Q_CONSTINIT const QMetaObject ViewWithoutWheel::staticMetaObject = { {
    QMetaObject::SuperData::link<QGraphicsView::staticMetaObject>(),
    qt_meta_stringdata_CLASSViewWithoutWheelENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSViewWithoutWheelENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSViewWithoutWheelENDCLASS_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<ViewWithoutWheel, std::true_type>,
        // method 'wheelEvent'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<QWheelEvent *, std::false_type>,
        // method 'resizeEvent'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<QResizeEvent *, std::false_type>
    >,
    nullptr
} };
void ViewWithoutWheel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a) {
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<ViewWithoutWheel *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->wheelEvent((*reinterpret_cast< std::add_pointer_t<QWheelEvent*>>(_a[1]))); break;
        case 1: _t->resizeEvent((*reinterpret_cast< std::add_pointer_t<QResizeEvent*>>(_a[1]))); break;
        default: ; } } }
const QMetaObject *ViewWithoutWheel::metaObject() const {
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject; }
void *ViewWithoutWheel::qt_metacast(const char *_clname) {
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSViewWithoutWheelENDCLASS.stringdata0))
        return static_cast<void*>(this);
    return QGraphicsView::qt_metacast(_clname); }
int ViewWithoutWheel::qt_metacall(QMetaObject::Call _c, int _id, void **_a) {
    _id = QGraphicsView::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 2; }
    return _id; }
QT_WARNING_POP
 
Файл moc_workerthread.cpp: 
/****************************************************************************
** Meta object code from reading C++ file 'workerthread.h'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.5.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/
#include "../../../workerthread.h"
#include <QtCore/qmetatype.h>
#if __has_include(<QtCore/qtmochelpers.h>)
#include <QtCore/qtmochelpers.h>
#else
QT_BEGIN_MOC_NAMESPACE
#endif
#include <memory>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'workerthread.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.5.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif
#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {
#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSMyThreadENDCLASS_t {};
static constexpr auto qt_meta_stringdata_CLASSMyThreadENDCLASS = QtMocHelpers::stringData(
    "MyThread",
    "signalGUI",
    "",
    "cv::Mat",
    "terminateThread"
);
#else  // !QT_MOC_HAS_STRING_DATA
struct qt_meta_stringdata_CLASSMyThreadENDCLASS_t {
    uint offsetsAndSizes[10];
    char stringdata0[9];
    char stringdata1[10];
    char stringdata2[1];
    char stringdata3[8];
    char stringdata4[16];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_CLASSMyThreadENDCLASS_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_CLASSMyThreadENDCLASS_t qt_meta_stringdata_CLASSMyThreadENDCLASS = { {
        QT_MOC_LITERAL(0, 8),  // "MyThread"
        QT_MOC_LITERAL(9, 9),  // "signalGUI"
        QT_MOC_LITERAL(19, 0),  // ""
        QT_MOC_LITERAL(20, 7),  // "cv::Mat"
        QT_MOC_LITERAL(28, 15)   // "terminateThread"
    },
    "MyThread",
    "signalGUI",
    "",
    "cv::Mat",
    "terminateThread"
};
#undef QT_MOC_LITERAL
#endif // !QT_MOC_HAS_STRING_DATA
} // unnamed namespace
Q_CONSTINIT static const uint qt_meta_data_CLASSMyThreadENDCLASS[] = {
 // content:
      11,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount
 // signals: name, argc, parameters, tag, flags, initial metatype offsets
       1,    1,   26,    2, 0x06,    1 /* Public */,
 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       4,    0,   29,    2, 0x0a,    3 /* Public */,
 // signals: parameters
    QMetaType::Void, 0x80000000 | 3,    2,
 // slots: parameters
    QMetaType::Void,
       0        // eod
};
Q_CONSTINIT const QMetaObject MyThread::staticMetaObject = { {
    QMetaObject::SuperData::link<QThread::staticMetaObject>(),
    qt_meta_stringdata_CLASSMyThreadENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSMyThreadENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSMyThreadENDCLASS_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<MyThread, std::true_type>,
        // method 'signalGUI'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<cv::Mat, std::false_type>,
        // method 'terminateThread'
        QtPrivate::TypeAndForceComplete<void, std::false_type>
    >,
    nullptr
} };
void MyThread::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a) {
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<MyThread *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->signalGUI((*reinterpret_cast< std::add_pointer_t<cv::Mat>>(_a[1]))); break;
        case 1: _t->terminateThread(); break;
        default: ; }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]); {
            using _t = void (MyThread::*)(cv::Mat );
            if (_t _q_method = &MyThread::signalGUI; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 0;
                return; } } } }
const QMetaObject *MyThread::metaObject() const {
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject; }
void *MyThread::qt_metacast(const char *_clname) {
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSMyThreadENDCLASS.stringdata0))
        return static_cast<void*>(this);
    return QThread::qt_metacast(_clname); }
int MyThread::qt_metacall(QMetaObject::Call _c, int _id, void **_a) {
    _id = QThread::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 2; }
    return _id; }
// SIGNAL 0
void MyThread::signalGUI(cv::Mat _t1) {
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a); }
QT_WARNING_POP
 
Файл qrc_icons.cpp: 
/****************************************************************************
** Resource object code
**
** Created by: The Resource Compiler for Qt version 6.5.1
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/
static const unsigned char qt_resource_data[] = {
  // D:/University/cs/sem3/cursach/photored/icons/plus.png
  0x0,0x0,0x3,0x5a,
  0x89,
  0x50,0x4e,0x47,0xd,0xa,0x1a,0xa,0x0,0x0,0x0,0xd,0x49,0x48,0x44,0x52,0x0,
  0x0,0x2,0x0,0x0,0x0,0x2,0x0,0x4,0x3,0x0,0x0,0x0,0x6,0x56,0xc9,0xc9,
  0x0,0x0,0x0,0x3,0x73,0x42,0x49,0x54,0x8,0x8,0x8,0xdb,0xe1,0x4f,0xe0,0x0,
  0x0,0x0,0x9,0x70,0x48,0x59,0x73,0x0,0x0,0xe,0x9d,0x0,0x0,0xe,0x9d,0x1,
  0xd5,0xd3,0xb1,0x39,0x0,0x0,0x0,0x19,0x74,0x45,0x58,0x74,0x53,0x6f,0x66,0x74,
  0x77,0x61,0x72,0x65,0x0,0x77,0x77,0x77,0x2e,0x69,0x6e,0x6b,0x73,0x63,0x61,0x70,
  0x65,0x2e,0x6f,0x72,0x67,0x9b,0xee,0x3c,0x1a,0x0,0x0,0x0,0x18,0x50,0x4c,0x54,
  0x45,0xff,0xff,0xff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x5c,0x62,0x41,0xbd,0x0,0x0,0x0,
  0x7,0x74,0x52,0x4e,0x53,0x0,0xa8,0xd1,0xd8,0xe1,0xf8,0xf9,0x47,0x7a,0x25,0xde,
  0x0,0x0,0x2,0xa1,0x49,0x44,0x41,0x54,0x78,0xda,0xed,0xda,0x31,0xa,0x83,0x40,
  0x10,0x40,0xd1,0x25,0x90,0x3,0x58,0xa5,0xb5,0xf1,0x4,0x29,0x3c,0x82,0x6d,0x10,
  0x3c,0x83,0x75,0xc8,0xa2,0xd7,0xb7,0xde,0x46,0x41,0xb,0xc3,0xce,0xfb,0x7,0x98,
  0x81,0xd7,0xce,0xa4,0x35,0x78,0x9,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x4,0x4,0xc8,0x4d,0xe5,0xd,0x7,0x0,0xdf,
  0x54,0x79,0x2f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x38,0x53,0x37,0x15,0x8d,0xe1,0x0,0xfa,0x72,0xef,0xf,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0xc0,0x79,0x80,0xc7,0xfb,0x4a,0x73,0xb9,0x77,0xb9,0x34,0xac,0xbd,
  0x5,0xe0,0xb9,0xfe,0x4d,0x1f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0xe0,0x3c,0xee,0x41,0x2,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0xc0,0x4e,0xdd,0x54,0x34,0x86,0x3,0xb8,0x2b,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xd4,0x5,0x90,0x9b,0xca,0x1b,0xe,0x0,
  0xc2,0x5,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x22,0xb4,0x1,0x51,0x90,0x14,0xd8,0x2a,0xf3,0x3b,0x3f,0x0,0x0,0x0,
  0x0,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82,
    // D:/University/cs/sem3/cursach/photored/icons/arrowToRight.png
  0x0,0x0,0x26,0x66,
  0x89,
  0x50,0x4e,0x47,0xd,0xa,0x1a,0xa,0x0,0x0,0x0,0xd,0x49,0x48,0x44,0x52,0x0,
  0x0,0x2,0x0,0x0,0x0,0x2,0x0,0x8,0x6,0x0,0x0,0x0,0xf4,0x78,0xd4,0xfa,
  0x0,0x0,0x0,0x9,0x70,0x48,0x59,0x73,0x0,0x0,0xe,0xc4,0x0,0x0,0xe,0xc4,
  0x1,0x95,0x2b,0xe,0x1b,0x0,0x0,0x26,0x18,0x49,0x44,0x41,0x54,0x78,0x9c,0xed,
  0xdd,0x69,0xb4,0x5d,0x55,0x99,0xaf,0xf1,0xe7,0x24,0x24,0x90,0xd0,0xb,0xd2,0x37,
  0x2a,0x62,0xd1,0x28,0x22,0x2a,0x8a,0x82,0x16,0x9d,0x22,0x20,0x16,0x3a,0x1c,0x28,
  0x2a,0xe,0xbb,0xb2,0x29,0xd4,0xba,0xb6,0xa8,0xa5,0x6c,0xb4,0x2c,0xc4,0xb2,0x1d,
  0x35,0xf4,0x2a,0x57,0x51,0xcb,0xae,0xbc,0x36,0xa8,0x88,0x52,0x36,0x68,0xd9,0x80,
  0x5a,0x5,0xd2,0x89,0x20,0x88,0x4a,0xdf,0x88,0x24,0x40,0x68,0x42,0x92,0x73,0x3f,
  0xcc,0x9d,0x9b,0x93,0xe4,0x34,0xbb,0x59,0x7b,0xbf,0x73,0xce,0xf5,0xfc,0xc6,0x98,
  0x23,0x29,0xb,0xcf,0x7a,0xf7,0xf6,0xb0,0xde,0xff,0x9a,0x6b,0xae,0xb9,0x26,0x26,
  0x27,0x27,0x91,0x24,0x49,0xed,0x32,0x2f,0xba,0x0,0x49,0x92,0x34,0x7e,0x6,0x0,
  0x49,0x92,0x5a,0xc8,0x0,0x20,0x49,0x52,0xb,0x19,0x0,0x24,0x49,0x6a,0x21,0x3,
  0x80,0x24,0x49,0x2d,0x64,0x0,0x90,0x24,0xa9,0x85,0xc,0x0,0x92,0x24,0xb5,0x90,
  0x1,0x40,0x92,0xa4,0x16,0x32,0x0,0x48,0x92,0xd4,0x42,0x6,0x0,0x49,0x92,0x5a,
  0xc8,0x0,0x20,0x49,0x52,0xb,0x19,0x0,0x24,0x49,0x6a,0x21,0x3,0x80,0x24,0x49,
  0x2d,0x64,0x0,0x90,0x24,0xa9,0x85,0xc,0x0,0x92,0x24,0xb5,0xd0,0x6,0xd1,0x5,
  0xc,0x6b,0x62,0x62,0x22,0xba,0x4,0x49,0x9a,0x6a,0x11,0xb0,0x3b,0xb0,0x33,0xb0,
  0x13,0xb0,0x12,0xb8,0x3,0xb8,0x1d,0xb8,0x0,0xb8,0x2b,0xae,0x34,0x35,0x69,0x72,
  0x72,0x32,0xba,0x84,0xa1,0x14,0x1f,0x0,0x24,0x29,0x3,0x9b,0x0,0xcf,0x5,0x8e,
  0x1,0x9e,0x6,0x2c,0x9e,0xe1,0x9f,0x5b,0x1,0xfc,0xf,0xf0,0x7d,0xe0,0x93,0xc0,
  0x8d,0x63,0xa9,0x4e,0x9a,0xc6,0x44,0xe9,0x9,0xc6,0x19,0x0,0x49,0x81,0x16,0x2,
  0xaf,0x0,0xde,0x9,0x6c,0xdb,0xe7,0x7f,0xf7,0x7e,0xe0,0x33,0xc0,0xfb,0x80,0x3f,
  0x37,0x5c,0x97,0xc6,0xa0,0xf8,0xfe,0x59,0xfc,0x7,0x30,0x0,0x48,0x8a,0xb1,0x3f,
  0xf0,0x5,0xd2,0x74,0xff,0x30,0x96,0x1,0x6f,0x5,0x3e,0x36,0x74,0x45,0x1a,0xab,
  0xe2,0xfb,0x67,0xf1,0x1f,0xc0,0x0,0x20,0x69,0xfc,0x5e,0x4,0x7c,0x8a,0x34,0x3,
  0xd0,0x94,0xcf,0x91,0x66,0x13,0x1e,0x68,0xf0,0x67,0x6a,0x84,0x8a,0xef,0x9f,0xc5,
  0x7f,0x0,0x3,0x80,0xa4,0xf1,0x7a,0x39,0x70,0x3a,0x30,0x8a,0x93,0xcf,0x99,0xc0,
  0x71,0x18,0x2,0x8a,0x50,0x7c,0xff,0x2c,0xfe,0x3,0x18,0x0,0x24,0x8d,0xcf,0x51,
  0xc0,0xb7,0x80,0xf9,0x23,0x3c,0x86,0x21,0xa0,0x10,0xc5,0xf7,0xcf,0xe2,0x3f,0x80,
  0x1,0x40,0xd2,0x78,0x6c,0xf,0x5c,0xa,0x6c,0x35,0x86,0x63,0x19,0x2,0xa,0x50,
  0x7a,0xff,0x74,0x23,0x20,0x49,0xea,0xcd,0x29,0x8c,0xa7,0xf9,0x3,0x1c,0xb,0x7c,
  0x5,0x58,0x30,0xa6,0xe3,0xa9,0x85,0x9c,0x1,0x90,0xa4,0xb9,0xed,0x9,0x5c,0xc2,
  0xf8,0xf7,0x4e,0x71,0x26,0x20,0x63,0xa5,0xf7,0x4f,0x67,0x0,0x24,0x69,0x6e,0x6f,
  0x23,0x66,0xe3,0x34,0x67,0x2,0x34,0x32,0xce,0x0,0x48,0xd2,0xec,0x16,0x2,0xb7,
  0x0,0x5b,0x4,0xd6,0xe0,0x4c,0x40,0x86,0x4a,0xef,0x9f,0xce,0x0,0x48,0xd2,0xec,
  0xe,0x26,0xb6,0xf9,0x83,0x33,0x1,0x1a,0x1,0x3,0x80,0x24,0xcd,0xee,0x6f,0xa3,
  0xb,0xe8,0x32,0x4,0xa8,0x51,0x6,0x0,0x49,0x9a,0xdd,0x2e,0xd1,0x5,0x4c,0x61,
  0x8,0x50,0x63,0xc,0x0,0x92,0x34,0xbb,0x9c,0x2,0x0,0x18,0x2,0xd4,0x10,0x3,
  0x80,0x24,0xcd,0x6e,0x93,0xe8,0x2,0xa6,0x61,0x8,0xd0,0xd0,0xc,0x0,0x92,0x34,
  0xbb,0xa5,0xd1,0x5,0xcc,0xc0,0x10,0xa0,0xa1,0x18,0x0,0x24,0x69,0x76,0x77,0x44,
  0x17,0x30,0xb,0x43,0x80,0x6,0x66,0x0,0x90,0xa4,0xd9,0x5d,0x1d,0x5d,0xc0,0x1c,
  0xc,0x1,0x1a,0x88,0x1,0x40,0x92,0x66,0x77,0x6e,0x74,0x1,0x3d,0x30,0x4,0xa8,
  0x6f,0xee,0x4,0x28,0x49,0xb3,0xdb,0x4,0xf8,0x2b,0x65,0x34,0x57,0x77,0xc,0x1c,
  0xa3,0xd2,0xfb,0xa7,0x33,0x0,0x92,0x34,0xbb,0xbb,0x81,0x6f,0x44,0x17,0xd1,0x23,
  0x67,0x2,0xd4,0x33,0x67,0x0,0x24,0x69,0x6e,0xfb,0x2,0x17,0x2,0xa5,0x9c,0x70,
  0x9c,0x9,0x18,0x83,0xd2,0xfb,0xa7,0x33,0x0,0x92,0x34,0xb7,0x8b,0x80,0xef,0x46,
  0x17,0xd1,0x7,0x67,0x2,0x34,0x27,0x67,0x0,0x24,0xa9,0x37,0xbb,0x1,0x17,0x3,
  0x1b,0x47,0x17,0xd2,0x7,0x67,0x2,0x46,0xa8,0xf4,0xfe,0xe9,0xc,0x80,0x24,0xf5,
  0xe6,0xf,0xc0,0xab,0xa2,0x8b,0xe8,0x93,0x33,0x1,0x9a,0x91,0x1,0x40,0x92,0x7a,
  0xf7,0x5,0xe0,0xe4,0xe8,0x22,0xfa,0x64,0x8,0xd0,0xb4,0xc,0x0,0x92,0xd4,0x9f,
  0x77,0x3,0xa7,0x44,0x17,0xd1,0x27,0x43,0x80,0xd6,0x63,0x0,0x90,0xa4,0xfe,0x75,
  0x30,0x4,0xa8,0x70,0x6,0x0,0x49,0x1a,0x4c,0x7,0x43,0x80,0xa,0x66,0x0,0x90,
  0xa4,0xc1,0x75,0x30,0x4,0xa8,0x50,0x6,0x0,0x49,0x1a,0x4e,0x7,0x43,0x80,0xa,
  0x64,0x0,0x90,0xa4,0xe1,0x75,0x80,0xd3,0xa2,0x8b,0xe8,0x93,0x21,0xa0,0xe5,0xc,
  0x0,0x92,0xd4,0x8c,0x93,0x70,0x26,0x40,0x5,0x31,0x0,0x48,0x52,0x73,0x3a,0x18,
  0x2,0x54,0x8,0x3,0x80,0x24,0x35,0xab,0x83,0xb7,0x3,0x54,0x0,0x3,0x80,0x24,
  0x35,0xcf,0xdb,0x1,0xca,0x9e,0x1,0x40,0x92,0x46,0xa3,0x83,0x21,0x40,0x19,0x33,
  0x0,0x48,0xd2,0xe8,0x74,0x30,0x4,0x28,0x53,0x6,0x0,0x49,0x1a,0xad,0xe,0xae,
  0x9,0x50,0x86,0xc,0x0,0x92,0x34,0x7a,0xae,0x9,0x50,0x76,0xc,0x0,0x92,0x34,
  0x1e,0x1d,0x9c,0x9,0x50,0x46,0xc,0x0,0x92,0x34,0x3e,0xce,0x4,0x28,0x1b,0x6,
  0x0,0x49,0x1a,0xaf,0xe,0x86,0x0,0x65,0xc0,0x0,0x20,0x49,0xe3,0xd7,0xc1,0x10,
  0xa0,0x60,0x6,0x0,0x49,0x8a,0xd1,0xc1,0x10,0xa0,0x40,0x6,0x0,0x49,0x8a,0xd3,
  0xc1,0x10,0xa0,0x20,0x6,0x0,0x49,0x8a,0xd5,0xc1,0x10,0xa0,0x0,0x6,0x0,0x49,
  0x8a,0xd7,0xc1,0x10,0xa0,0x31,0x33,0x0,0x48,0x52,0x1e,0x3a,0xb8,0x4f,0x80,0xc6,
  0xc8,0x0,0x20,0x49,0xf9,0x38,0x9,0x43,0x80,0xc6,0xc4,0x0,0x20,0x49,0x79,0x31,
  0x4,0x68,0x2c,0xc,0x0,0x92,0x94,0x1f,0x77,0xc,0xd4,0xc8,0x19,0x0,0x24,0x29,
  0x4f,0x1d,0x9c,0x9,0xd0,0x8,0x19,0x0,0x24,0x29,0x5f,0xde,0xe,0xd0,0xc8,0x18,
  0x0,0x24,0x29,0x6f,0x86,0x0,0x8d,0x84,0x1,0x40,0x92,0xf2,0xe7,0x9a,0x0,0x35,
  0xce,0x0,0x20,0x49,0x65,0xe8,0xe0,0x4c,0x80,0x1a,0x64,0x0,0x90,0xa4,0x72,0x78,
  0x3b,0x40,0x8d,0x31,0x0,0x48,0x52,0x59,0xc,0x1,0x6a,0x84,0x1,0x40,0x92,0xca,
  0xe3,0x9a,0x0,0xd,0xcd,0x0,0x20,0x49,0x65,0xea,0xe0,0x4c,0x80,0x86,0x60,0x0,
  0x90,0xa4,0x72,0x79,0x3b,0x40,0x3,0x33,0x0,0x48,0x52,0xd9,0xc,0x1,0x1a,0x88,
  0x1,0x40,0x92,0xca,0x67,0x8,0x50,0xdf,0xc,0x0,0x92,0x54,0x7,0x17,0x6,0xaa,
  0x2f,0x6,0x0,0x49,0xaa,0x47,0x7,0x67,0x2,0xd4,0x23,0x3,0x80,0x24,0xd5,0xc5,
  0xdb,0x1,0xea,0x89,0x1,0x40,0x92,0xea,0xe3,0xed,0x0,0xcd,0xc9,0x0,0x20,0x49,
  0x75,0xea,0xe0,0x4c,0x80,0x66,0x61,0x0,0x90,0xa4,0x7a,0x79,0x3b,0x40,0x33,0x32,
  0x0,0x48,0x52,0xdd,0xc,0x1,0x9a,0x96,0x1,0x40,0x92,0xea,0x67,0x8,0xd0,0x7a,
  0xc,0x0,0x92,0xd4,0xe,0x86,0x0,0xad,0xc5,0x0,0x20,0x49,0xed,0xe1,0xd3,0x1,
  0xfa,0xff,0xc,0x0,0x92,0xd4,0x2e,0x1d,0x9c,0x9,0x10,0x6,0x0,0x49,0x6a,0x23,
  0x6f,0x7,0xc8,0x0,0x20,0x49,0x2d,0xe5,0xed,0x80,0x96,0x33,0x0,0x48,0x52,0x7b,
  0x75,0x70,0x26,0xa0,0xb5,0xc,0x0,0x92,0xd4,0x6e,0xde,0xe,0x68,0x29,0x3,0x80,
  0x24,0xc9,0x10,0xd0,0x42,0x6,0x0,0x49,0x12,0x18,0x2,0x5a,0xc7,0x0,0x20,0x49,
  0x5a,0xcd,0x10,0xd0,0x22,0x6,0x0,0x49,0xd2,0x54,0x3e,0x1d,0xd0,0x12,0x6,0x0,
  0x49,0xd2,0xba,0x3a,0x38,0x13,0x50,0x3d,0x3,0x80,0x24,0x69,0x3a,0xce,0x4,0x54,
  0xce,0x0,0x20,0x49,0x9a,0x49,0x7,0x67,0x2,0xaa,0x65,0x0,0x90,0x24,0xcd,0xc6,
  0x85,0x81,0x95,0x32,0x0,0x48,0x92,0xe6,0x62,0x8,0xa8,0x90,0x1,0x40,0x92,0xd4,
  0xb,0x43,0x40,0x65,0xc,0x0,0x92,0xa4,0x5e,0x19,0x2,0x2a,0x62,0x0,0x90,0x24,
  0xf5,0xc3,0x10,0x50,0x9,0x3,0x80,0x24,0xa9,0x5f,0x86,0x80,0xa,0x18,0x0,0x24,
  0x49,0x83,0x70,0x9f,0x80,0xc2,0x19,0x0,0x24,0x49,0x83,0xea,0xe0,0x4c,0x40,0xb1,
  0xc,0x0,0x92,0xa4,0x61,0x78,0x3b,0xa0,0x50,0x6,0x0,0x49,0xd2,0xb0,0xc,0x1,
  0x5,0x32,0x0,0x48,0x92,0x9a,0x60,0x8,0x28,0x8c,0x1,0x40,0x92,0xd4,0x14,0x43,
  0x40,0x41,0xc,0x0,0x92,0xa4,0x26,0x19,0x2,0xa,0x61,0x0,0x90,0x24,0x35,0xcd,
  0x10,0x50,0x0,0x3,0x80,0x24,0x69,0x14,0xc,0x1,0x99,0x9b,0x98,0x9c,0x9c,0x8c,
  0xae,0x61,0x28,0x13,0x13,0x13,0xd1,0x25,0x48,0x52,0xd,0x26,0x80,0x4d,0x81,0x2d,
  0x80,0xcd,0x80,0x4d,0x80,0x45,0xc0,0xe2,0xee,0x58,0x34,0xcd,0x9f,0xb,0x81,0xf9,
  0xb3,0x8c,0x79,0xc0,0x31,0xdd,0x9f,0x59,0x92,0x33,0x81,0xe3,0x80,0x7,0x66,0xfb,
  0x87,0x8a,0xef,0x9f,0xc5,0x7f,0x0,0x3,0x80,0x24,0xad,0x6b,0x3e,0xb0,0x15,0xb0,
  0x6d,0x77,0x6c,0x33,0xe5,0xcf,0x7,0x3,0xf,0x22,0x35,0xe5,0xcd,0xbb,0x7f,0xae,
  0xfe,0xfb,0xfc,0xb1,0x57,0x9a,0xaf,0x39,0x43,0x40,0xf1,0xfd,0xb3,0xf8,0xf,0x60,
  0x0,0x90,0xd4,0x2e,0x8b,0x81,0x9d,0xba,0x63,0x97,0xee,0x9f,0x3b,0x77,0xc7,0x8e,
  0xc0,0x76,0xa4,0xe6,0x6f,0x33,0x1f,0xde,0xac,0x21,0xa0,0xf8,0xfe,0x59,0xfc,0x7,
  0x30,0x0,0x48,0xaa,0xcb,0x3c,0x52,0x23,0x7f,0x78,0x77,0xec,0xd6,0x1d,0xf,0x3,
  0x76,0x25,0x35,0x77,0x8d,0xcf,0x8c,0x21,0xa0,0xf8,0xfe,0x59,0xfc,0x7,0x30,0x0,
  0x48,0x2a,0xd3,0x96,0xc0,0x5e,0xdd,0xb1,0x7,0x6b,0x1a,0xfe,0x43,0x49,0xf7,0xd7,
  0x95,0x8f,0x69,0x43,0x40,0xf1,0xfd,0xb3,0xf8,0xf,0x60,0x0,0x90,0x94,0xb7,0xad,
  0x81,0xbd,0x81,0x3d,0x59,0xd3,0xf0,0xf7,0x2,0xb6,0x8f,0x2c,0x4a,0x7d,0xfb,0xf,
  0xe0,0x5,0xc0,0xaa,0xd5,0xff,0x41,0xe9,0xfd,0x73,0x83,0xe8,0x2,0x24,0xa9,0x12,
  0x13,0xa4,0x29,0xfa,0xc7,0x74,0xc7,0xbe,0xdd,0x3f,0x77,0xa,0xac,0x49,0xcd,0x79,
  0x1e,0x70,0xd,0xf0,0x8e,0xe8,0x42,0x9a,0xe2,0xc,0x80,0x24,0xf5,0x6f,0x82,0x74,
  0x5f,0xfe,0x9,0xc0,0x7e,0xac,0x69,0xf6,0x5b,0x6,0xd6,0xa4,0xd1,0x5b,0x5,0x1c,
  0xe,0x9c,0xb,0xe5,0xcf,0x0,0x18,0x0,0x24,0x69,0x6e,0x5b,0x2,0xfb,0x93,0x1a,
  0xfe,0x13,0xba,0x7f,0xdf,0x3a,0xb4,0x22,0x45,0xb9,0x12,0xd8,0x7,0x58,0x5e,0x7c,
  0xff,0x2c,0xfe,0x3,0x18,0x0,0x24,0x35,0x6b,0x82,0xb4,0x28,0xef,0x29,0xc0,0x1,
  0xa4,0x86,0xff,0x37,0xdd,0xff,0x5c,0x2,0x78,0x19,0x70,0x46,0xf1,0xfd,0xb3,0xf8,
  0xf,0x60,0x0,0x90,0x34,0x9c,0x79,0xa4,0x2b,0xba,0xa7,0x2,0x7,0x75,0xc7,0x36,
  0xa1,0x15,0x29,0x77,0x97,0x1,0x8f,0x2a,0xbe,0x7f,0x16,0xff,0x1,0xc,0x0,0x92,
  0xfa,0x33,0x8f,0x74,0xbf,0xfe,0x10,0xd2,0x55,0xfe,0x81,0x94,0xb7,0x55,0xad,0xe2,
  0xed,0x3b,0x39,0x39,0x79,0x71,0x74,0x11,0xc3,0xf0,0x29,0x0,0x49,0x6d,0xb0,0x2b,
  0x69,0xf1,0xd6,0xe1,0xc0,0xc1,0xa4,0xed,0x70,0xa5,0x61,0x1c,0x1,0x18,0x0,0x24,
  0x29,0x33,0x9b,0x93,0x1a,0xfd,0xea,0xa6,0xbf,0x7b,0x6c,0x39,0xaa,0xd0,0x1,0xd1,
  0x5,0xc,0xcb,0x0,0x20,0xa9,0x16,0x7b,0x0,0x47,0x3,0x47,0x1,0x4f,0xa6,0x25,
  0xaf,0x74,0x55,0x98,0x47,0x44,0x17,0x30,0x2c,0x3,0x80,0xa4,0x52,0x2d,0x20,0x2d,
  0xdc,0x3b,0xaa,0x3b,0xbc,0xca,0xd7,0x38,0x6d,0x17,0x5d,0xc0,0xb0,0xc,0x0,0x92,
  0x4a,0xb2,0x39,0xf0,0x4c,0xe0,0x59,0xc0,0xd3,0x48,0xef,0xad,0x97,0x22,0x14,0xdf,
  0x3f,0x8b,0xff,0x0,0x92,0xaa,0xb7,0x35,0x70,0x2c,0xf0,0x6c,0xd2,0xca,0xfd,0x85,
  0xb1,0xe5,0x48,0x0,0xdc,0x1f,0x5d,0xc0,0xb0,0xc,0x0,0x92,0x72,0xb4,0x23,0xa9,
  0xe1,0x1f,0x4b,0x7a,0x2e,0xdf,0x73,0x95,0x72,0x73,0x7d,0x74,0x1,0xc3,0xf2,0x5f,
  0x2a,0x49,0xb9,0x78,0x30,0xe9,0x85,0x2b,0xcf,0x23,0xad,0xb0,0x76,0x93,0xf,0xe5,
  0xec,0x8a,0xe8,0x2,0x86,0x65,0x0,0x90,0x14,0x69,0x53,0xd2,0x95,0xfe,0xf3,0x81,
  0x43,0xf1,0x9c,0xa4,0x72,0xfc,0x2c,0xba,0x80,0x61,0xb9,0x13,0xa0,0xa4,0x71,0xdb,
  0x10,0x38,0x92,0xd4,0xf4,0x8f,0x6,0x16,0xc5,0x96,0x23,0xf5,0x6d,0x12,0x78,0xc8,
  0xe4,0xe4,0xe4,0xb5,0xd1,0x85,0xc,0xc3,0xb4,0x2d,0x69,0x5c,0xf6,0x7,0x5e,0x2,
  0x1c,0x87,0xaf,0xcd,0x55,0xd9,0x7e,0x2,0x14,0xdd,0xfc,0xc1,0x0,0x20,0x69,0xb4,
  0xb6,0x5,0x5e,0x4,0x9c,0x0,0x3c,0x2a,0xb8,0x16,0xa9,0x29,0xff,0x1a,0x5d,0x40,
  0x13,0xc,0x0,0x92,0x9a,0xb6,0x80,0x34,0xb5,0xff,0x12,0xd2,0x7e,0xe9,0xee,0xc8,
  0xa7,0x9a,0x9c,0xb,0x7c,0x2f,0xba,0x88,0x26,0xb8,0x6,0x40,0x52,0x53,0x76,0x3,
  0x5e,0x5,0xbc,0x18,0x5f,0xb6,0xa3,0x3a,0xdd,0xd,0x3c,0xe,0xb8,0x12,0xa0,0xf4,
  0xfe,0xe9,0xc,0x80,0xa4,0x61,0x6c,0x0,0x1c,0x43,0x6a,0xfc,0x87,0x92,0x5e,0xb5,
  0x2b,0xd5,0x68,0x92,0xf4,0x7b,0x7e,0x65,0x74,0x21,0x4d,0x31,0x0,0x48,0x1a,0xc4,
  0xe,0xc0,0x2b,0x81,0x97,0x91,0x36,0xed,0x91,0x6a,0xf7,0xe,0xe0,0x8b,0xd1,0x45,
  0x34,0xc9,0x0,0x20,0xa9,0x1f,0x87,0x1,0xff,0x40,0x7a,0xf9,0x8e,0xf7,0xf6,0xd5,
  0x16,0x1d,0xe0,0xd4,0xe8,0x22,0x9a,0x66,0x0,0x90,0x34,0x97,0x45,0xa4,0x95,0xfc,
  0x27,0xe2,0x4a,0x7e,0xb5,0x4f,0x7,0x38,0x25,0xba,0x88,0x51,0x30,0x0,0x48,0x9a,
  0xc9,0x8e,0xc0,0x6b,0x81,0x97,0x3,0x5b,0x5,0xd7,0x22,0x45,0xe8,0x50,0x69,0xf3,
  0x7,0x3,0x80,0xa4,0xf5,0x3d,0x9,0x78,0x3d,0xe9,0x45,0x3c,0x4e,0xf3,0xab,0xad,
  0x3a,0x54,0xdc,0xfc,0xc1,0x0,0x20,0x29,0x99,0x0,0x9e,0x5,0xbc,0x15,0x78,0x62,
  0x70,0x2d,0x8a,0x33,0x9,0xdc,0xd9,0x1d,0x77,0x74,0xff,0xbc,0xa7,0x3b,0xee,0x9d,
  0xe6,0xcf,0x7b,0x81,0xe5,0xc0,0x4a,0x60,0x55,0xf7,0xcf,0xa9,0x63,0x43,0xe0,0x7d,
  0xc0,0x16,0x63,0xfc,0xc,0x4d,0xe8,0x50,0x79,0xf3,0x7,0x3,0x80,0xd4,0x76,0xb,
  0x48,0xf7,0xf7,0xdf,0x8,0xec,0x15,0x5c,0x8b,0x9a,0x77,0x17,0x70,0x4b,0x77,0xdc,
  0xda,0xfd,0xf3,0x36,0xe0,0xe6,0xee,0xff,0x7d,0x3b,0xb0,0x64,0xca,0xb8,0x93,0xd4,
  0xb8,0x9b,0xb0,0x18,0xf8,0x36,0x36,0xff,0x6c,0x19,0x0,0xa4,0x76,0xda,0x94,0xf4,
  0x18,0xdf,0xeb,0x80,0x9d,0x83,0x6b,0xd1,0x60,0xee,0x24,0xed,0x47,0x7f,0x5d,0x77,
  0x5c,0xdf,0x1d,0xd7,0x4e,0xf9,0xfb,0xb2,0xa0,0xda,0x56,0x37,0xff,0x43,0x83,0x8e,
  0x3f,0xa8,0xe,0x2d,0x69,0xfe,0x60,0x0,0x90,0xda,0x66,0x1b,0xd2,0xfd,0xfd,0x57,
  0xe3,0xb,0x79,0x4a,0x70,0x1b,0x70,0x75,0x77,0x5c,0x33,0xe5,0xef,0x57,0x3,0x7f,
  0x9,0xac,0x6b,0x36,0x36,0xff,0x42,0x18,0x0,0xa4,0x76,0xd8,0x16,0x78,0x33,0x69,
  0x27,0xb3,0x8d,0x83,0x6b,0xd1,0xda,0x26,0x81,0x3f,0x3,0x97,0x3,0xbf,0x5,0x7e,
  0xd7,0xfd,0xfb,0x15,0xc0,0xd2,0xc0,0xba,0x6,0x61,0xf3,0x2f,0x88,0x1,0x40,0xaa,
  0xdb,0x76,0xc0,0x5b,0x48,0xd3,0xfd,0x8b,0x83,0x6b,0x51,0xba,0xe7,0x7e,0x31,0xf0,
  0x1b,0xe0,0x12,0x52,0xa3,0xff,0x1d,0x71,0x53,0xf5,0x4d,0xb2,0xf9,0x17,0xc6,0x0,
  0x20,0xd5,0x69,0x7b,0xe0,0x24,0xe0,0x15,0xa4,0x8d,0x7c,0x34,0x7e,0xd7,0x91,0x1a,
  0xfd,0xea,0x71,0x11,0xe9,0x4a,0xbf,0x46,0x36,0xff,0x2,0x19,0x0,0xa4,0xba,0x6c,
  0xf,0xbc,0x8d,0xb4,0x79,0x8f,0x8d,0x7f,0x7c,0xee,0x4,0xfe,0x1b,0xf8,0xd5,0x94,
  0x71,0x4b,0x68,0x45,0xe3,0x63,0xf3,0x2f,0x94,0x1,0x40,0xaa,0xc3,0x16,0xa4,0xc6,
  0x7f,0x22,0x4e,0xf5,0x8f,0xda,0x24,0x69,0xda,0xfe,0x17,0xac,0x69,0xf6,0x97,0x93,
  0x9e,0x83,0x6f,0x1b,0x9b,0x7f,0xc1,0xc,0x0,0x52,0xd9,0x36,0x6,0xfe,0x91,0xf4,
  0x1c,0xbf,0xab,0xfa,0x47,0x63,0x25,0xe9,0xbe,0xfd,0x4f,0x81,0x9f,0x75,0xc7,0x6d,
  0xa1,0x15,0xe5,0x61,0x31,0x70,0x16,0x70,0x48,0x74,0x21,0x7d,0xea,0x60,0xf3,0x7,
  0xc,0x0,0x52,0xa9,0x16,0x92,0x16,0xf6,0xbd,0x9d,0xb4,0xd0,0x4f,0xcd,0x59,0x9,
  0x5c,0x8,0x9c,0x4b,0x6a,0xfa,0xbf,0xa0,0xbc,0xd5,0xf8,0xa3,0xb6,0xfa,0xca,0xdf,
  0xe6,0x5f,0x30,0x3,0x80,0x54,0x96,0x79,0xc0,0xb,0x49,0x27,0xb1,0x87,0xc4,0x96,
  0x52,0x95,0x3f,0x1,0xff,0x9,0xfc,0x0,0xf8,0x31,0xf0,0xd7,0xd0,0x6a,0xf2,0xe6,
  0xb4,0x7f,0x25,0xc,0x0,0x52,0x39,0xe,0x6,0x3e,0x0,0xec,0x17,0x5d,0x48,0x5,
  0xee,0x24,0x35,0xfb,0xef,0x3,0x3f,0x24,0x6d,0xb2,0xa3,0xb9,0xd9,0xfc,0x2b,0x62,
  0x0,0x90,0xf2,0xb7,0x27,0xf0,0x41,0xe0,0x19,0xd1,0x85,0x14,0xee,0xf,0xc0,0xb7,
  0x80,0xb3,0x81,0x9f,0x93,0x5e,0x62,0xa3,0xde,0xd9,0xfc,0x2b,0x63,0x0,0x90,0xf2,
  0xb5,0xd,0xf0,0x1e,0xe0,0xa5,0xf8,0xef,0xea,0x20,0x1e,0x20,0x2d,0xd8,0x3b,0x1b,
  0xf8,0xe,0xf0,0xfb,0xd8,0x72,0x8a,0x66,0xf3,0xaf,0x90,0x27,0x15,0x29,0x3f,0x8b,
  0x48,0xab,0xfa,0xdf,0xc,0x6c,0x16,0x5c,0x4b,0x69,0xee,0x3,0xce,0x1,0xce,0x24,
  0xad,0x50,0xbf,0x23,0xb6,0x9c,0x2a,0xd8,0xfc,0x2b,0x65,0x0,0x90,0xf2,0xf2,0x5c,
  0xd2,0x7d,0xfe,0x5d,0xa2,0xb,0x29,0xc8,0xdd,0xa4,0x2b,0xfc,0x6f,0x90,0x9a,0xff,
  0x5d,0xb1,0xe5,0x54,0xc5,0xe6,0x5f,0x31,0x3,0x80,0x94,0x87,0xbd,0x80,0xf,0x3,
  0x4f,0x8b,0x2e,0xa4,0x10,0x77,0x1,0xdf,0x4,0xbe,0x4a,0x5a,0xcc,0x77,0x5f,0x68,
  0x35,0x75,0xf2,0x39,0xff,0xca,0x19,0x0,0xa4,0x58,0x9b,0x91,0x4e,0x56,0xff,0x0,
  0x2c,0x8,0xae,0x25,0x77,0xcb,0x81,0xef,0x2,0x5f,0x26,0x5d,0xf1,0xdf,0x13,0x5b,
  0x4e,0xd5,0x7c,0xce,0xbf,0x5,0xc,0x0,0x52,0x8c,0x79,0xc0,0x8b,0x81,0xf7,0x92,
  0xf6,0xef,0xd7,0xf4,0x56,0x1,0x3f,0x21,0x35,0xfd,0x6f,0xe0,0xf3,0xf9,0xe3,0xe0,
  0x95,0x7f,0x4b,0x18,0x0,0xa4,0xf1,0xdb,0x7,0x38,0x1d,0x78,0x42,0x74,0x21,0x19,
  0xfb,0x3d,0x70,0x6,0xf0,0x5,0xe0,0x86,0xe0,0x5a,0xda,0xc4,0x2b,0xff,0x36,0x99,
  0x9c,0x9c,0x2c,0x7a,0x48,0x5,0x59,0xc,0x7c,0x88,0xf4,0x78,0xda,0xa4,0x63,0xbd,
  0xb1,0x94,0x14,0x8c,0x9e,0x4,0x4c,0xc,0xf8,0x1d,0x6b,0x70,0x8b,0x49,0x9b,0x22,
  0x45,0xff,0x1e,0xf4,0x3b,0x4e,0x1e,0xc5,0x97,0xd1,0x8b,0xe8,0xfe,0x37,0xec,0x70,
  0x6,0x40,0x1a,0x8f,0x67,0x1,0x1f,0xc1,0xed,0x7b,0xd7,0xb5,0x7a,0x8a,0xff,0x33,
  0xa4,0x29,0x7e,0xef,0xeb,0xc7,0x70,0xb5,0x7f,0xb,0x19,0x0,0xa4,0xd1,0xda,0x19,
  0xf8,0x37,0x52,0x0,0xd0,0x1a,0x7f,0x1,0x3e,0x5,0xfc,0x1f,0xdc,0x86,0x37,0x9a,
  0xcd,0xbf,0xad,0xa2,0xa7,0x20,0xbc,0x5,0xa0,0x4a,0x6d,0x0,0xbc,0x81,0xf4,0xb8,
  0x5a,0xf4,0x14,0x69,0x4e,0xe3,0xbf,0x80,0xe3,0x81,0xd,0x7,0xff,0x6a,0xd5,0x20,
  0xa7,0xfd,0x87,0x10,0xdd,0xff,0xbc,0x5,0x20,0xe5,0x67,0x1f,0xe0,0xd3,0xc0,0xe3,
  0xa2,0xb,0xc9,0xc4,0x52,0xe0,0xdf,0x49,0xf7,0xf7,0x2f,0xb,0xae,0x45,0x6b,0xb8,
  0xda,0xbf,0xed,0xa2,0x13,0x88,0x33,0x0,0xaa,0xc8,0x6,0xa4,0x2b,0x93,0xfb,0x89,
  0xbf,0x42,0xca,0x61,0x5c,0x9,0xbc,0xa,0xd8,0x78,0x98,0x2f,0x55,0x23,0xe1,0x95,
  0x7f,0x3,0xa2,0xfb,0xdf,0xd0,0xfd,0x33,0xba,0x0,0x3,0x80,0x2a,0xb1,0x2f,0x70,
  0x21,0xf1,0x27,0xc8,0xe8,0xb1,0x8a,0xb4,0x59,0xcf,0xd3,0x49,0x7b,0x1d,0x28,0x3f,
  0x36,0xff,0x86,0x44,0xf7,0x3f,0x3,0x80,0x14,0x6b,0x43,0xe0,0x5f,0x48,0xbb,0xd4,
  0x45,0x9f,0x20,0x23,0xc7,0x32,0xe0,0x63,0xa4,0x57,0x17,0x2b,0x5f,0x8b,0x81,0x1f,
  0x11,0xff,0xfb,0x52,0x7c,0xf3,0x87,0xf2,0xfb,0xa7,0x6b,0x0,0xa4,0xc1,0x3d,0x81,
  0x74,0xaf,0x7f,0xef,0xe8,0x42,0x2,0xdd,0x2,0x7c,0x14,0xf8,0x24,0xee,0xd2,0x97,
  0x3b,0x37,0xf9,0xd1,0xda,0xa2,0x13,0x88,0x33,0x0,0x2a,0xd0,0x6,0xc0,0x3f,0xd3,
  0xee,0xd,0x7d,0xfe,0x0,0xbc,0x92,0xf4,0xea,0x62,0xe5,0xcf,0x69,0xff,0x11,0x88,
  0xee,0x7f,0x43,0xf7,0xcf,0xe8,0x2,0xc,0x0,0x2a,0xcc,0x9e,0xc0,0xaf,0x89,0x3f,
  0x31,0x46,0x8d,0xb,0x48,0xaf,0x2c,0x9e,0x3f,0xec,0x17,0xa9,0xb1,0xb1,0xf9,0x8f,
  0x48,0x74,0xff,0x33,0x0,0x48,0xe3,0x31,0xf,0x78,0x23,0x69,0xa7,0xba,0xe8,0x13,
  0x63,0xc4,0x38,0x17,0x38,0x6c,0xe8,0x6f,0x51,0xe3,0x66,0xf3,0x1f,0xa1,0xe8,0xfe,
  0x67,0x0,0x90,0x46,0x6f,0x27,0x52,0x3,0x8c,0x3e,0x29,0x46,0x8c,0xef,0x3,0x7,
  0xd,0xff,0x15,0x2a,0x80,0xcd,0x7f,0xc4,0xa2,0xfb,0x9f,0x1,0x40,0x1a,0xad,0x17,
  0x93,0x16,0xb7,0x45,0x9f,0x14,0xc7,0x3d,0xce,0x1,0xe,0x6c,0xe0,0xfb,0x53,0xc,
  0x57,0xfb,0x8f,0x41,0x74,0xff,0x33,0x0,0x48,0xa3,0xb1,0x9,0xe9,0x55,0xb4,0xd1,
  0x27,0xc4,0x71,0x8f,0xb3,0x81,0x27,0x37,0xf0,0xfd,0x29,0x8e,0x57,0xfe,0x63,0x12,
  0xdd,0xff,0xc,0x0,0x52,0xf3,0x1e,0x4f,0x7a,0x1f,0x7d,0xf4,0x9,0x71,0x9c,0xe3,
  0x7,0xc0,0xfe,0x4d,0x7c,0x79,0xa,0x65,0xf3,0x1f,0xa3,0xe8,0xfe,0x67,0x0,0x90,
  0x9a,0x33,0xf,0x38,0x89,0x76,0x6d,0xe5,0xfb,0x6b,0xca,0x7b,0xb,0x9c,0xa6,0xe7,
  0xb4,0xff,0x98,0x45,0xf7,0x3f,0x3,0x80,0xd4,0x8c,0x6d,0x48,0xb,0xde,0xa2,0x4f,
  0x86,0xe3,0x1a,0x57,0x0,0x7f,0x7,0x4c,0x34,0xf0,0xdd,0x29,0x9e,0x57,0xfe,0x1,
  0xa2,0xfb,0x9f,0x1,0x40,0x1a,0xde,0x33,0x80,0x9b,0x88,0x3f,0x19,0x8e,0x63,0xfc,
  0x11,0x38,0x1,0xdc,0x5,0xb4,0x22,0x36,0xff,0x20,0xd1,0xfd,0xcf,0x0,0x20,0xd,
  0x6e,0x1e,0x69,0x1f,0xff,0x55,0xc4,0x9f,0xc,0x47,0x3d,0xee,0x0,0xde,0x44,0x7a,
  0x77,0x81,0xea,0x61,0xf3,0xf,0x14,0xdd,0xff,0xc,0x0,0xd2,0x60,0xb6,0x25,0x2d,
  0x7c,0x8b,0x3e,0x11,0x8e,0x7a,0x2c,0x7,0x3e,0x2,0x6c,0xdd,0xc8,0xb7,0xa6,0x9c,
  0xd8,0xfc,0x83,0x45,0xf7,0x3f,0x3,0x80,0xd4,0xbf,0xa7,0x2,0x37,0x10,0x7f,0x22,
  0x1c,0xf5,0xf8,0x3a,0xf0,0x88,0x86,0xbe,0x33,0xe5,0xc5,0x5,0x7f,0x19,0x88,0xee,
  0x7f,0x6,0x0,0xa9,0x77,0x13,0xc0,0x5b,0xa9,0xff,0x25,0x3e,0xbf,0xc6,0xdd,0xfb,
  0x6a,0xe6,0x95,0x7f,0x26,0xa2,0xfb,0x9f,0x1,0x40,0xea,0xcd,0x96,0xc0,0x99,0xc4,
  0x9f,0x4,0x47,0x39,0x6e,0x1,0x5e,0x4a,0x5a,0xdb,0xa0,0x3a,0xd9,0xfc,0x33,0x12,
  0xdd,0xff,0xc,0x0,0xd2,0xdc,0xf6,0x21,0xbd,0xbe,0x36,0xfa,0x24,0x38,0xaa,0xb1,
  0x2,0xf8,0x28,0xb0,0x45,0x43,0xdf,0x97,0xf2,0x54,0x6a,0xf3,0xef,0x8c,0xe0,0xbb,
  0xc8,0x42,0x74,0xff,0x33,0x0,0x48,0xb3,0x7b,0x36,0x70,0x37,0xf1,0x27,0xc1,0x51,
  0x8d,0x9f,0x91,0x2,0x8e,0xea,0xe6,0x3d,0xff,0xc,0x45,0xf7,0x3f,0x3,0x80,0x34,
  0xbd,0x79,0xc0,0xa9,0xd4,0xfb,0x88,0xdf,0x75,0xc0,0x71,0xb8,0x91,0x4f,0x1b,0x94,
  0x7a,0xe5,0x5f,0x75,0xf3,0x87,0xa,0xfa,0x67,0x74,0x1,0x6,0x0,0x8d,0xc0,0x66,
  0xc0,0x77,0x89,0x3f,0x1,0x8e,0x62,0xac,0x0,0x3e,0xc,0x6c,0xda,0xd8,0xb7,0xa5,
  0x9c,0xd9,0xfc,0x33,0x16,0xdd,0xff,0xc,0x0,0xd2,0xda,0xf6,0x0,0x2e,0x27,0xfe,
  0x4,0x38,0x8a,0xf1,0xdf,0xc0,0x7e,0xcd,0x7d,0x55,0xca,0x9c,0xcd,0x3f,0x73,0xd1,
  0xfd,0xcf,0x0,0x20,0xad,0x71,0xc,0xb0,0x84,0xf8,0x13,0x60,0xd3,0x63,0x29,0x70,
  0x22,0x30,0xbf,0xb1,0x6f,0x4a,0xb9,0xf3,0x9e,0x7f,0x1,0xa2,0xfb,0x9f,0x1,0x40,
  0x4a,0xde,0x2,0xac,0x24,0xfe,0x4,0xd8,0xf4,0xf8,0x2a,0xb0,0x63,0x83,0xdf,0x93,
  0xf2,0xe7,0x95,0x7f,0x21,0xa2,0xfb,0x9f,0x1,0x40,0x6d,0xb7,0x10,0xf8,0x24,0xf1,
  0x27,0xbf,0xa6,0xc7,0x8d,0xc0,0xb1,0xd,0x7e,0x4f,0x2a,0x83,0xcd,0xbf,0x20,0xd1,
  0xfd,0xcf,0x0,0xa0,0x36,0x7b,0x10,0xf0,0x13,0xe2,0x4f,0x7e,0x4d,0x8f,0xcf,0x90,
  0x36,0x2e,0x52,0xbb,0xd8,0xfc,0xb,0x13,0xdd,0xff,0x86,0x1d,0xbe,0x12,0x54,0xa5,
  0xfa,0x1b,0xe0,0x2c,0x60,0xf7,0xe8,0x42,0x1a,0x74,0x3,0xf0,0xa,0xe0,0x7b,0xd1,
  0x85,0x68,0xec,0x16,0x93,0x7e,0x9f,0xf,0x89,0x2e,0xa4,0x4f,0xa7,0x74,0x87,0xa,
  0xe4,0x96,0xa1,0x2a,0xd1,0x53,0x81,0xf3,0xa9,0xa7,0xf9,0x4f,0x2,0x9f,0x0,0x1e,
  0x89,0xcd,0xbf,0x8d,0x4a,0x6d,0xfe,0x1d,0x2a,0xde,0xe5,0xaf,0x15,0xa2,0xa7,0x20,
  0xbc,0x5,0xa0,0x3e,0xbd,0xc,0xb8,0x9f,0xf8,0x69,0xcf,0xa6,0xc6,0x75,0xc0,0xa1,
  0x8d,0x7e,0x43,0x2a,0x89,0xab,0xfd,0xb,0x16,0xdd,0xff,0x86,0xee,0x9f,0xd1,0x5,
  0x18,0x0,0xd4,0x87,0x93,0x89,0x3f,0xf1,0x35,0x39,0x3e,0x8b,0xf7,0xfa,0xdb,0xcc,
  0xe6,0x5f,0xb8,0xe8,0xfe,0x67,0x0,0x50,0x1b,0xcc,0x7,0x3e,0x46,0xfc,0x89,0xaf,
  0xa9,0x71,0x1b,0xf0,0x9c,0x46,0xbf,0x21,0x95,0xc6,0xe6,0x5f,0x81,0xe8,0xfe,0x67,
  0x0,0x50,0xed,0x16,0x3,0xdf,0x24,0xfe,0xc4,0xd7,0xd4,0x38,0x7,0xd8,0xae,0xc9,
  0x2f,0x48,0xc5,0xb1,0xf9,0x57,0x22,0xba,0xff,0x19,0x0,0x54,0xb3,0xad,0x49,0x8b,
  0xfd,0xa2,0x4f,0x7c,0x4d,0x8c,0xbb,0x80,0x97,0xe3,0xcb,0x7b,0xda,0xce,0xe6,0x5f,
  0x91,0xe8,0xfe,0x37,0xec,0xf0,0x31,0x40,0xe5,0x6a,0x77,0xe0,0x6c,0xea,0x58,0xe9,
  0x7f,0x21,0xf0,0x3c,0xe0,0xaa,0xe8,0x42,0x14,0x6a,0x31,0xf0,0x6d,0xca,0x5c,0xed,
  0xef,0xa3,0x7e,0x15,0xf2,0x31,0x40,0xe5,0xe8,0x31,0xc0,0xcf,0x29,0xbf,0xf9,0x4f,
  0x2,0x1f,0x2,0xe,0xc0,0xe6,0xdf,0x76,0xab,0x1f,0xf5,0x2b,0xed,0x89,0xf,0x9f,
  0xf3,0xaf,0x98,0x33,0x0,0xca,0xcd,0x1,0xa4,0x67,0xe1,0x37,0x8f,0x2e,0x64,0x48,
  0xb7,0x92,0xa6,0xfc,0xcf,0x8a,0x2e,0x44,0xe1,0xbc,0xf2,0x57,0x96,0xc,0x0,0xca,
  0xc9,0xe1,0xc0,0x99,0xc0,0xc6,0xd1,0x85,0xc,0xe9,0x27,0xc0,0xf1,0xc0,0x4d,0xc1,
  0x75,0x28,0x5e,0xa9,0x9b,0xfc,0x78,0xe5,0xdf,0x2,0xde,0x2,0x50,0x2e,0x8e,0x7,
  0xbe,0x43,0xd9,0xcd,0x7f,0x5,0xf0,0x36,0xe0,0x30,0x6c,0xfe,0x2a,0xb7,0xf9,0x77,
  0x70,0x87,0xbf,0x76,0x88,0x5e,0x85,0xe8,0x53,0x0,0x2,0x5e,0x4d,0xf9,0xaf,0xf2,
  0xbd,0x19,0x78,0x4a,0xd3,0x5f,0x8c,0x8a,0xe5,0x6a,0xff,0x16,0x88,0xee,0x7f,0x43,
  0xf7,0xcf,0xe8,0x2,0xc,0x0,0xad,0xf7,0xe,0xe2,0x4f,0x7a,0xc3,0x8e,0x1f,0x3,
  0xdb,0x37,0xfd,0xc5,0xa8,0x58,0xbe,0xd5,0xaf,0x25,0xa2,0xfb,0x9f,0x1,0x40,0x25,
  0xfb,0x67,0xe2,0x4f,0x7a,0xc3,0x8c,0x95,0xdd,0xcf,0x30,0xbf,0xe9,0x2f,0x46,0xc5,
  0xf2,0xca,0xbf,0x45,0xa2,0xfb,0x9f,0x1,0x40,0xa5,0x3a,0x95,0xf8,0x93,0xde,0x30,
  0xe3,0x76,0xe0,0xa8,0xc6,0xbf,0x15,0x95,0xcc,0xe6,0xdf,0x32,0xd1,0xfd,0xcf,0x0,
  0xa0,0xd2,0x4c,0x0,0xef,0x27,0xfe,0xa4,0x37,0xcc,0xf8,0xd,0xb0,0x6b,0xd3,0x5f,
  0x8c,0x8a,0x56,0xea,0xb4,0x7f,0x67,0x4,0xdf,0x45,0x6b,0x44,0xf7,0x3f,0x3,0x80,
  0x4a,0x32,0x41,0xf9,0x2f,0xf5,0xf9,0x22,0xe9,0x64,0x2f,0xad,0xe6,0x95,0x7f,0x4b,
  0x45,0xf7,0x3f,0x3,0x80,0x4a,0x31,0x1,0x7c,0x8a,0xf8,0x93,0xde,0xa0,0x63,0x5,
  0xf0,0x86,0xc6,0xbf,0x15,0x95,0xce,0xe6,0xdf,0x62,0xd1,0xfd,0xcf,0x0,0xa0,0x12,
  0xcc,0x7,0x4e,0x27,0xfe,0xa4,0x37,0xe8,0xb8,0x1d,0x38,0xa2,0xf1,0x6f,0x45,0xa5,
  0x2b,0xb5,0xf9,0x77,0x46,0xf0,0x5d,0xb4,0x52,0x74,0xff,0x33,0x0,0x28,0x77,0x13,
  0xc0,0x67,0x89,0x3f,0xe9,0xd,0x3a,0x2e,0x6,0x76,0x6b,0xfa,0x4b,0x51,0xf1,0x4a,
  0x6d,0xfe,0x27,0x8f,0xe2,0xcb,0x68,0xab,0xe8,0xfe,0x67,0x0,0x50,0xce,0x4a,0xbf,
  0xe7,0xff,0x75,0xca,0xde,0x99,0x50,0xa3,0x61,0xf3,0x17,0x50,0x41,0xff,0x8c,0x2e,
  0xc0,0x0,0x50,0xad,0x9,0xe0,0xdf,0x88,0x3f,0xe9,0xd,0x3a,0xfe,0x5,0xb7,0xca,
  0xd6,0xfa,0x36,0x4,0x7e,0x40,0xfc,0xef,0xa7,0xcd,0x3f,0x3,0xd1,0xfd,0xcf,0x0,
  0xa0,0x1c,0x95,0xdc,0xfc,0x97,0x3,0xaf,0x68,0xfe,0x2b,0x51,0x5,0x26,0x80,0xaf,
  0x12,0xff,0x3b,0x6a,0xf3,0xcf,0x44,0x74,0xff,0x33,0x0,0x28,0x47,0x1f,0x26,0xfe,
  0xa4,0x37,0xc8,0xf8,0xb,0x70,0xf0,0x8,0xbe,0xf,0xd5,0xe1,0x7f,0x11,0xff,0x3b,
  0x6a,0xf3,0xcf,0x48,0x74,0xff,0x33,0x0,0x28,0x37,0xef,0x21,0xfe,0xa4,0x37,0xc8,
  0xf8,0x1d,0xf0,0xf0,0x11,0x7c,0x1f,0xaa,0xc3,0xc3,0x80,0x7b,0x89,0xff,0x3d,0xed,
  0x67,0x74,0x46,0xf1,0x45,0x68,0x8d,0xe8,0xfe,0x37,0xec,0xf0,0x1e,0xa7,0x9a,0x74,
  0x32,0xf0,0x4f,0xd1,0x45,0xc,0xe0,0x5c,0xe0,0x0,0xe0,0xea,0xe8,0x42,0x94,0xad,
  0x53,0x81,0x8d,0xa2,0x8b,0xe8,0x43,0x7,0x3,0x80,0xe6,0x12,0x9d,0x40,0x9c,0x1,
  0xa8,0xc6,0x6b,0x88,0xbf,0xe2,0x19,0x64,0x7c,0x19,0x58,0x38,0x82,0xef,0x43,0xf5,
  0xd8,0x8d,0xb2,0x5e,0x57,0x7d,0xf2,0x68,0xbe,0x6,0xad,0x2b,0xba,0xff,0x39,0x3,
  0xa0,0x1c,0x9c,0x40,0x5a,0xf4,0x57,0x9a,0xd3,0x80,0x17,0x90,0x16,0xfe,0x49,0x33,
  0x79,0x31,0xe5,0x3c,0x11,0x72,0x4a,0x77,0x48,0x73,0x8b,0x4e,0x20,0xce,0x0,0x14,
  0xef,0x68,0xe0,0x1,0xe2,0xaf,0x7a,0xfa,0x19,0x2b,0x81,0xd7,0x8d,0xe2,0xcb,0x50,
  0x95,0x2e,0x25,0xfe,0x77,0xd6,0x2b,0xff,0xc,0x45,0xf7,0xbf,0x61,0xc7,0x44,0xe9,
  0x4d,0x74,0x62,0x62,0x22,0xba,0x84,0x36,0x7b,0x2a,0xf0,0x3d,0x60,0x51,0x74,0x21,
  0x7d,0xb8,0x17,0x78,0x11,0x69,0x93,0x1f,0x69,0x2e,0x5b,0x92,0xb6,0x82,0xce,0xfd,
  0x44,0xd3,0xc1,0x2b,0xff,0xb1,0x2b,0xbd,0x7f,0x6e,0x10,0x5d,0x80,0x8a,0xf5,0x58,
  0xe0,0xdb,0x94,0xd5,0xfc,0x97,0x2,0x47,0x1,0xbf,0x88,0x2e,0x44,0xc5,0x78,0x8,
  0x36,0x7f,0x55,0xca,0x0,0xa0,0x41,0xec,0x9,0x9c,0x3,0x6c,0x16,0x5d,0x48,0x1f,
  0x6e,0x2,0x8e,0x4,0x2e,0xa,0xae,0x43,0x65,0xd9,0x21,0xba,0x80,0x39,0x74,0xb0,
  0xf9,0x6b,0x40,0x6,0x0,0xf5,0x6b,0x7,0xd2,0xb4,0xff,0xd6,0xd1,0x85,0xf4,0xe1,
  0x1a,0xe0,0xf0,0xee,0x9f,0x52,0x3f,0xb6,0x89,0x2e,0x60,0x16,0x2e,0xf8,0xd3,0x50,
  0x4a,0x59,0xd9,0xaa,0x3c,0x6c,0x2,0x9c,0xd,0xec,0x1a,0x5d,0x48,0x1f,0x2e,0x3,
  0xe,0xc4,0xe6,0xaf,0xc1,0xdc,0x13,0x5d,0xc0,0xc,0x3a,0xf8,0x9c,0xbf,0x86,0x64,
  0x0,0x50,0xaf,0x16,0x92,0xf6,0x41,0xdf,0x37,0xb8,0x8e,0x7e,0xfc,0x8a,0xb4,0x50,
  0xf1,0xa6,0xe8,0x42,0x54,0xac,0x1b,0xa3,0xb,0x98,0x46,0x7,0xaf,0xfc,0xd5,0x0,
  0x3,0x80,0x7a,0x31,0x1,0x9c,0x1,0x1c,0x11,0x5d,0x48,0x1f,0xbe,0xf,0x1c,0x6,
  0xfc,0x35,0xba,0x10,0x15,0xed,0xe6,0xe8,0x2,0xd6,0xd1,0xc1,0xe6,0xaf,0x86,0x18,
  0x0,0xd4,0x8b,0x93,0x49,0x1b,0xe6,0x94,0xe2,0x1c,0xe0,0x18,0xe0,0xee,0xe8,0x42,
  0x54,0xbc,0x6b,0x48,0x4f,0x8f,0xe4,0xc0,0x7b,0xfe,0x6a,0x94,0x1,0x40,0x73,0x79,
  0x2d,0x65,0x6d,0x30,0x72,0x26,0xf0,0x77,0xc0,0xfd,0xc1,0x75,0xa8,0xe,0x2b,0x49,
  0xef,0x8a,0x88,0xd6,0xc1,0x7b,0xfe,0x6a,0x98,0x1,0x40,0xb3,0x39,0x82,0xf4,0x6a,
  0xdf,0x52,0x7c,0x5,0x38,0xe,0x9b,0xbf,0x9a,0xf5,0xe5,0xe0,0xe3,0x77,0xf0,0xca,
  0x5f,0x23,0xe0,0x4e,0x80,0x9a,0xc9,0xa3,0x80,0x9f,0x53,0xce,0xb3,0xfe,0xff,0x17,
  0x38,0x9e,0x74,0xc5,0x26,0x35,0x69,0x1,0xe9,0x4d,0x91,0xbb,0x4,0x1c,0xbb,0x83,
  0xcd,0x3f,0x5b,0xa5,0xf7,0x4f,0x67,0x0,0x34,0x9d,0xed,0x81,0xb3,0x28,0xa7,0xf9,
  0x7f,0x16,0x9b,0xbf,0x46,0xe7,0x1,0xe0,0xbd,0x1,0xc7,0xf5,0x9e,0xbf,0x46,0x2b,
  0xfa,0x65,0x4,0xbe,0xc,0x28,0x3b,0x1b,0x91,0x1e,0x9f,0x8b,0x7e,0xb1,0x49,0xaf,
  0xe3,0x93,0x18,0x64,0x35,0x7a,0xf3,0x18,0xef,0xbf,0x17,0x25,0xad,0xbb,0x69,0xad,
  0xe8,0xfe,0x37,0xec,0xf0,0xc4,0xa9,0xa9,0x26,0x80,0x4f,0x3,0xfb,0x47,0x17,0xd2,
  0xa3,0x33,0x80,0x57,0x3,0xab,0xa2,0xb,0x51,0xf5,0x56,0x91,0x9e,0x84,0xb9,0x73,
  0xc,0xc7,0xea,0xe0,0x95,0xbf,0xc6,0x21,0x3a,0x81,0x38,0x3,0x90,0x95,0xe,0xf1,
  0x57,0xf4,0xbd,0x8e,0x2f,0xe1,0x95,0xbf,0xc6,0xef,0x30,0xd2,0x22,0x53,0xaf,0xfc,
  0x15,0xde,0xff,0x86,0xee,0x9f,0xd1,0x5,0x18,0x0,0xb2,0xf1,0x42,0xd2,0x55,0x4e,
  0x74,0x63,0xef,0x65,0xfc,0x7,0xbe,0xc7,0x42,0x71,0x8e,0x4,0x96,0xd1,0xec,0xef,
  0xf4,0x2a,0xe0,0x4d,0xe3,0xfc,0x10,0x1a,0x5e,0x74,0xff,0x1b,0x76,0xf8,0x14,0x80,
  0x0,0x1e,0x3,0x9c,0x47,0xba,0xff,0x9f,0xbb,0xaf,0x92,0x16,0xfc,0xad,0x88,0x2e,
  0x44,0xad,0xf6,0x58,0x52,0x10,0x7d,0x78,0x3,0x3f,0xeb,0xe,0xe0,0x65,0xa4,0x3d,
  0x2c,0x54,0x90,0xd2,0xfb,0xa7,0x53,0xa8,0xda,0x9a,0x74,0xe2,0x29,0xa1,0xf9,0x9f,
  0x49,0xba,0xf,0x6b,0xf3,0x57,0xb4,0xb,0x80,0xfd,0x80,0xf,0x2,0xcb,0x7,0xfc,
  0x19,0xab,0x67,0xb3,0xf6,0xc1,0xe6,0xaf,0x0,0xce,0x0,0xb4,0xdb,0x42,0xe0,0x3f,
  0x81,0xbf,0xd,0xae,0xa3,0x17,0x3f,0x22,0x4d,0xbd,0xe,0x7a,0xb2,0x95,0x46,0x65,
  0x67,0xe0,0xf5,0xa4,0x70,0xba,0x5d,0xf,0xff,0xfc,0x9d,0xc0,0x37,0x80,0x8f,0x0,
  0x17,0x8f,0xae,0x2c,0x8d,0x5a,0xf1,0xfd,0xb3,0xf8,0xf,0x60,0x0,0x18,0xc6,0x27,
  0x80,0x57,0x46,0x17,0xd1,0x83,0x5f,0x91,0x16,0x5f,0xb9,0xb7,0xbf,0x72,0x36,0x1f,
  0x78,0x1c,0xf0,0x64,0xd2,0xa6,0x41,0xdb,0x1,0xf,0x6,0x96,0x90,0xde,0x48,0x79,
  0x23,0xf0,0x4b,0xd2,0xed,0xb6,0xfb,0x62,0x4a,0x54,0x93,0x8a,0xef,0x9f,0xc5,0x7f,
  0x0,0x3,0xc0,0xa0,0xfe,0x9e,0xf4,0xc,0x7d,0xee,0x2e,0x23,0xbd,0xd2,0xd7,0xb7,
  0xfa,0x49,0xca,0x4a,0xf1,0xfd,0xb3,0xf8,0xf,0x60,0x0,0x18,0xc4,0x81,0xa4,0x29,
  0xf5,0x85,0xd1,0x85,0xcc,0xe1,0x1a,0xe0,0x20,0xf2,0x7c,0x27,0xbb,0xa4,0x96,0x2b,
  0xbe,0x7f,0x16,0xff,0x1,0xc,0x0,0xfd,0xda,0x86,0x74,0xdf,0xb1,0x97,0x7b,0x95,
  0x91,0xae,0x23,0xad,0x4d,0xb8,0x26,0xb8,0xe,0x49,0x9a,0x56,0xe9,0xfd,0xd3,0xa7,
  0x0,0xda,0x65,0x3,0xd2,0x6,0x3a,0xb9,0x37,0xff,0x5b,0x81,0xc3,0xb1,0xf9,0x4b,
  0xd2,0xc8,0x18,0x0,0xda,0xe5,0x54,0xe0,0xd0,0xe8,0x22,0xe6,0xb0,0xc,0x38,0x1a,
  0xb8,0x32,0xba,0x10,0x49,0xaa,0x99,0xb7,0x0,0xda,0xe3,0x99,0xc0,0xb7,0x48,0xfb,
  0xfd,0xe7,0x6a,0x25,0xf0,0x2c,0xe0,0xec,0xe8,0x42,0x24,0x69,0x2e,0xa5,0xf7,0x4f,
  0x67,0x0,0xda,0x61,0x57,0xe0,0x73,0xe4,0xdd,0xfc,0x1,0x5e,0x83,0xcd,0x5f,0x92,
  0xc6,0xc2,0x0,0x50,0xbf,0x8d,0x48,0xdb,0xe7,0x6e,0x19,0x5d,0xc8,0x1c,0x4e,0x3,
  0x4e,0x8f,0x2e,0x42,0x92,0xda,0xc2,0x0,0x50,0xbf,0xd3,0x80,0xc7,0x47,0x17,0x31,
  0x87,0xcf,0x0,0x27,0x45,0x17,0x21,0x49,0x6d,0xe2,0x1a,0x80,0xba,0x9d,0x40,0x9a,
  0xfa,0xcf,0xd9,0x59,0xc0,0xb3,0x71,0x7f,0x7f,0x49,0x85,0x29,0xbe,0x7f,0x16,0xff,
  0x1,0xc,0x0,0x33,0x79,0x28,0x70,0x9,0xb0,0x49,0x74,0x21,0xb3,0xb8,0x4,0x78,
  0x12,0x69,0xe5,0xbf,0x24,0x15,0xa5,0xf4,0xfe,0xe9,0x2d,0x80,0x3a,0x2d,0x20,0x3d,
  0xef,0x9f,0x73,0xf3,0xbf,0x89,0xf4,0x64,0x82,0xcd,0x5f,0x92,0x2,0x18,0x0,0xea,
  0xf4,0xe,0xe0,0x89,0xd1,0x45,0xcc,0xe2,0x3e,0xd2,0xe3,0x7e,0xd7,0x46,0x17,0x22,
  0x49,0x6d,0xe5,0x2d,0x80,0xfa,0x1c,0x4d,0x7a,0xde,0x3f,0xd7,0x70,0x37,0x9,0x1c,
  0x4f,0x7a,0xf,0xba,0x24,0x15,0xab,0xf4,0xfe,0x99,0x6b,0x93,0xd0,0x60,0xb6,0x25,
  0xad,0xa8,0xcf,0xf9,0x7f,0xd7,0x77,0x63,0xf3,0x97,0xa4,0x70,0x39,0x37,0xa,0xf5,
  0x67,0x3e,0x69,0xc5,0xff,0xd6,0xd1,0x85,0xcc,0xe2,0x33,0x40,0x27,0xba,0x8,0x49,
  0x92,0x1,0xa0,0x26,0x6f,0x6,0x9e,0x1e,0x5d,0xc4,0x2c,0xce,0x7,0x5e,0x1d,0x5d,
  0x84,0x24,0x29,0x71,0xd,0x40,0x1d,0x1e,0x9,0x5c,0x0,0x2c,0x8c,0x2e,0x64,0x6,
  0x37,0x2,0x8f,0x23,0xad,0xfc,0x97,0xa4,0x2a,0x94,0xde,0x3f,0x9d,0x1,0x28,0xdf,
  0x46,0xc0,0xe7,0xc9,0xb7,0xf9,0xdf,0xf,0x3c,0x7,0x9b,0xbf,0x24,0x65,0xc5,0x0,
  0x50,0xbe,0xf7,0x2,0xfb,0x46,0x17,0x31,0x8b,0xd7,0x0,0xbf,0x8c,0x2e,0x42,0x92,
  0xb4,0x36,0x6f,0x1,0x94,0xed,0x49,0xc0,0xcf,0xc8,0x37,0xc8,0x9d,0xe,0xbc,0x32,
  0xba,0x8,0x49,0x1a,0x85,0xe2,0xfb,0x67,0xf1,0x1f,0xa0,0xbd,0x1,0x60,0x33,0xe0,
  0x42,0x60,0xb7,0xe8,0x42,0x66,0xf0,0x63,0xd2,0xa2,0xc4,0x7,0xa2,0xb,0x91,0xa4,
  0x51,0x28,0xbd,0x7f,0xe6,0x7a,0xe5,0xa8,0xb9,0xfd,0x2b,0xf9,0x36,0xff,0x1b,0x80,
  0xe7,0x61,0xf3,0x97,0xa4,0x6c,0x19,0x0,0xca,0x74,0x2c,0xf0,0xf7,0xd1,0x45,0xcc,
  0x60,0x5,0x70,0x1c,0x70,0x6b,0x74,0x21,0x92,0xa4,0x99,0x19,0x0,0xca,0xb3,0x5,
  0xf0,0xf1,0xe8,0x22,0x66,0xf1,0x4f,0xc0,0x2f,0xa2,0x8b,0x90,0x24,0xcd,0xce,0x0,
  0x50,0x9e,0xd3,0x80,0xed,0xa2,0x8b,0x98,0xc1,0xd7,0x80,0xf7,0x47,0x17,0x21,0x49,
  0x9a,0x9b,0x8b,0x0,0xcb,0xf2,0xc,0xe0,0xbb,0xd1,0x45,0xcc,0xe0,0x2a,0xd2,0x66,
  0x3f,0x77,0x46,0x17,0x22,0x49,0xe3,0x50,0x7c,0xff,0x2c,0xfe,0x3,0xb4,0x27,0x0,
  0x6c,0xe,0x5c,0x6,0xec,0x14,0x5d,0xc8,0x34,0xee,0x1,0xe,0x0,0x2e,0x89,0x2e,
  0x44,0x92,0xc6,0xa5,0xf4,0xfe,0xe9,0x2d,0x80,0x72,0xbc,0x9f,0x3c,0x9b,0x3f,0xc0,
  0x89,0xd8,0xfc,0x25,0xa9,0x28,0xce,0x0,0x94,0xe1,0x8,0xd2,0xd4,0x7f,0x8e,0x1f,
  0xf6,0x6b,0xc0,0x73,0xa3,0x8b,0x90,0xa4,0x71,0x2b,0xbe,0x7f,0x16,0xff,0x1,0xea,
  0xf,0x0,0x8b,0x81,0x2b,0x80,0x9d,0xa3,0xb,0x99,0xc6,0x9f,0x49,0xdb,0x10,0x2f,
  0x89,0x2d,0x43,0x92,0xc6,0xaf,0xf4,0xfe,0xe9,0x2d,0x80,0xfc,0xbd,0x8b,0x3c,0x9b,
  0xff,0xa,0xe0,0xf9,0xd8,0xfc,0x25,0xa9,0x48,0x6,0x80,0xbc,0xed,0xb,0xbc,0x29,
  0xba,0x88,0x19,0xbc,0x17,0x38,0x3f,0xba,0x8,0x49,0xd2,0x60,0xbc,0x5,0x90,0xaf,
  0xf9,0xc0,0x79,0xc0,0xfe,0xd1,0x85,0x4c,0xe3,0x87,0xa4,0x7d,0xfe,0x57,0x45,0x17,
  0x22,0x49,0x51,0x4a,0xef,0x9f,0xce,0x0,0xe4,0xeb,0x75,0xe4,0xd9,0xfc,0x6f,0x1,
  0x4e,0xc0,0xe6,0x2f,0x49,0x45,0x73,0x6,0x20,0x4f,0x3b,0x0,0x57,0x2,0x9b,0x44,
  0x17,0x32,0x8d,0x67,0x2,0xdf,0x89,0x2e,0x42,0x92,0xa2,0x95,0xde,0x3f,0x9d,0x1,
  0xc8,0xd3,0x47,0xc9,0xb3,0xf9,0x7f,0x1e,0x9b,0xbf,0x24,0x55,0xc1,0x19,0x80,0xfc,
  0x1c,0xb,0x7c,0x23,0xba,0x88,0x69,0xfc,0x9,0x78,0x14,0x70,0x77,0x70,0x1d,0x92,
  0x94,0x85,0xe2,0xfb,0x67,0xf1,0x1f,0xa0,0xae,0x0,0xb0,0x88,0xf4,0xcc,0xff,0x2e,
  0xd1,0x85,0xac,0x63,0x25,0x70,0x8,0xf0,0xd3,0xe8,0x42,0x24,0x29,0x17,0xa5,0xf7,
  0x4f,0x6f,0x1,0xe4,0xe5,0xad,0xe4,0xd7,0xfc,0x1,0x3e,0x80,0xcd,0x5f,0x92,0xaa,
  0xe2,0xc,0x40,0x3e,0x76,0x23,0xbd,0xec,0x67,0xa3,0xe8,0x42,0xd6,0x71,0x21,0xe9,
  0x45,0x3f,0xcb,0xa3,0xb,0x91,0xa4,0x9c,0x94,0xde,0x3f,0x9d,0x1,0xc8,0xc7,0xa9,
  0xe4,0xd7,0xfc,0x1f,0x20,0x3d,0xf2,0x67,0xf3,0x97,0xa4,0xca,0x18,0x0,0xf2,0x70,
  0x34,0x79,0xbe,0x50,0xe7,0x43,0xc0,0x6f,0xa3,0x8b,0x90,0x24,0x35,0xcf,0x5b,0x0,
  0xf1,0x16,0x0,0x97,0x3,0xf,0x8f,0x2e,0x64,0x1d,0x97,0x0,0x8f,0xc7,0xab,0x7f,
  0x49,0x9a,0x56,0xe9,0xfd,0xd3,0x19,0x80,0x78,0xaf,0x21,0xbf,0xe6,0xbf,0x2,0x78,
  0x9,0x36,0x7f,0x49,0xaa,0x96,0x1,0x20,0xd6,0x8e,0xc0,0x7b,0xa2,0x8b,0x98,0xc6,
  0x7,0x49,0x8b,0xff,0x24,0x49,0x95,0x32,0x0,0xc4,0x7a,0x17,0xb0,0x69,0x74,0x11,
  0xeb,0xb8,0x94,0x54,0x97,0x24,0xa9,0x62,0xae,0x1,0x88,0xb3,0x1f,0xf0,0x6b,0xd2,
  0x5b,0xff,0x72,0xb1,0x82,0xf4,0xc8,0xdf,0xff,0x44,0x17,0x22,0x49,0xb9,0x2b,0xbd,
  0x7f,0x3a,0x3,0x10,0xe7,0x83,0xe4,0xd5,0xfc,0x1,0x3e,0x8e,0xcd,0x5f,0x92,0x5a,
  0xc1,0x19,0x80,0x18,0x87,0x1,0x3f,0x88,0x2e,0x62,0x1d,0x7f,0xc2,0xbd,0xfe,0x25,
  0xa9,0x67,0xa5,0xf7,0x4f,0x67,0x0,0xc6,0x6f,0x1,0xf0,0xe1,0xe8,0x22,0xa6,0x71,
  0x22,0x36,0x7f,0x49,0x6a,0xd,0x3,0xc0,0xf8,0xbd,0xa,0x78,0x64,0x74,0x11,0xeb,
  0xf8,0xe,0x70,0x76,0x74,0x11,0x92,0xa4,0xf1,0xf1,0x16,0xc0,0x78,0x6d,0x1,0x5c,
  0xd,0x6c,0x15,0x5c,0xc7,0x54,0x4b,0x49,0x81,0xe4,0xfa,0xe8,0x42,0x24,0xa9,0x24,
  0xa5,0xf7,0x4f,0x67,0x0,0xc6,0xeb,0xad,0xe4,0xd5,0xfc,0x1,0x4e,0xc6,0xe6,0x2f,
  0x49,0xad,0xe3,0xc,0xc0,0xf8,0xec,0x0,0x5c,0x5,0x2c,0x8e,0x2e,0x64,0x8a,0x5f,
  0x1,0x4f,0x6,0x56,0x46,0x17,0x22,0x49,0xa5,0x29,0xbd,0x7f,0x3a,0x3,0x30,0x3e,
  0xef,0x24,0xaf,0xe6,0x3f,0x49,0x5a,0xf8,0x67,0xf3,0x97,0xa4,0x16,0x72,0x6,0x60,
  0x3c,0x76,0x25,0x5d,0xfd,0x2f,0x88,0x2e,0x64,0x8a,0xcf,0x93,0x5e,0xf5,0x2b,0x49,
  0x1a,0x40,0xe9,0xfd,0xd3,0x19,0x80,0xf1,0x78,0x3b,0x79,0x35,0xff,0xbf,0x2,0x6f,
  0x8a,0x2e,0x42,0x92,0x14,0xc7,0x0,0x30,0x7a,0x8f,0x6,0x5e,0x16,0x5d,0xc4,0x3a,
  0xde,0x9,0xdc,0x1a,0x5d,0x84,0x24,0x29,0x8e,0xb7,0x0,0x46,0xef,0x6c,0xe0,0xc8,
  0xe8,0x22,0xa6,0xb8,0x8,0x78,0x1c,0xde,0xfb,0x97,0xa4,0xa1,0x94,0xde,0x3f,0x9d,
  0x1,0x18,0xad,0x3,0xc9,0xab,0xf9,0x4f,0x2,0xaf,0xc5,0xe6,0x2f,0x49,0xad,0x67,
  0x0,0x18,0xad,0x53,0xa2,0xb,0x58,0xc7,0x97,0x80,0x9f,0x47,0x17,0x21,0x49,0x8a,
  0xe7,0x2d,0x80,0xd1,0x39,0x8,0xf8,0x69,0x74,0x11,0x53,0x2c,0x7,0x76,0x7,0xae,
  0x8d,0x2e,0x44,0x92,0x6a,0x50,0x7a,0xff,0x74,0x6,0x60,0x74,0x4e,0x8e,0x2e,0x60,
  0x1d,0x9f,0xc0,0xe6,0x2f,0x49,0xea,0x72,0x6,0x60,0x34,0xe,0x4,0x7e,0x16,0x5d,
  0xc4,0x14,0xb7,0x3,0xbb,0x91,0xf6,0xfd,0x97,0x24,0x35,0xa0,0xf4,0xfe,0xe9,0xc,
  0xc0,0x68,0xe4,0x76,0xf5,0xff,0x1e,0x6c,0xfe,0x92,0xa4,0x29,0x9c,0x1,0x68,0xde,
  0x1,0xc0,0x79,0xd1,0x45,0x4c,0x71,0x5,0xf0,0x28,0x60,0x45,0x74,0x21,0x92,0x54,
  0x93,0xd2,0xfb,0xa7,0x33,0x0,0xcd,0x7b,0x7b,0x74,0x1,0xeb,0x78,0x17,0x36,0x7f,
  0x49,0xd2,0x3a,0x9c,0x1,0x68,0x56,0x6e,0x57,0xff,0x3f,0x4,0xe,0x8f,0x2e,0x42,
  0x92,0x6a,0x54,0x7a,0xff,0x74,0x6,0xa0,0x59,0x27,0x45,0x17,0xb0,0x8e,0xdc,0x66,
  0x23,0x24,0x49,0x99,0x70,0x6,0xa0,0x39,0x7b,0x3,0x97,0x2,0xb9,0x14,0xe4,0xd5,
  0xbf,0x24,0x8d,0x50,0xe9,0xfd,0xd3,0x19,0x80,0xe6,0xbc,0x85,0x7c,0x9a,0xff,0x2a,
  0xe0,0x8d,0xd1,0x45,0x48,0x92,0xf2,0x65,0x0,0x68,0xc6,0x2e,0xc0,0xf3,0xa3,0x8b,
  0x98,0xe2,0xeb,0xc0,0x25,0xd1,0x45,0x48,0x92,0xf2,0x65,0x0,0x68,0xc6,0x1b,0x80,
  0x5,0xd1,0x45,0x74,0xdd,0x47,0x7e,0x6b,0x11,0x24,0x49,0x99,0x31,0x0,0xc,0x6f,
  0x6b,0xe0,0xe5,0xd1,0x45,0x4c,0xf1,0xbf,0x81,0x6b,0xa2,0x8b,0x90,0x24,0xe5,0xcd,
  0x0,0x30,0xbc,0x13,0x81,0x8d,0xa3,0x8b,0xe8,0x5a,0x6,0x9c,0x1a,0x5d,0x84,0x24,
  0x29,0x7f,0x6,0x80,0xe1,0x2c,0x26,0x5,0x80,0x5c,0x7c,0x1a,0xb8,0x2d,0xba,0x8,
  0x49,0x52,0xfe,0xc,0x0,0xc3,0x39,0x1,0xd8,0x2a,0xba,0x88,0x2e,0xaf,0xfe,0x25,
  0x49,0x3d,0x33,0x0,0xc,0x6e,0x2,0x78,0x7d,0x74,0x11,0x53,0x7c,0x1c,0xb8,0x39,
  0xba,0x8,0x49,0x52,0x19,0xdc,0x8,0x68,0x70,0x47,0x0,0xdf,0x8b,0x3a,0xf8,0x3a,
  0x96,0x1,0xf,0x3,0x6e,0x8d,0x2e,0x44,0x92,0xda,0xa2,0xf4,0xfe,0xe9,0xc,0xc0,
  0xe0,0xfe,0x31,0xba,0x80,0x29,0x3e,0x8d,0xcd,0x5f,0x92,0xd4,0x7,0x67,0x0,0x6,
  0xb3,0x17,0x70,0x19,0x79,0xec,0xfc,0xb7,0xc,0xd8,0x1d,0xb8,0x29,0xba,0x10,0x49,
  0x6a,0x93,0xd2,0xfb,0xa7,0x33,0x0,0x83,0x79,0x3d,0x79,0x34,0x7f,0x80,0x4f,0x62,
  0xf3,0x97,0x24,0xf5,0xc9,0x19,0x80,0xfe,0x6d,0x5,0x5c,0x4b,0x7a,0x4,0x30,0xda,
  0x72,0xd2,0xbd,0xff,0x1b,0xa2,0xb,0x91,0xa4,0xb6,0x29,0xbd,0x7f,0x3a,0x3,0xd0,
  0xbf,0x57,0x90,0x47,0xf3,0x7,0xf8,0xa,0x36,0x7f,0x49,0xd2,0x0,0x9c,0x1,0xe8,
  0xcf,0x3c,0xe0,0xf,0xc0,0x43,0xc6,0x79,0xd0,0x19,0xac,0x2,0x1e,0x9,0xfc,0x2e,
  0xba,0x10,0x49,0x6a,0xa3,0xd2,0xfb,0xa7,0x33,0x0,0xfd,0x79,0x6,0x79,0x34,0x7f,
  0x80,0xef,0x62,0xf3,0x97,0x24,0xd,0xc8,0x0,0xd0,0x9f,0x57,0x47,0x17,0x30,0xc5,
  0x7b,0xa3,0xb,0x90,0x24,0x95,0xcb,0x5b,0x0,0xbd,0xdb,0x91,0xb4,0xf8,0x2f,0x87,
  0xd0,0x74,0x2e,0x70,0x68,0x74,0x11,0x92,0xd4,0x66,0xa5,0xf7,0xcf,0x1c,0x9a,0x59,
  0x29,0x5e,0x48,0x3e,0xdf,0xd7,0x69,0xd1,0x5,0x48,0x92,0xca,0xe6,0xc,0x40,0x6f,
  0x16,0x92,0x16,0xff,0xed,0x34,0x8e,0x83,0xcd,0xe1,0xf7,0xc0,0x1e,0x40,0xd9,0xff,
  0xc3,0x49,0x52,0xe1,0x4a,0xef,0x9f,0xb9,0x5c,0xd1,0xe6,0xee,0x39,0xe4,0xd1,0xfc,
  0x21,0xbd,0xf4,0xa7,0xec,0xdf,0x3a,0x49,0x52,0x38,0x67,0x0,0x7a,0xf3,0x5f,0xc0,
  0x53,0xc6,0x71,0xa0,0x39,0x2c,0x5,0x76,0x0,0xee,0x89,0x2e,0x44,0x92,0xda,0xae,
  0xf4,0xfe,0xe9,0xc,0xc0,0xdc,0x76,0x7,0xe,0x8a,0x2e,0xa2,0xeb,0x73,0xd8,0xfc,
  0x25,0x49,0xd,0x30,0x0,0xcc,0xed,0x25,0xe4,0xb1,0xef,0xff,0x3,0xc0,0x7,0xa2,
  0x8b,0x90,0x24,0xd5,0xc1,0x0,0x30,0xbb,0xf9,0xc0,0x9,0xd1,0x45,0x74,0x7d,0x13,
  0xb8,0x2e,0xba,0x8,0x49,0x52,0x1d,0xc,0x0,0xb3,0x7b,0x3a,0xe9,0xf9,0xff,0x1c,
  0x7c,0x24,0xba,0x0,0x49,0x52,0x3d,0xc,0x0,0xb3,0x7b,0x49,0x74,0x1,0x5d,0xbf,
  0x4,0xce,0x8b,0x2e,0x42,0x92,0x54,0xf,0x3,0xc0,0xcc,0xb6,0x2,0x8e,0x89,0x2e,
  0xa2,0xeb,0x13,0xd1,0x5,0x48,0x92,0xea,0x62,0x0,0x98,0xd9,0xb,0x48,0x1b,0x0,
  0x45,0x5b,0x4a,0x7a,0xed,0xaf,0x24,0x49,0x8d,0x31,0x0,0xcc,0xec,0xa5,0xd1,0x5,
  0x74,0x7d,0x5,0xb8,0x2f,0xba,0x8,0x49,0x52,0x5d,0xdc,0x8,0x68,0x7a,0x7b,0x3,
  0x97,0x8d,0xe2,0x7,0xf7,0x69,0x12,0x78,0x24,0x70,0x79,0x74,0x21,0x92,0xa4,0xb5,
  0x95,0xde,0x3f,0x9d,0x1,0x98,0xde,0x73,0xa3,0xb,0xe8,0xfa,0x11,0x36,0x7f,0x49,
  0xd2,0x8,0x18,0x0,0xd6,0x37,0x41,0x7a,0xf3,0x5f,0xe,0x4e,0x8f,0x2e,0x40,0x92,
  0x54,0x27,0x6f,0x1,0xac,0xef,0x20,0xe0,0xa7,0x4d,0xff,0xd0,0x1,0xdc,0x0,0x3c,
  0x4,0x58,0x11,0x5c,0x87,0x24,0x69,0x1a,0xa5,0xf7,0x4f,0x67,0x0,0xd6,0xf7,0x82,
  0xe8,0x2,0xba,0xfe,0x1d,0x9b,0xbf,0x24,0x69,0x44,0x9c,0x1,0x58,0xdb,0x42,0xe0,
  0x26,0xe0,0x41,0x4d,0xfe,0xd0,0x1,0x3d,0x2,0xb8,0x2a,0xba,0x8,0x49,0xd2,0xf4,
  0x4a,0xef,0x9f,0xce,0x0,0xac,0xed,0xe9,0xe4,0xd1,0xfc,0x2f,0xc0,0xe6,0x2f,0x49,
  0x1a,0x21,0x3,0xc0,0xda,0x8e,0x8f,0x2e,0xa0,0xcb,0xc5,0x7f,0x92,0xa4,0x91,0xf2,
  0x16,0xc0,0x1a,0x8b,0x80,0xbf,0x0,0x8b,0x9b,0xfa,0x81,0x3,0xba,0x1b,0xd8,0x1,
  0xb8,0x2b,0xb8,0xe,0x49,0xd2,0x2c,0x4a,0xef,0x9f,0xce,0x0,0xac,0x71,0x18,0xf1,
  0xcd,0x1f,0xe0,0xab,0xd8,0xfc,0x25,0x49,0x23,0x66,0x0,0x58,0x23,0x97,0xcd,0x7f,
  0xce,0x88,0x2e,0x40,0x92,0x54,0x3f,0x6f,0x1,0x24,0x1b,0x1,0xb7,0x0,0x9b,0x35,
  0xf1,0xc3,0x86,0x70,0x1d,0xb0,0x2b,0x69,0xb,0x60,0x49,0x52,0xc6,0x4a,0xef,0x9f,
  0xce,0x0,0x24,0x87,0x13,0xdf,0xfc,0x1,0xce,0xc4,0xe6,0x2f,0x49,0x1a,0x3,0x3,
  0x40,0xf2,0x9c,0xe8,0x2,0xba,0x3e,0x1b,0x5d,0x80,0x24,0xa9,0x1d,0xbc,0x5,0x0,
  0xb,0x48,0xd3,0xff,0x5b,0xe,0x5f,0xcd,0x50,0x2e,0x27,0xbd,0x85,0x50,0x92,0x54,
  0x80,0xd2,0xfb,0xa7,0x33,0x0,0x70,0x8,0xf1,0xcd,0x1f,0xd2,0xea,0x7f,0x49,0x92,
  0xc6,0xc2,0x0,0x0,0xcf,0x8e,0x2e,0x0,0x58,0x5,0x7c,0x2e,0xba,0x8,0x49,0x52,
  0x7b,0x18,0x0,0xe0,0x99,0xd1,0x5,0x90,0xde,0x3e,0xf8,0xc7,0xe8,0x22,0x24,0x49,
  0xed,0xd1,0xf6,0x0,0xb0,0x37,0xb0,0x7d,0x74,0x11,0xc0,0x97,0xa2,0xb,0x90,0x24,
  0xb5,0x4b,0xdb,0x3,0xc0,0xd1,0xd1,0x5,0x90,0xa6,0xff,0xbf,0x19,0x5d,0x84,0x24,
  0xa9,0x5d,0xda,0x1e,0x0,0x72,0x98,0xfe,0x3f,0x1f,0xb8,0x2d,0xba,0x8,0x49,0x52,
  0xbb,0xb4,0x39,0x0,0xec,0x8,0x3c,0x29,0xba,0x8,0x5c,0xfd,0x2f,0x49,0xa,0xd0,
  0xe6,0x0,0x70,0x34,0xd0,0xd8,0xab,0x4,0x7,0xb4,0xa,0xf8,0x5a,0x70,0xd,0x92,
  0xa4,0x16,0x6a,0x7b,0x0,0x88,0xf6,0x1b,0xe0,0x86,0xe8,0x22,0x24,0x49,0xed,0xd3,
  0xd6,0x0,0xb0,0x18,0x38,0x34,0xba,0x8,0xe0,0x3b,0xd1,0x5,0x48,0x92,0xda,0xa9,
  0xad,0x1,0xe0,0x60,0x60,0x51,0x70,0xd,0x93,0xc0,0x17,0x83,0x6b,0x90,0x24,0xb5,
  0x54,0x5b,0x3,0xc0,0xe1,0xd1,0x5,0x90,0xa6,0xff,0xaf,0x8a,0x2e,0x42,0x92,0xd4,
  0x4e,0x6,0x80,0x38,0x67,0x45,0x17,0x20,0x49,0x6a,0xaf,0x36,0x6,0x80,0x9d,0x80,
  0xbd,0xa2,0x8b,0xc0,0xfb,0xff,0x92,0xa4,0x40,0x6d,0xc,0x0,0x39,0x5c,0xfd,0xdf,
  0x6,0x5c,0x10,0x5d,0x84,0x24,0xa9,0xbd,0xc,0x0,0x31,0xce,0x21,0x2d,0x2,0x94,
  0x24,0x29,0x44,0xdb,0x2,0xc0,0x3c,0xe0,0xb0,0xe8,0x22,0xf0,0xfe,0xbf,0x24,0x29,
  0x58,0xdb,0x2,0xc0,0xa3,0x81,0x7,0x7,0xd7,0x70,0x1f,0x69,0x6,0x40,0x92,0xa4,
  0x30,0x6d,0xb,0x0,0x39,0x4c,0xff,0x9f,0xb,0xdc,0x15,0x5d,0x84,0x24,0xa9,0xdd,
  0xda,0x16,0x0,0xe,0x8e,0x2e,0x0,0xaf,0xfe,0x25,0x49,0x19,0x98,0x98,0x9c,0x2c,
  0x7b,0x2d,0xda,0xc4,0x44,0xcf,0xef,0xf3,0x99,0xf,0xdc,0x1,0x6c,0x3a,0xba,0x6a,
  0x7a,0xb2,0x7,0x70,0x65,0x70,0xd,0x92,0xa4,0x21,0x95,0xde,0x3f,0xdb,0x34,0x3,
  0xb0,0x7,0xf1,0xcd,0xff,0x5a,0x6c,0xfe,0x92,0xa4,0xc,0xb4,0x29,0x0,0x3c,0x39,
  0xba,0x0,0xe0,0x7,0xd1,0x5,0x48,0x92,0x4,0xed,0xa,0x0,0x39,0x3c,0xfe,0xf7,
  0xfd,0xe8,0x2,0x24,0x49,0x82,0xf6,0xac,0x1,0x98,0x47,0xda,0x7d,0xef,0x41,0xa3,
  0xad,0x66,0x56,0xab,0x80,0x6d,0x80,0xdb,0x3,0x6b,0x90,0x24,0x35,0xa4,0xf4,0xfe,
  0xd9,0x96,0x19,0x80,0x7d,0x88,0x6d,0xfe,0x0,0x17,0x62,0xf3,0x97,0x24,0x65,0xa2,
  0x2d,0x1,0xe0,0xa9,0xd1,0x5,0xe0,0xfd,0x7f,0x49,0x52,0x46,0xda,0x12,0x0,0x9e,
  0x12,0x5d,0x0,0xf0,0xe3,0xe8,0x2,0x24,0x49,0x5a,0xad,0x2d,0x6b,0x0,0x6e,0x0,
  0x76,0x18,0x71,0x29,0xb3,0x59,0x9,0x6c,0xe,0x2c,0xb,0xac,0x41,0x92,0xd4,0xa0,
  0xd2,0xfb,0x67,0x1b,0x66,0x0,0x76,0x20,0xb6,0xf9,0x3,0x5c,0x84,0xcd,0x5f,0x92,
  0x94,0x91,0x36,0x4,0x80,0xc7,0x46,0x17,0x0,0xfc,0x22,0xba,0x0,0x49,0x92,0xa6,
  0x32,0x0,0x8c,0xc7,0xcf,0xa3,0xb,0x90,0x24,0x69,0xaa,0x36,0x4,0x80,0xe8,0x1d,
  0x0,0x57,0x2,0x3f,0xc,0xae,0x41,0x92,0xa4,0xb5,0xd4,0x1e,0x0,0x16,0x10,0x1f,
  0x0,0x2e,0x22,0xbd,0x84,0x48,0x92,0xa4,0x6c,0xd4,0x1e,0x0,0x1e,0x3,0x2c,0xa,
  0xae,0xe1,0xa7,0xc1,0xc7,0x97,0x24,0x69,0x3d,0xb5,0x7,0x80,0x27,0x44,0x17,0x0,
  0x9c,0x17,0x5d,0x80,0x24,0x49,0xeb,0xaa,0x3d,0x0,0x3c,0x3e,0xba,0x0,0xe0,0x97,
  0xd1,0x5,0x48,0x92,0xb4,0xae,0xda,0x3,0xc0,0x7e,0xc1,0xc7,0xbf,0x1,0xb8,0x3e,
  0xb8,0x6,0x49,0x92,0xd6,0x53,0x73,0x0,0x58,0x0,0xec,0x11,0x5c,0xc3,0xaf,0x82,
  0x8f,0x2f,0x49,0xd2,0xb4,0x6a,0xe,0x0,0x8f,0x0,0xe6,0x7,0xd7,0x70,0x7e,0xf0,
  0xf1,0x25,0x49,0x9a,0x56,0xcd,0x1,0x20,0x87,0xd,0x80,0x9c,0x1,0x90,0x24,0x65,
  0xc9,0x0,0x30,0x3a,0x2b,0x80,0xb,0x82,0x6b,0x90,0x24,0x69,0x5a,0x6,0x80,0xd1,
  0xb9,0x4,0xb8,0x27,0xb8,0x6,0x49,0x92,0xa6,0x55,0x6b,0x0,0x58,0x40,0xfc,0x13,
  0x0,0x5e,0xfd,0x4b,0x92,0xb2,0x55,0x6b,0x0,0xd8,0x9b,0xf8,0x1d,0x0,0x2f,0xc,
  0x3e,0xbe,0x24,0x49,0x33,0xaa,0x35,0x0,0xec,0x13,0x5d,0x0,0xf0,0x9b,0xe8,0x2,
  0x24,0x49,0x9a,0x49,0xad,0x1,0x60,0xaf,0xe0,0xe3,0xaf,0x20,0xad,0x1,0x90,0x24,
  0x29,0x4b,0xb5,0x6,0x80,0xbd,0x83,0x8f,0x7f,0x25,0x70,0x6f,0x70,0xd,0x92,0x24,
  0xcd,0xa8,0xd6,0x0,0x10,0x3d,0x3,0xe0,0xfd,0x7f,0x49,0x52,0xd6,0x6a,0xc,0x0,
  0x1b,0x3,0xf,0xd,0xae,0xc1,0xfb,0xff,0x92,0xa4,0xac,0xd5,0x18,0x0,0xf6,0x0,
  0x26,0x82,0x6b,0x30,0x0,0x48,0x92,0xb2,0x56,0x63,0x0,0x88,0xbe,0xff,0xf,0x70,
  0x69,0x74,0x1,0x92,0x24,0xcd,0xa6,0xc6,0x0,0x10,0x7d,0xff,0xff,0xe,0xe0,0xf6,
  0xe0,0x1a,0x24,0x49,0x9a,0x55,0x8d,0x1,0x20,0x7a,0x6,0xe0,0xf2,0xe0,0xe3,0x4b,
  0x92,0x34,0xa7,0x1a,0x3,0xc0,0x1e,0xc1,0xc7,0xff,0x6d,0xf0,0xf1,0x25,0x49,0x9a,
  0x53,0x6d,0x1,0x60,0x3,0x60,0xd7,0xe0,0x1a,0x9c,0x1,0x90,0x24,0x65,0xaf,0xb6,
  0x0,0xb0,0xb,0xe9,0x45,0x40,0x91,0x9c,0x1,0x90,0x24,0x65,0xaf,0xb6,0x0,0xf0,
  0xb0,0xe8,0x2,0x80,0xcb,0xa2,0xb,0x90,0x24,0x69,0x2e,0x6,0x80,0x66,0xdd,0xa,
  0xdc,0x1c,0x5c,0x83,0x24,0x49,0x73,0x32,0x0,0x34,0xeb,0x8a,0xe0,0xe3,0x4b,0x92,
  0xd4,0x13,0x3,0x40,0xb3,0xae,0xe,0x3e,0xbe,0x24,0x49,0x3d,0x31,0x0,0x34,0xcb,
  0x0,0x20,0x49,0x2a,0x42,0x4d,0x1,0x60,0x3e,0xb0,0x67,0x70,0xd,0x6,0x0,0x49,
  0x52,0x11,0x6a,0xa,0x0,0xdb,0x3,0x8b,0x83,0x6b,0x30,0x0,0x48,0x92,0x8a,0x50,
  0x53,0x0,0x88,0xde,0x0,0x8,0xc,0x0,0x92,0xa4,0x42,0xd4,0x14,0x0,0x76,0xe,
  0x3e,0xfe,0x2d,0xc0,0x5d,0xc1,0x35,0x48,0x92,0xd4,0x13,0x3,0x40,0x73,0xbc,0xfa,
  0x97,0x24,0x15,0xc3,0x0,0xd0,0x9c,0x6b,0x82,0x8f,0x2f,0x49,0x52,0xcf,0x6a,0xa,
  0x0,0xd1,0x6b,0x0,0xae,0xb,0x3e,0xbe,0x24,0x49,0x3d,0xab,0x29,0x0,0xec,0x14,
  0x7c,0x7c,0x3,0x80,0x24,0xa9,0x18,0x35,0x5,0x80,0xe8,0x5b,0x0,0x6,0x0,0x49,
  0x52,0x31,0x6a,0x9,0x0,0x8b,0x80,0x7,0x7,0xd7,0xf0,0xe7,0xe0,0xe3,0x4b,0x92,
  0xd4,0xb3,0x5a,0x2,0xc0,0x8e,0xd1,0x5,0x0,0xd7,0x47,0x17,0x20,0x49,0x52,0xaf,
  0x6a,0x9,0x0,0xdb,0x6,0x1f,0xff,0x2e,0x60,0x49,0x70,0xd,0x92,0x24,0xf5,0xac,
  0x96,0x0,0x10,0x3d,0xfd,0x7f,0x6d,0xf0,0xf1,0x25,0x49,0xea,0x4b,0x2d,0x1,0x60,
  0x87,0xe0,0xe3,0x3b,0xfd,0x2f,0x49,0x2a,0x4a,0x2d,0x1,0x60,0x9b,0xe0,0xe3,0xdf,
  0x12,0x7c,0x7c,0x49,0x92,0xfa,0x52,0x4b,0x0,0x88,0xbe,0x5,0x70,0x6b,0xf0,0xf1,
  0x25,0x49,0xea,0x4b,0x2d,0x1,0x20,0xfa,0x16,0xc0,0x4d,0xc1,0xc7,0x97,0x24,0xa9,
  0x2f,0xb5,0x4,0x0,0x67,0x0,0x24,0x49,0xea,0x43,0x2d,0x1,0x20,0xfa,0x31,0x40,
  0xd7,0x0,0x48,0x92,0x8a,0x52,0x4b,0x0,0x88,0x5e,0x4,0x78,0x73,0xf0,0xf1,0x25,
  0x49,0xea,0x4b,0xd,0x1,0x60,0x1e,0xb0,0x59,0x70,0xd,0xde,0x2,0x90,0x24,0x15,
  0xa5,0x86,0x0,0xb0,0x45,0xf0,0xf1,0x57,0x1,0xb7,0x5,0xd7,0x20,0x49,0x52,0x5f,
  0xc,0x0,0xc3,0x5b,0x42,0xa,0x1,0x92,0x24,0x15,0xa3,0x86,0x0,0xb0,0x65,0xf0,
  0xf1,0xef,0x8,0x3e,0xbe,0x24,0x49,0x7d,0x33,0x0,0xc,0x6f,0x49,0xf0,0xf1,0x25,
  0x49,0xea,0x5b,0xd,0x1,0x60,0x8b,0xe0,0xe3,0x3b,0x3,0x20,0x49,0x2a,0x8e,0x1,
  0x60,0x78,0x4b,0x82,0x8f,0x2f,0x49,0x52,0xdf,0x6a,0x8,0x0,0xd1,0xb7,0x0,0x9c,
  0x1,0x90,0x24,0x15,0xa7,0x86,0x0,0xb0,0x45,0xf0,0xf1,0x97,0x4,0x1f,0x5f,0x92,
  0xa4,0xbe,0xd5,0x10,0x0,0x36,0xa,0x3e,0xfe,0x92,0xe0,0xe3,0x4b,0x92,0xd4,0xb7,
  0x1a,0x2,0xc0,0x26,0xc1,0xc7,0x5f,0x1a,0x7c,0x7c,0x49,0x92,0xfa,0x56,0x43,0x0,
  0x58,0x1c,0x7c,0xfc,0x7,0x82,0x8f,0x2f,0x49,0x52,0xdf,0x6a,0x8,0x0,0x1b,0x6,
  0x1f,0xdf,0x45,0x80,0x92,0xa4,0xe2,0xd4,0x10,0x0,0x36,0xf,0x3e,0xbe,0x33,0x0,
  0x92,0xa4,0xe2,0xd4,0x10,0x0,0x16,0x4,0x1f,0xff,0xee,0xe0,0xe3,0x4b,0x92,0xd4,
  0xb7,0x1a,0x2,0x40,0xf4,0xab,0x80,0xef,0x9,0x3e,0xbe,0x24,0x49,0x7d,0xab,0x21,
  0x0,0x44,0x3f,0x6,0x78,0x7f,0xf0,0xf1,0x25,0x49,0xea,0x5b,0xd,0x1,0x60,0x51,
  0xf0,0xf1,0x7d,0xc,0x50,0x92,0x54,0x9c,0x1a,0x2,0x40,0xb4,0x55,0xd1,0x5,0x48,
  0x92,0xd4,0xaf,0x1a,0x2,0x40,0xf4,0x46,0x40,0xf7,0x5,0x1f,0x5f,0x92,0xa4,0xbe,
  0xd5,0x10,0x0,0xa2,0x9f,0x2,0xb8,0x37,0xf8,0xf8,0x92,0x24,0xf5,0xad,0x86,0x0,
  0x20,0x49,0x92,0xfa,0x64,0x0,0x90,0x24,0xa9,0x85,0xc,0x0,0x92,0x24,0xb5,0x50,
  0xd,0x1,0x20,0xfa,0x65,0x40,0x2e,0x2,0x94,0x24,0x15,0x67,0x62,0x72,0x72,0x32,
  0xba,0x86,0xa1,0x4c,0x4c,0x4c,0x44,0x7f,0x80,0x89,0xe0,0xe3,0x4b,0x92,0x2,0x94,
  0xde,0x3f,0x6b,0x98,0x1,0x90,0x24,0x49,0x7d,0xaa,0x21,0x0,0x44,0xbe,0x8d,0x6f,
  0x79,0xe0,0xb1,0x25,0x49,0x1a,0x58,0xd,0x1,0x60,0x49,0x4b,0x8f,0x2d,0x49,0xd2,
  0xc0,0x6a,0x8,0x0,0x7f,0xa,0x3c,0xf6,0x1f,0x3,0x8f,0x2d,0x49,0xd2,0xc0,0x6a,
  0x8,0x0,0x17,0x5,0x1e,0xfb,0x37,0x81,0xc7,0x96,0x24,0x69,0x60,0x35,0x4,0x80,
  0x73,0x3,0x8f,0xfd,0xe3,0xc0,0x63,0x4b,0x92,0x34,0xb0,0x1a,0x1e,0x3,0xdc,0x14,
  0xb8,0x99,0xf1,0xef,0x7,0xb0,0xc,0xd8,0xe,0xb8,0x7b,0xcc,0xc7,0x95,0x24,0x65,
  0xa0,0xf4,0xfe,0x59,0xc3,0xc,0xc0,0x5d,0xc0,0x97,0x3,0x8e,0xfb,0x45,0x6c,0xfe,
  0x92,0xa4,0x42,0xd5,0x30,0x3,0x0,0xb0,0x3b,0xf0,0x5b,0xc6,0xf7,0x66,0xc0,0xe5,
  0xc0,0x9e,0xc0,0x35,0x63,0x3a,0x9e,0x24,0x29,0x33,0xa5,0xf7,0xcf,0x1a,0x66,0x0,
  0x0,0xae,0x2,0x3e,0x32,0xc6,0xe3,0x7d,0x10,0x9b,0xbf,0x24,0xa9,0x60,0xb5,0xcc,
  0x0,0x0,0x6c,0x44,0x5a,0x94,0xf7,0xc4,0x11,0x1f,0xf2,0x7c,0xe0,0x60,0xe0,0xfe,
  0x11,0x1f,0x47,0x92,0x94,0xb1,0xe2,0xfb,0x67,0xf1,0x1f,0x60,0x62,0xad,0xad,0xf8,
  0xb7,0x7,0x7e,0xd,0xec,0x34,0xa2,0xc3,0x5d,0x7,0xec,0x4f,0x5a,0x74,0x28,0x49,
  0x6a,0xb1,0xd2,0xfb,0x67,0x2d,0xb7,0x0,0x56,0xbb,0x9,0x38,0xa,0xb8,0x7e,0x4,
  0x3f,0xfb,0xc6,0xee,0xcf,0xb6,0xf9,0x4b,0x92,0x8a,0x57,0x5b,0x0,0x0,0xb8,0x4,
  0x78,0x3c,0x70,0x41,0x83,0x3f,0xf3,0x3c,0xd2,0x95,0xff,0xa5,0xd,0xfe,0x4c,0x49,
  0x92,0xc2,0xd4,0x18,0x0,0x20,0x5d,0xa5,0x1f,0x4,0xbc,0x9b,0xf4,0xbc,0xfe,0xa0,
  0x96,0x3,0xef,0x3,0xe,0x1,0x6e,0x68,0xa0,0x2e,0x49,0x92,0xb2,0x50,0xdb,0x1a,
  0x80,0xe9,0x6c,0xf,0xbc,0x13,0x38,0x1,0xd8,0xb8,0xc7,0x1f,0xbb,0xc,0xf8,0x12,
  0xa9,0xf9,0xbb,0xda,0x5f,0x92,0xb4,0x9e,0xe2,0xfb,0x67,0xf1,0x1f,0x60,0xee,0x0,
  0xb0,0xda,0xa6,0xc0,0x91,0xa4,0xab,0xf9,0x47,0x3,0xf,0x5,0x36,0xef,0xfe,0xff,
  0x96,0x92,0x1a,0xfd,0xc5,0xc0,0x8f,0x80,0xef,0xe1,0x26,0x3f,0x92,0xa4,0x59,0x14,
  0xdf,0x3f,0x4b,0xff,0x0,0x92,0x24,0xa9,0x7f,0xb5,0xae,0x1,0x90,0x24,0x49,0xb3,
  0x30,0x0,0x48,0x92,0xd4,0x42,0x6,0x0,0x49,0x92,0x5a,0xc8,0x0,0x20,0x49,0x52,
  0xb,0x19,0x0,0x24,0x49,0x6a,0x21,0x3,0x80,0x24,0x49,0x2d,0x64,0x0,0x90,0x24,
  0xa9,0x85,0xc,0x0,0x92,0x24,0xb5,0x90,0x1,0x40,0x92,0xa4,0x16,0x32,0x0,0x48,
  0x92,0xd4,0x42,0x6,0x0,0x49,0x92,0x5a,0xc8,0x0,0x20,0x49,0x52,0xb,0x19,0x0,
  0x24,0x49,0x6a,0x21,0x3,0x80,0x24,0x49,0x2d,0x64,0x0,0x90,0x24,0xa9,0x85,0xfe,
  0x1f,0x8,0xee,0xb,0x4f,0x6d,0xb7,0xd2,0x88,0x0,0x0,0x0,0x0,0x49,0x45,0x4e,
  0x44,0xae,0x42,0x60,0x82,
    // D:/University/cs/sem3/cursach/photored/icons/arrowToLeft.png
  0x0,0x0,0x27,0xdf,
  0x89,
  0x50,0x4e,0x47,0xd,0xa,0x1a,0xa,0x0,0x0,0x0,0xd,0x49,0x48,0x44,0x52,0x0,
  0x0,0x2,0x0,0x0,0x0,0x2,0x0,0x8,0x6,0x0,0x0,0x0,0xf4,0x78,0xd4,0xfa,
  0x0,0x0,0x0,0x9,0x70,0x48,0x59,0x73,0x0,0x0,0xe,0xc4,0x0,0x0,0xe,0xc4,
  0x1,0x95,0x2b,0xe,0x1b,0x0,0x0,0x27,0x91,0x49,0x44,0x41,0x54,0x78,0x9c,0xed,
  0xdd,0x79,0xb4,0x1d,0x65,0x99,0xef,0xf1,0xef,0xce,0x4,0x24,0x1,0x12,0x6,0x99,
  0xc1,0x8b,0xa2,0x80,0x34,0x20,0xb6,0xda,0xa2,0xa0,0x4c,0xad,0x8,0xce,0xd7,0x76,
  0xbc,0xba,0x1c,0xda,0xe9,0x6a,0xdf,0x6e,0xf5,0x76,0x63,0xdb,0x6d,0x82,0x13,0x8d,
  0xdd,0x4e,0xd7,0xab,0x2d,0xb6,0x13,0xce,0x2e,0x5a,0x51,0x11,0xe4,0x82,0x40,0x2b,
  0x22,0x62,0xcb,0xd0,0x8c,0x2a,0x93,0x42,0x20,0x1,0x84,0x24,0xc,0x9,0x24,0x24,
  0xe7,0xfe,0xf1,0xee,0xc8,0x21,0x9c,0x93,0x33,0xec,0xaa,0xfd,0xd4,0x53,0xf5,0xfd,
  0xac,0xf5,0xae,0x13,0x35,0xee,0x7a,0xaa,0x28,0xce,0xf3,0xdb,0x6f,0xbd,0x55,0xd5,
  0x1b,0x19,0x19,0x41,0x92,0x24,0x75,0xcb,0x8c,0xe8,0x2,0x24,0x49,0xd2,0xf0,0x19,
  0x0,0x24,0x49,0xea,0x20,0x3,0x80,0x24,0x49,0x1d,0x64,0x0,0x90,0x24,0xa9,0x83,
  0xc,0x0,0x92,0x24,0x75,0x90,0x1,0x40,0x92,0xa4,0xe,0x32,0x0,0x48,0x92,0xd4,
  0x41,0x6,0x0,0x49,0x92,0x3a,0xc8,0x0,0x20,0x49,0x52,0x7,0x19,0x0,0x24,0x49,
  0xea,0x20,0x3,0x80,0x24,0x49,0x1d,0x64,0x0,0x90,0x24,0xa9,0x83,0xc,0x0,0x92,
  0x24,0x75,0x90,0x1,0x40,0x92,0xa4,0xe,0x32,0x0,0x48,0x92,0xd4,0x41,0xb3,0xa2,
  0xb,0x18,0x54,0xaf,0xd7,0x8b,0x2e,0x41,0xd5,0xd9,0x12,0x78,0x12,0xb0,0x2d,0xb0,
  0x10,0x98,0x9,0x2c,0x1,0x6e,0x6,0xae,0x5,0x56,0xc7,0x95,0x26,0x49,0xf,0x37,
  0x32,0x32,0x12,0x5d,0xc2,0x40,0xd2,0x7,0x0,0xa5,0xb7,0x33,0xf0,0x66,0xe0,0xcf,
  0x81,0x3f,0x65,0xfc,0x73,0x72,0x15,0x70,0x16,0xf0,0x3,0xe0,0x14,0xe0,0xde,0xa1,
  0x54,0x27,0x49,0x2d,0xd5,0xcb,0x9e,0x60,0x9c,0x1,0x48,0x6b,0xf,0xe0,0x38,0xe0,
  0x75,0xc0,0x66,0x53,0xfc,0xff,0xde,0x6,0x7c,0x0,0xf8,0x37,0x60,0x4d,0xc5,0x75,
  0x49,0xd2,0xa4,0xa4,0xef,0x9f,0xe9,0x77,0xc0,0x0,0x90,0xd1,0xff,0x4,0x4e,0x4,
  0xe6,0xd,0xf8,0x39,0xd7,0x2,0xaf,0x6,0x7e,0x39,0x70,0x45,0x92,0x34,0x45,0xe9,
  0xfb,0x67,0xfa,0x1d,0x30,0x0,0x64,0x32,0x9b,0xf2,0xad,0xfd,0xb5,0x15,0x7e,0xe6,
  0x1a,0xe0,0x8d,0xc0,0x57,0x2b,0xfc,0x4c,0x49,0x9a,0x50,0xf6,0xfe,0xe9,0x1a,0x0,
  0xd,0xcb,0x6c,0xe0,0xdb,0xc0,0x8b,0x2a,0xfe,0xdc,0x39,0xc0,0xc9,0x94,0xcb,0x8,
  0x9f,0xaf,0xf8,0xb3,0x25,0xa9,0xb5,0x9c,0x1,0xd0,0x30,0xd4,0xd5,0xfc,0x47,0x5b,
  0x7,0xbc,0x0,0x38,0xbd,0xc6,0x6d,0x48,0xd2,0x1f,0xa5,0xef,0x9f,0xe9,0x77,0xc0,
  0x0,0xd0,0x74,0xc3,0x68,0xfe,0x1b,0xdc,0x9,0xfc,0x9,0xb0,0x74,0x8,0xdb,0x92,
  0xd4,0x71,0xd9,0xfb,0xa7,0xf,0x2,0x52,0x9d,0x86,0xd9,0xfc,0xa1,0x3c,0x3f,0xe0,
  0xf8,0x21,0x6d,0x4b,0x92,0x52,0x73,0x6,0x40,0x75,0x19,0x76,0xf3,0xdf,0xe0,0x41,
  0x60,0x7f,0xe0,0x9a,0x21,0x6f,0x57,0x52,0xc7,0x64,0xef,0x9f,0xce,0x0,0xa8,0xe,
  0x51,0xcd,0x1f,0xca,0xc2,0xd6,0xf7,0x4,0x6c,0x57,0x92,0x52,0x71,0x6,0x40,0x55,
  0x8b,0x6c,0xfe,0x1b,0xac,0x0,0x76,0xc0,0x87,0x4,0x49,0xaa,0x51,0xf6,0xfe,0xe9,
  0xc,0x80,0xaa,0xd4,0x84,0xe6,0xf,0xb0,0x0,0x38,0x2c,0xb8,0x6,0x49,0x6a,0x34,
  0x3,0x80,0xaa,0xd2,0x94,0xe6,0xbf,0xc1,0xb3,0xa2,0xb,0x90,0xa4,0x26,0x33,0x0,
  0xa8,0xa,0x4d,0x6b,0xfe,0x0,0xbb,0x47,0x17,0x20,0x49,0x4d,0x66,0x0,0xd0,0xa0,
  0x9a,0xd8,0xfc,0xc1,0x0,0x20,0x49,0x9b,0x64,0x0,0xd0,0x20,0x9a,0xda,0xfc,0x1,
  0xe6,0x47,0x17,0x20,0x49,0x4d,0x66,0x0,0xd0,0x74,0x35,0xb9,0xf9,0x3,0xac,0x8c,
  0x2e,0x40,0x92,0x9a,0xcc,0x0,0xa0,0xe9,0x68,0x7a,0xf3,0x7,0x58,0x1e,0x5d,0x80,
  0x24,0x35,0x99,0x1,0x40,0x53,0x95,0xa1,0xf9,0x3,0x5c,0x17,0x5d,0x80,0x24,0x35,
  0x99,0x1,0x40,0x53,0x91,0xa5,0xf9,0x3,0x9c,0x1b,0x5d,0x80,0x24,0x35,0x99,0x4f,
  0x2,0xd4,0x64,0x65,0x6a,0xfe,0x6b,0x81,0x6d,0x80,0x7b,0xa3,0xb,0x91,0xd4,0x5e,
  0xd9,0xfb,0xa7,0x33,0x0,0x9a,0x8c,0x4c,0xcd,0x1f,0xe0,0xbb,0xd8,0xfc,0x25,0x69,
  0x93,0x9c,0x1,0xd0,0x44,0xb2,0x35,0xff,0x11,0xe0,0x20,0xe0,0xb2,0xe0,0x3a,0x24,
  0xb5,0x5c,0xf6,0xfe,0xe9,0xc,0x80,0x36,0x25,0x5b,0xf3,0x7,0x38,0x3,0x9b,0xbf,
  0x24,0x4d,0xc8,0x19,0x0,0x8d,0x27,0x63,0xf3,0xbf,0xf,0x38,0x0,0xb8,0x3e,0xba,
  0x10,0x49,0xed,0x97,0xbd,0x7f,0x3a,0x3,0xa0,0xb1,0x64,0x6c,0xfe,0x0,0x6f,0xc1,
  0xe6,0x2f,0x49,0x93,0x62,0x0,0xd0,0xc6,0xb2,0x36,0xff,0x45,0xc0,0xd7,0xa2,0x8b,
  0x90,0xa4,0x2c,0xc,0x0,0x1a,0x2d,0x6b,0xf3,0x3f,0x1e,0x78,0x7f,0x74,0x11,0x92,
  0x94,0x89,0x1,0x40,0x1b,0x64,0x6e,0xfe,0x8b,0xa3,0x8b,0x90,0xa4,0x6c,0xc,0x0,
  0x2,0x9b,0xbf,0x24,0x75,0x8e,0x1,0x40,0x36,0x7f,0x49,0xea,0x20,0x3,0x40,0xb7,
  0xd9,0xfc,0x25,0xa9,0xa3,0xc,0x0,0xdd,0x95,0xb5,0xf9,0x9f,0x88,0xcd,0x5f,0x92,
  0x6,0x66,0x0,0xe8,0xa6,0xac,0xcd,0xff,0x78,0xe0,0xb8,0xe8,0x22,0x24,0xa9,0xd,
  0xc,0x0,0xdd,0x93,0xb9,0xf9,0x2f,0x8e,0x2e,0x42,0x92,0xda,0xc2,0x0,0xd0,0x2d,
  0x59,0x9b,0xbf,0xd3,0xfe,0x92,0x54,0x31,0x3,0x40,0x77,0x64,0x6d,0xfe,0x4e,0xfb,
  0x4b,0x52,0xd,0xc,0x0,0xdd,0x90,0xb9,0xf9,0x2f,0x8e,0x2e,0x42,0x92,0xda,0xc8,
  0x0,0xd0,0x7e,0x36,0x7f,0x49,0xd2,0x23,0x18,0x0,0xda,0x2d,0x6b,0xf3,0xf7,0x9a,
  0xbf,0x24,0xd5,0xcc,0x0,0xd0,0x5e,0x59,0x9b,0xbf,0xd7,0xfc,0x25,0x69,0x8,0xc,
  0x0,0xed,0x94,0xb5,0xf9,0xfb,0xcd,0x5f,0x92,0x86,0xc4,0x0,0xd0,0x3e,0x59,0x9b,
  0xbf,0xdf,0xfc,0x25,0x69,0x88,0xc,0x0,0xed,0x92,0xb9,0xf9,0x2f,0x8e,0x2e,0x42,
  0x92,0xba,0xc4,0x0,0xd0,0x1e,0x36,0x7f,0x49,0xd2,0xa4,0x19,0x0,0xda,0xc1,0xe6,
  0x2f,0x49,0x9a,0x12,0x3,0x40,0x7e,0x36,0x7f,0x49,0xd2,0x94,0x19,0x0,0x72,0xb3,
  0xf9,0x4b,0x92,0xa6,0xc5,0x0,0x90,0x97,0xcd,0x5f,0x92,0x34,0x6d,0x6,0x80,0x9c,
  0xb2,0x36,0x7f,0xef,0xf3,0x97,0xa4,0x86,0x30,0x0,0xe4,0x93,0xb9,0xf9,0x7b,0x9f,
  0xbf,0x24,0x35,0x84,0x1,0x20,0x17,0x9b,0xbf,0x24,0xa9,0x12,0x6,0x80,0x3c,0xb2,
  0x36,0x7f,0x9f,0xf0,0x27,0x49,0xd,0x64,0x0,0xc8,0x21,0x6b,0xf3,0xf7,0x9a,0xbf,
  0x24,0x35,0x94,0x1,0xa0,0xf9,0x32,0x37,0x7f,0xbf,0xf9,0x4b,0x52,0x43,0x19,0x0,
  0x9a,0xcd,0xe6,0x2f,0x49,0xaa,0x85,0x1,0xa0,0xb9,0xb2,0x36,0x7f,0xaf,0xf9,0x4b,
  0x52,0x2,0x6,0x80,0x66,0xca,0xda,0xfc,0xbd,0xe6,0x2f,0x49,0x49,0x18,0x0,0x9a,
  0x27,0x73,0xf3,0xf7,0x9b,0xbf,0x24,0x25,0x61,0x0,0x68,0x16,0x9b,0xbf,0x24,0x69,
  0x28,0xc,0x0,0xcd,0x91,0xb5,0xf9,0x7b,0xcd,0x5f,0x92,0x12,0x32,0x0,0x34,0x43,
  0xd6,0xe6,0xef,0x35,0x7f,0x49,0x4a,0xca,0x0,0x10,0x2f,0x73,0xf3,0xf7,0x9b,0xbf,
  0x24,0x25,0x65,0x0,0x88,0x65,0xf3,0x97,0x24,0x85,0x30,0x0,0xc4,0xb1,0xf9,0x4b,
  0x92,0xc2,0x18,0x0,0x62,0x64,0x6d,0xfe,0x2e,0xf8,0x93,0xa4,0x96,0x30,0x0,0xc,
  0x5f,0xd6,0xe6,0xef,0x82,0x3f,0x49,0x6a,0x11,0x3,0xc0,0x70,0x65,0x6e,0xfe,0x7e,
  0xf3,0x97,0xa4,0x16,0x31,0x0,0xc,0x4f,0xd6,0xe6,0xef,0xb4,0xbf,0x24,0xb5,0x90,
  0x1,0x60,0x38,0xb2,0x36,0x7f,0xa7,0xfd,0x25,0xa9,0xa5,0xc,0x0,0xf5,0xcb,0xdc,
  0xfc,0xfd,0xe6,0x2f,0x49,0x2d,0x65,0x0,0xa8,0x97,0xcd,0x5f,0x92,0xd4,0x48,0x6,
  0x80,0xfa,0xd8,0xfc,0x25,0x49,0x8d,0x65,0x0,0xa8,0x87,0xcd,0x5f,0x92,0xd4,0x68,
  0x6,0x80,0xea,0x65,0x6d,0xfe,0xae,0xf6,0x97,0xa4,0xe,0x31,0x0,0x54,0x2b,0x6b,
  0xf3,0x77,0xb5,0xbf,0x24,0x75,0x8c,0x1,0xa0,0x3a,0x99,0x9b,0xbf,0xdf,0xfc,0x25,
  0xa9,0x63,0xc,0x0,0xd5,0xc8,0xda,0xfc,0x9d,0xf6,0x97,0xa4,0x8e,0x32,0x0,0xc,
  0x2e,0x6b,0xf3,0x77,0xda,0x5f,0x92,0x3a,0xcc,0x0,0x30,0x98,0xcc,0xcd,0xdf,0x6f,
  0xfe,0x92,0xd4,0x61,0x6,0x80,0xe9,0xb3,0xf9,0x4b,0x92,0xd2,0x32,0x0,0x4c,0x8f,
  0xcd,0x5f,0x92,0x94,0x9a,0x1,0x60,0xea,0x6c,0xfe,0x92,0xa4,0xf4,0xc,0x0,0x53,
  0x93,0xb5,0xf9,0xbb,0xda,0x5f,0x92,0xf4,0x30,0x6,0x80,0xc9,0xcb,0xda,0xfc,0x5d,
  0xed,0x2f,0x49,0x7a,0x4,0x3,0xc0,0xe4,0x64,0x6d,0xfe,0x7e,0xf3,0x97,0x24,0x8d,
  0xc9,0x0,0x30,0xb1,0xac,0xcd,0xdf,0x6f,0xfe,0x92,0xa4,0x71,0x19,0x0,0x36,0x2d,
  0x73,0xf3,0xf7,0x9b,0xbf,0x24,0x69,0x5c,0x6,0x80,0xf1,0xd9,0xfc,0x25,0x49,0xad,
  0x65,0x0,0x18,0x9b,0xcd,0x5f,0x92,0xd4,0x6a,0x6,0x80,0x47,0xb2,0xf9,0x4b,0x92,
  0x5a,0xcf,0x0,0xf0,0x70,0x36,0x7f,0x49,0x52,0x27,0x18,0x0,0x1e,0x62,0xf3,0x97,
  0x24,0x75,0x86,0x1,0xa0,0xc8,0xda,0xfc,0xbd,0xcf,0x5f,0x92,0x34,0x2d,0x6,0x80,
  0xbc,0xcd,0xdf,0xfb,0xfc,0x25,0x49,0xd3,0xd6,0xf5,0x0,0x90,0xb9,0xf9,0xfb,0xcd,
  0x5f,0x92,0x34,0x6d,0x5d,0xe,0x0,0x36,0x7f,0x49,0x52,0x67,0x75,0x35,0x0,0xd8,
  0xfc,0x25,0x49,0x9d,0xd6,0xc5,0x0,0x60,0xf3,0x97,0x24,0x75,0x5e,0xd7,0x2,0x80,
  0xcd,0x5f,0x92,0x24,0xba,0x15,0x0,0x6c,0xfe,0x92,0x24,0xf5,0x75,0x25,0x0,0xd8,
  0xfc,0x25,0x49,0x1a,0xa5,0x37,0x32,0x32,0x12,0x5d,0xc3,0x40,0x7a,0xbd,0xde,0x44,
  0x7f,0x25,0x6b,0xf3,0x5f,0x1,0xfc,0x0,0x58,0xf,0xac,0xdb,0xc4,0x58,0x3,0xac,
  0x6,0x56,0x8d,0xf1,0x73,0xc3,0x9f,0xef,0x5,0xee,0xee,0x7f,0xe6,0x3d,0x40,0xee,
  0x7f,0xe8,0x92,0xd4,0x0,0xe9,0xfb,0x67,0xfa,0x1d,0xd8,0x74,0x0,0xc8,0xda,0xfc,
  0xeb,0xb4,0xe,0x58,0x49,0x9,0x3,0x2b,0x46,0xfd,0xf9,0x2e,0xe0,0xe,0xe0,0x76,
  0xe0,0xb6,0x51,0x3f,0x6f,0x3,0xee,0xec,0xff,0xff,0x24,0x49,0x7d,0xe9,0xfb,0x67,
  0xfa,0x1d,0x18,0x3f,0x0,0xd8,0xfc,0xab,0xb3,0x8e,0x12,0x2,0x96,0x1,0xb7,0x0,
  0x37,0xf7,0xc7,0x12,0xe0,0xa6,0xfe,0xcf,0x25,0x94,0x19,0x7,0x49,0xea,0x84,0xf4,
  0xfd,0x33,0xfd,0xe,0x8c,0x1d,0x0,0x6c,0xfe,0x31,0xee,0x4,0x7e,0xf,0xdc,0x0,
  0x5c,0xdf,0x1f,0xd7,0xf5,0xc7,0x2d,0x94,0xcb,0x19,0x92,0xd4,0xa,0xe9,0xfb,0x67,
  0xfa,0x1d,0x78,0x64,0x0,0xb0,0xf9,0x37,0xd3,0x6a,0xe0,0x46,0x1e,0xa,0x4,0xbf,
  0x6,0xae,0xee,0x8f,0xe5,0x81,0x75,0x49,0xd2,0xb4,0xa4,0xef,0x9f,0xe9,0x77,0xe0,
  0xe1,0x1,0x60,0x6,0xf0,0x75,0xe0,0xe5,0x31,0xd5,0x68,0x9a,0x96,0xf2,0x50,0x18,
  0xb8,0x1a,0xb8,0x6,0xb8,0xa,0xf8,0x43,0x64,0x51,0x92,0xb4,0x29,0xe9,0xfb,0x67,
  0xfa,0x1d,0x78,0x78,0x0,0xf8,0x10,0xf0,0xf7,0x41,0xa5,0xa8,0x7a,0x4b,0x80,0x4b,
  0x81,0xcb,0xfa,0x3f,0x2f,0xa5,0x5c,0x62,0xc8,0x7d,0xd2,0x4a,0x6a,0x85,0xf4,0xfd,
  0x33,0xfd,0xe,0x3c,0x14,0x0,0xe,0x7,0xce,0xa6,0x3b,0xcf,0x36,0xe8,0xaa,0xe5,
  0x3c,0x14,0xa,0x2e,0x1,0x2e,0xa2,0xac,0x35,0xc8,0x7d,0x22,0x4b,0x4a,0x27,0x7d,
  0xff,0x4c,0xbf,0x3,0x25,0x0,0xcc,0x1,0x2e,0x7,0x1e,0x1f,0x5b,0x8d,0x82,0xfc,
  0x1,0xf8,0x25,0x25,0xc,0x5c,0xd4,0xff,0xb3,0xeb,0xa,0x24,0xd5,0x2a,0x7d,0xff,
  0x4c,0xbf,0x3,0x25,0x0,0xbc,0x1e,0xf8,0x42,0x70,0x29,0x6a,0x8e,0x11,0xe0,0x37,
  0x94,0x30,0x70,0x21,0xf0,0x53,0xca,0xa2,0xc3,0xdc,0x27,0xbb,0xa4,0x46,0x49,0xdf,
  0x3f,0xd3,0xef,0x40,0x9,0x0,0x57,0x0,0xfb,0x5,0x97,0xa2,0x66,0xbb,0x1d,0x38,
  0xbf,0x3f,0x7e,0x42,0x99,0x31,0xf2,0xb6,0x44,0x49,0xd3,0x96,0xbe,0x7f,0xa6,0xdf,
  0x81,0x5e,0xef,0x0,0xca,0xf5,0x60,0x69,0x2a,0x56,0x0,0x3f,0xa3,0xcc,0xe,0x9c,
  0x4b,0x59,0x57,0x60,0x20,0x90,0x34,0x69,0xd9,0xfb,0xe7,0xac,0xe8,0x2,0x2a,0xf0,
  0x9c,0xe8,0x2,0x94,0xd2,0x2,0xe0,0xd8,0xfe,0x80,0xf2,0x18,0xe4,0xf3,0x28,0xb,
  0x49,0xcf,0xa6,0xdc,0x6d,0x20,0x49,0xad,0xd5,0x86,0x19,0x80,0xef,0x1,0x2f,0x88,
  0xae,0x43,0xad,0x73,0x2d,0xf,0x85,0x81,0xf3,0x28,0xef,0x4c,0x90,0xa4,0x3f,0x4a,
  0xdf,0x3f,0xd3,0xef,0x40,0xaf,0x77,0x35,0xb0,0x4f,0x74,0x1d,0x6a,0xb5,0xb5,0xc0,
  0x5,0xc0,0xe9,0xc0,0xf,0x29,0xb,0xa,0x25,0x75,0x5c,0xfa,0xfe,0x99,0x7e,0x7,
  0x7a,0xbd,0xbb,0x80,0x85,0xd1,0x75,0xa8,0x53,0xae,0xa5,0x84,0x81,0xd3,0x29,0xb,
  0xa,0xd7,0xc6,0x96,0x23,0x29,0x42,0xfa,0xfe,0x99,0x7e,0x7,0x7a,0xbd,0xbb,0x81,
  0x2d,0xa3,0xeb,0x50,0x67,0xdd,0xd,0x9c,0x5,0x7c,0x1f,0x38,0xd,0x2f,0x15,0x48,
  0x9d,0x91,0xbe,0x7f,0xa6,0xdf,0x81,0x5e,0xef,0xe,0x60,0xbb,0xe8,0x3a,0x24,0x60,
  0xd,0xe5,0x8e,0x82,0xef,0x2,0xa7,0xe2,0xbb,0xc,0xa4,0x56,0x4b,0xdf,0x3f,0xd3,
  0xef,0x40,0xaf,0x77,0x29,0x70,0x60,0x74,0x1d,0xd2,0x46,0x1e,0xa4,0x3c,0x73,0xe0,
  0x54,0x4a,0x20,0xb8,0x25,0xb6,0x1c,0x49,0x55,0xcb,0xde,0x3f,0xdb,0xf0,0xdc,0x7c,
  0x17,0x64,0xa9,0x89,0x66,0x1,0x87,0x1,0xff,0x7,0xb8,0x99,0xb2,0x88,0xf0,0x1d,
  0xc0,0xf6,0x91,0x45,0x49,0xd2,0x6,0x6d,0x8,0x0,0xe7,0x47,0x17,0x20,0x4d,0xa0,
  0x7,0x1c,0x4c,0x9,0x3,0xb7,0x2,0x67,0x2,0xaf,0xc5,0xb5,0x2b,0x92,0x2,0xb5,
  0xe1,0x12,0xc0,0xee,0xc0,0xef,0x28,0xbf,0x64,0xa5,0x4c,0x56,0x53,0x6e,0x2b,0xfc,
  0x26,0x70,0x6,0xf0,0x40,0x6c,0x39,0x92,0xa6,0x22,0x7d,0xff,0x4c,0xbf,0x3,0xe5,
  0x5d,0x0,0xe7,0x52,0xa6,0x5b,0xa5,0xac,0x96,0x3,0xdf,0x6,0xbe,0x44,0x79,0x9b,
  0xa1,0xa4,0x86,0x4b,0xdf,0x3f,0xd3,0xef,0x40,0x9,0x0,0x47,0x53,0xbe,0x41,0x49,
  0x6d,0x70,0x5,0xf0,0x15,0xe0,0xab,0xc0,0x6d,0xc1,0xb5,0x48,0x1a,0x47,0xfa,0xfe,
  0x99,0x7e,0x7,0x7a,0x7f,0x9c,0xf9,0x3f,0x7,0x38,0x3c,0xb0,0x14,0xa9,0x6a,0x6b,
  0x29,0xeb,0x5,0xbe,0x44,0xb9,0x54,0xe0,0x3,0x87,0xa4,0x6,0x49,0xdf,0x3f,0xd3,
  0xef,0xc0,0x43,0x1,0xe0,0xf1,0xc0,0xaf,0x80,0xf9,0x71,0xd5,0x48,0xb5,0xb9,0x3,
  0x38,0x19,0xf8,0x2c,0x70,0x7d,0x70,0x2d,0x92,0x30,0x0,0x84,0x1b,0x15,0x0,0x0,
  0x5e,0x45,0x99,0x36,0x75,0x41,0xa0,0xda,0x6a,0x3d,0x65,0xb6,0xeb,0xb3,0xc0,0xf,
  0x28,0xcf,0x1b,0x90,0x14,0x20,0x7d,0xff,0x4c,0xbf,0x3,0xbd,0x47,0xf4,0xfa,0xf7,
  0x0,0x1f,0xe,0x28,0x45,0x1a,0xb6,0x5b,0x80,0x2f,0x0,0x27,0x51,0x6e,0x2f,0x94,
  0x34,0x44,0xe9,0xfb,0x67,0xfa,0x1d,0x78,0x64,0x0,0x0,0x58,0x4,0x2c,0x1e,0x6e,
  0x25,0x52,0x98,0xb5,0x94,0x17,0x13,0x7d,0x1a,0xf8,0x71,0x70,0x2d,0x52,0x67,0xa4,
  0xef,0x9f,0xe9,0x77,0x60,0xec,0x0,0x0,0x86,0x0,0x75,0xd3,0x15,0xc0,0xff,0xa5,
  0x5c,0xa,0x5b,0x1d,0x5c,0x8b,0xd4,0x6a,0xe9,0xfb,0x67,0xfa,0x1d,0x18,0x3f,0x0,
  0x80,0x21,0x40,0xdd,0x75,0x27,0xf0,0x79,0xe0,0x53,0xf8,0x1e,0x2,0xa9,0x16,0xe9,
  0xfb,0x67,0xfa,0x1d,0xd8,0x74,0x0,0x0,0x43,0x80,0xba,0x6d,0x2d,0xe5,0x85,0x44,
  0x9f,0x4,0x7e,0x1e,0x5c,0x8b,0xd4,0x2a,0xe9,0xfb,0x67,0xfa,0x1d,0x98,0x38,0x0,
  0x40,0xce,0x10,0xb0,0x2,0x38,0x8e,0xf2,0x78,0xd8,0x99,0x1b,0x8d,0x19,0xfd,0x9f,
  0x73,0x80,0x2d,0xfa,0x63,0xee,0x18,0x3f,0xe7,0x2,0x5b,0x1,0xb,0xfb,0x3f,0xb7,
  0xc2,0x3b,0x24,0xba,0xec,0x17,0xc0,0x89,0xc0,0xf7,0x81,0xdc,0xff,0xe2,0x4b,0xd,
  0x90,0xbe,0x7f,0xa6,0xdf,0x81,0xc9,0x5,0x0,0xc8,0x19,0x2,0xce,0x1,0x9e,0xf,
  0xac,0xaa,0xe8,0xf3,0x66,0x52,0x42,0xc0,0x82,0x51,0x63,0x5b,0xe0,0x51,0xc0,0x8e,
  0x94,0x37,0xd5,0xed,0xd0,0xff,0xcf,0x3b,0xf4,0x87,0x2f,0xac,0x69,0x9f,0xab,0x81,
  0x8f,0x52,0xd6,0x9,0xf8,0x70,0x21,0x69,0x9a,0xd2,0xf7,0xcf,0xf4,0x3b,0x30,0xf9,
  0x0,0x0,0x86,0x80,0xe9,0x98,0x7,0xec,0xda,0x1f,0xbb,0x8f,0xfa,0xf3,0x6e,0xfd,
  0xb1,0x3b,0x25,0x54,0x28,0x9f,0x9b,0x29,0x6f,0x28,0x3c,0x9,0xb8,0x27,0xb8,0x16,
  0x29,0x9d,0xf4,0xfd,0x33,0xfd,0xe,0x4c,0x2d,0x0,0x80,0x21,0xa0,0xe,0xdb,0x1,
  0x8f,0x1d,0x35,0xf6,0x1c,0xf5,0xe7,0xed,0x3,0xeb,0xd2,0xe4,0x2c,0x7,0xfe,0x95,
  0xb2,0x4e,0xe0,0xf6,0xe0,0x5a,0xa4,0x34,0xd2,0xf7,0xcf,0xf4,0x3b,0x30,0xf5,0x0,
  0x0,0x86,0x80,0x61,0xda,0x1a,0xd8,0x1b,0xd8,0x17,0xd8,0x7,0x78,0x42,0xff,0xcf,
  0x7b,0xe0,0x7a,0x84,0xa6,0xb9,0x8f,0xf2,0x84,0xc1,0x7f,0xc6,0x97,0x10,0x49,0x13,
  0x4a,0xdf,0x3f,0xd3,0xef,0xc0,0xf4,0x2,0x0,0x18,0x2,0xa2,0xcd,0xa3,0x4,0x82,
  0x7d,0x81,0xfd,0x81,0x27,0x2,0x7,0x50,0xd6,0x24,0x28,0xd6,0x2a,0xca,0x65,0x81,
  0x8f,0x0,0xcb,0x82,0x6b,0x91,0x1a,0x2b,0x7d,0xff,0x4c,0xbf,0x3,0xd3,0xf,0x0,
  0x60,0x8,0x68,0xa2,0x3d,0x80,0x3,0x29,0x81,0x60,0xc3,0xd8,0x2d,0xb2,0xa0,0xe,
  0x5b,0xd,0xfc,0x1b,0xf0,0x4f,0xc0,0xd2,0xe0,0x5a,0xa4,0xc6,0x49,0xdf,0x3f,0xd3,
  0xef,0xc0,0x60,0x1,0x0,0xc,0x1,0x19,0xec,0x0,0x3c,0x75,0xd4,0x78,0x32,0x2e,
  0x3c,0x1c,0xa6,0xd5,0x94,0x87,0xa,0x9d,0x80,0x41,0x40,0xfa,0xa3,0xf4,0xfd,0x33,
  0xfd,0xe,0xc,0x1e,0x0,0xc0,0x10,0x90,0xcd,0xc,0xca,0xa5,0x83,0xd,0x81,0xe0,
  0xe9,0x94,0xcb,0x9,0xae,0x29,0xa8,0xd7,0x2a,0xca,0x63,0x86,0x4f,0xa0,0x3c,0xa7,
  0x42,0xea,0xb4,0xf4,0xfd,0x33,0xfd,0xe,0x54,0x13,0x0,0x20,0x67,0x8,0x38,0x17,
  0x78,0x1e,0xdd,0xc,0x1,0x1b,0xdb,0x1e,0x38,0xa4,0x3f,0xe,0xa5,0xac,0x27,0x98,
  0x19,0x5a,0x51,0x7b,0x2d,0xa7,0x3c,0x47,0xe0,0x13,0x94,0x85,0x83,0x52,0x27,0xa5,
  0xef,0x9f,0xe9,0x77,0xa0,0xba,0x0,0x0,0x39,0x43,0x40,0x97,0x67,0x2,0x36,0x65,
  0x6b,0xca,0xcc,0xc0,0xa1,0xc0,0xe1,0xc0,0x41,0x18,0x8,0xaa,0xb6,0x8c,0xf2,0xea,
  0xed,0x93,0x80,0x35,0xc1,0xb5,0x48,0x43,0x97,0xbe,0x7f,0xa6,0xdf,0x81,0x6a,0x3,
  0x0,0x18,0x2,0xda,0x6a,0x1b,0xe0,0x30,0xe0,0x28,0xe0,0xd9,0xc0,0xa3,0x43,0xab,
  0x69,0x97,0xdf,0x51,0xfe,0xbd,0xf9,0x1a,0xb0,0x3e,0xb6,0x14,0x69,0x78,0xd2,0xf7,
  0xcf,0xf4,0x3b,0x50,0x7d,0x0,0x0,0x43,0x40,0x17,0xec,0x9,0x1c,0x9,0xfc,0x39,
  0x25,0x14,0xb8,0xa8,0x70,0x70,0x97,0x0,0xef,0x6,0xce,0x8b,0x2e,0x44,0x1a,0x86,
  0xf4,0xfd,0x33,0xfd,0xe,0xd4,0x13,0x0,0xc0,0x10,0xd0,0x25,0x73,0x80,0x67,0x0,
  0xc7,0x0,0x2f,0x0,0x1e,0x13,0x5b,0x4e,0x7a,0x3f,0x2,0xde,0x5,0x5c,0x13,0x5d,
  0x88,0x54,0xa7,0xf4,0xfd,0x33,0xfd,0xe,0xd4,0x17,0x0,0xc0,0x10,0xd0,0x55,0x8f,
  0x3,0x8e,0xa5,0x4,0x82,0x43,0x80,0xd9,0xb1,0xe5,0xa4,0xf4,0x20,0xf0,0x45,0xe0,
  0x1f,0xf1,0xf1,0xc2,0x6a,0xa9,0xf4,0xfd,0x33,0xfd,0xe,0xd4,0x1b,0x0,0xc0,0x10,
  0xd0,0x75,0xb,0x29,0x77,0x5a,0xbc,0x8,0x78,0xe,0xb0,0x79,0x6c,0x39,0xe9,0xdc,
  0x4d,0x79,0xb4,0xf0,0x47,0x29,0xcf,0x13,0x90,0x5a,0x23,0x7d,0xff,0x4c,0xbf,0x3,
  0xf5,0x7,0x0,0x30,0x4,0xa8,0xd8,0x92,0x12,0x2,0x5e,0x4c,0x99,0x21,0x98,0x1f,
  0x5b,0x4e,0x2a,0x37,0x51,0xd6,0x7,0x9c,0x12,0x5d,0x88,0x54,0x95,0xf4,0xfd,0x33,
  0xfd,0xe,0xc,0x27,0x0,0x40,0xce,0x10,0xe0,0x73,0x2,0xea,0xb3,0x39,0x65,0xf1,
  0xe0,0x4b,0x81,0x17,0x52,0xc2,0x81,0x26,0x76,0x16,0xf0,0x37,0xc0,0xd5,0xd1,0x85,
  0x48,0x83,0xca,0xde,0x3f,0x19,0x19,0x19,0x49,0x3d,0x86,0x6c,0x11,0x30,0x92,0x6c,
  0xfc,0x18,0x98,0x5b,0xc7,0xc1,0xd0,0x1f,0xcd,0x5,0xfe,0x2,0x38,0x15,0x78,0x80,
  0xf8,0x7f,0xe6,0x4d,0x1f,0x6b,0x80,0x8f,0xe3,0x9d,0x17,0x4a,0x2e,0xba,0xff,0xd,
  0x3a,0x9c,0x1,0x98,0x3a,0x67,0x2,0xb4,0x29,0xdb,0x50,0x2e,0x11,0xbc,0x2,0x78,
  0x16,0xe5,0xb1,0xc5,0x1a,0xdb,0x52,0xe0,0xbd,0xc0,0xc9,0xf8,0xfc,0x0,0x25,0x94,
  0xbe,0x7f,0xa6,0xdf,0x81,0xe1,0x7,0x0,0xc8,0x19,0x2,0x5c,0x13,0x30,0x7c,0xbb,
  0x0,0xaf,0x6,0x5e,0x4f,0xb9,0xb3,0x40,0x63,0xbb,0x8,0x78,0x13,0x70,0x79,0x74,
  0x21,0xd2,0x54,0x64,0xef,0x9f,0xe1,0x53,0x10,0xc9,0x2e,0x1,0x8c,0xe6,0xe5,0x0,
  0x4d,0x56,0xf,0x38,0x18,0xf8,0x1c,0xb0,0x92,0xf8,0xf3,0xa0,0x89,0x63,0x2d,0xf0,
  0x31,0x3c,0x3f,0x95,0x48,0x74,0xff,0x1b,0xb8,0x7f,0x46,0x17,0x90,0x38,0x0,0x80,
  0x21,0x40,0x53,0x37,0x97,0x32,0x2b,0x70,0xe,0xb0,0x8e,0xf8,0xf3,0xa1,0x69,0xe3,
  0x46,0xca,0xc3,0x98,0xa4,0xc6,0x8b,0xee,0x7f,0x6,0x80,0x78,0x86,0x0,0x4d,0xd7,
  0x9e,0x94,0x57,0xeb,0xde,0x41,0xfc,0x39,0xd1,0xb4,0xf1,0x3d,0x60,0xb7,0x69,0x1f,
  0x59,0x69,0x8,0xa2,0xfb,0x9f,0x1,0xa0,0x19,0xc,0x1,0x1a,0xc4,0x66,0xc0,0x2b,
  0x81,0x9f,0x10,0x7f,0x5e,0x34,0x69,0xdc,0x3,0xbc,0x13,0x98,0x35,0xfd,0x43,0x2b,
  0xd5,0x27,0xba,0xff,0xd,0x3a,0x5c,0x4,0x58,0x9d,0x45,0xe4,0x5b,0x18,0xe8,0xdd,
  0x1,0xcd,0xb3,0x1f,0x65,0x41,0xdc,0x6b,0x28,0xaf,0x34,0x16,0xfc,0xa,0x78,0x3,
  0x2e,0x12,0x54,0xc3,0x64,0xef,0x9f,0xe1,0x9,0xa4,0x25,0x33,0x0,0x1b,0x38,0x13,
  0xa0,0xaa,0xcc,0x3,0xde,0x2,0xfc,0x86,0xf8,0x73,0xa4,0x9,0xe3,0x1,0xca,0xbf,
  0x5f,0xce,0x6,0xa8,0x31,0xa2,0xfb,0xdf,0xc0,0xfd,0x33,0xba,0x80,0x96,0x5,0x0,
  0x30,0x4,0xa8,0x5a,0x33,0x80,0x67,0x3,0x67,0x50,0xee,0x95,0x8f,0x3e,0x57,0xa2,
  0xc7,0x25,0xc0,0x81,0x83,0x1c,0x50,0xa9,0x2a,0xd1,0xfd,0xcf,0x0,0xd0,0x4c,0x19,
  0x43,0xc0,0x39,0x18,0x2,0x9a,0x6e,0x1f,0xe0,0xd3,0xc0,0x7d,0xc4,0x9f,0x2f,0x91,
  0x63,0xd,0xf0,0x61,0xca,0xda,0x9,0x29,0x4c,0x74,0xff,0x33,0x0,0x34,0x57,0xc6,
  0x10,0xe0,0x4c,0x40,0xe,0xdb,0x0,0xef,0x1,0x96,0x11,0x7f,0xce,0x44,0x8e,0x2b,
  0x81,0xa7,0xe,0x78,0x2c,0xa5,0x69,0x8b,0xee,0x7f,0x6,0x80,0x66,0x33,0x4,0xa8,
  0x4e,0x5b,0x0,0x6f,0x6,0xae,0x27,0xfe,0xbc,0x89,0x1a,0x6b,0x81,0xf,0xe2,0xda,
  0x0,0x5,0x88,0xee,0x7f,0x6,0x80,0xe6,0x33,0x4,0xa8,0x6e,0x33,0x29,0x6f,0x25,
  0xbc,0x98,0xf8,0x73,0x27,0x6a,0xfc,0x92,0x72,0x89,0x44,0x1a,0x9a,0xe8,0xfe,0x67,
  0x0,0xc8,0xc1,0x10,0xa0,0x61,0x39,0x92,0x72,0x7b,0x67,0xf4,0xf9,0x13,0x31,0x56,
  0x1,0xef,0xc2,0x17,0x30,0x69,0x48,0xa2,0xfb,0x9f,0x1,0x20,0xf,0x43,0x80,0x86,
  0xe9,0x10,0xe0,0x2c,0xe2,0xcf,0xa1,0x88,0x71,0x2e,0xb0,0xeb,0xe0,0x87,0x50,0xda,
  0xb4,0xe8,0xfe,0x67,0x0,0xc8,0x25,0x63,0x8,0xf0,0xee,0x80,0xdc,0x9e,0x1,0x9c,
  0x49,0xfc,0x79,0x34,0xec,0x71,0x17,0xf0,0xda,0xa,0x8e,0x9f,0x34,0xae,0xe8,0xfe,
  0x67,0x0,0xc8,0x27,0x63,0x8,0x70,0x26,0x20,0xbf,0xa7,0x3,0xa7,0x13,0x7f,0x2e,
  0xd,0x7b,0x7c,0xd,0x98,0x5f,0xc1,0xf1,0x93,0x1e,0x21,0xba,0xff,0x19,0x0,0x72,
  0x32,0x4,0x28,0xca,0x53,0x80,0xb3,0x89,0x3f,0x9f,0x86,0x39,0x7e,0xb,0x3c,0xb9,
  0x8a,0x83,0x27,0x8d,0x16,0xdd,0xff,0xc,0x0,0x79,0x65,0xc,0x1,0x5e,0xe,0x68,
  0x8f,0x23,0x28,0x2b,0xe7,0xa3,0xcf,0xa9,0x61,0x8d,0x7,0x80,0xe3,0x70,0x81,0xa0,
  0x2a,0x14,0xdd,0xff,0xc,0x0,0xb9,0x65,0xc,0x1,0xce,0x4,0xb4,0x47,0xf,0x78,
  0x21,0xf0,0x6b,0xe2,0xcf,0xab,0x61,0x8d,0xb3,0x80,0x47,0x55,0x70,0xec,0xa4,0xf0,
  0xfe,0x67,0x0,0xc8,0xcf,0x10,0xa0,0x68,0xb3,0x28,0x6f,0x1f,0xbc,0x91,0xf8,0x73,
  0x6b,0x18,0x63,0x29,0x70,0x74,0x25,0x47,0x4e,0x9d,0x16,0xdd,0xff,0xc,0x0,0xed,
  0x60,0x8,0x50,0x13,0x6c,0x6,0xbc,0x1b,0x58,0x4e,0xfc,0xf9,0x55,0xf7,0x58,0x4f,
  0x79,0x9f,0x80,0x97,0x4,0x34,0x6d,0xd1,0xfd,0xcf,0x0,0xd0,0x1e,0x86,0x0,0x35,
  0xc5,0x76,0xc0,0x27,0x28,0x2f,0xdd,0x89,0x3e,0xc7,0xea,0x1e,0x67,0x3,0x3b,0x54,
  0x72,0xd4,0xd4,0x39,0xd1,0xfd,0xcf,0x0,0xd0,0x2e,0x19,0x43,0x80,0xb,0x3,0xdb,
  0xeb,0x71,0xc0,0x77,0x88,0x3f,0xc7,0xea,0x1e,0xb7,0x0,0xcf,0xac,0xe8,0x98,0xa9,
  0x43,0xa2,0xfb,0x9f,0x1,0xa0,0x7d,0x32,0x86,0x0,0x67,0x2,0xda,0xed,0x10,0xda,
  0x7f,0xc7,0xc0,0x5a,0xe0,0xef,0x28,0xb,0x23,0xa5,0x49,0x89,0xee,0x7f,0x6,0x80,
  0x76,0x32,0x4,0xa8,0x69,0x66,0x0,0xaf,0x7,0x6e,0x23,0xfe,0x5c,0xab,0x73,0x9c,
  0xa,0x2c,0xac,0xe8,0x98,0xa9,0xe5,0xa2,0xfb,0x9f,0x1,0xa0,0xbd,0x16,0x13,0xff,
  0xcb,0xd0,0x10,0xa0,0x8d,0x2d,0x0,0x3e,0x9,0x3c,0x48,0xfc,0xf9,0x56,0xd7,0xb8,
  0x1e,0xd8,0xbf,0xa2,0xe3,0xa5,0x16,0x8b,0xee,0x7f,0x6,0x80,0x76,0x5b,0x44,0xfc,
  0x2f,0xc3,0xa9,0xe,0xd7,0x4,0x74,0xc3,0xfe,0xc0,0xf9,0xc4,0x9f,0x6f,0x75,0x8d,
  0x7b,0x81,0x17,0x57,0x76,0xb4,0xd4,0x4a,0xd1,0xfd,0xcf,0x0,0xd0,0x7e,0x19,0x43,
  0x80,0x33,0x1,0xdd,0xd0,0x3,0x5e,0x6,0xdc,0x4c,0xfc,0x39,0x57,0xc7,0x58,0xf,
  0x9c,0x80,0xb7,0xa,0x6a,0x1c,0xd1,0xfd,0xcf,0x0,0xd0,0xd,0x86,0x0,0x35,0xd9,
  0x96,0xc0,0xc7,0x69,0xef,0x65,0x81,0x33,0x80,0xad,0x2a,0x3b,0x5a,0x6a,0x8d,0xe8,
  0xfe,0x67,0x0,0xe8,0xe,0x43,0x80,0x9a,0xee,0x20,0xe0,0x3f,0x89,0x3f,0xef,0xea,
  0x18,0x57,0x3,0x7b,0x57,0x77,0xa8,0xd4,0x6,0xd1,0xfd,0xcf,0x0,0xd0,0x2d,0x19,
  0x43,0x80,0x6b,0x2,0xba,0x65,0x26,0xf0,0x76,0x60,0x25,0xf1,0xe7,0x5e,0xd5,0x63,
  0x5,0xf0,0xfc,0xca,0x8e,0x94,0xd2,0x8b,0xee,0x7f,0x6,0x80,0xee,0xc9,0x18,0x2,
  0x9c,0x9,0xe8,0x9e,0x5d,0x80,0x53,0x88,0x3f,0xf7,0xaa,0x1e,0xeb,0x80,0xbf,0xad,
  0xf0,0x38,0x29,0xb1,0xe8,0xfe,0x67,0x0,0xe8,0x26,0x43,0x80,0xb2,0x78,0x11,0x70,
  0x2b,0xf1,0xe7,0x5f,0xd5,0xe3,0x24,0x60,0x4e,0x85,0xc7,0x49,0x9,0x45,0xf7,0x3f,
  0x3,0x40,0x77,0x19,0x2,0x94,0xc5,0x42,0xe0,0x4b,0xc4,0x9f,0x7f,0x55,0x8f,0xff,
  0x0,0xb6,0xa9,0xee,0x30,0x29,0x9b,0xe8,0xfe,0x67,0x0,0xe8,0xb6,0xc5,0xc4,0xff,
  0x12,0x9c,0xea,0x70,0x4d,0x40,0x77,0x1d,0xd,0x2c,0x21,0xfe,0x1c,0xac,0x72,0xfc,
  0x16,0x78,0x7c,0x95,0x7,0x49,0x79,0x44,0xf7,0xbf,0x41,0x87,0xf7,0xb7,0xe6,0xb6,
  0xb8,0x3f,0x32,0x39,0x1c,0x38,0xd,0x43,0x40,0x17,0xfd,0x8,0xd8,0xf,0xf8,0x2c,
  0xa5,0x79,0xb6,0xc1,0x5e,0xc0,0x85,0xf8,0x32,0x21,0x65,0x14,0x9d,0x40,0x9c,0x1,
  0xa8,0xc4,0x22,0xe2,0xbf,0x9,0x39,0x13,0xa0,0xa9,0x38,0x82,0x76,0x3d,0x40,0xe8,
  0x1,0xe0,0xd,0x95,0x1e,0x21,0x35,0x5e,0x74,0xff,0x1b,0xb8,0x7f,0x46,0x17,0x60,
  0x0,0xa8,0x8c,0x21,0x40,0xd9,0x2c,0x4,0xbe,0x4c,0xfc,0x79,0x58,0xe5,0x58,0x54,
  0xe5,0x1,0x52,0xb3,0x45,0xf7,0x3f,0x3,0x80,0x46,0x33,0x4,0x28,0xa3,0x97,0x0,
  0x77,0x10,0x7f,0x2e,0x56,0x35,0x3e,0x4d,0x79,0x1e,0x82,0x5a,0x2e,0xba,0xff,0x19,
  0x0,0xb4,0x31,0x43,0x80,0x32,0xda,0x11,0x38,0x93,0xf8,0x73,0xb1,0xaa,0xf1,0x3d,
  0x3c,0xa7,0x5b,0x2f,0xba,0xff,0x19,0x0,0x34,0x16,0x43,0x80,0x32,0xea,0x1,0x6f,
  0x4,0xee,0x21,0xfe,0x7c,0xac,0x62,0x5c,0x8,0x6c,0x57,0xe9,0x11,0x52,0xa3,0x44,
  0xf7,0xbf,0x41,0x47,0x2f,0x7b,0x13,0xed,0xf5,0x7a,0xd1,0x25,0x34,0xd5,0x22,0xf2,
  0xdd,0x21,0x70,0xe,0xe5,0x51,0xab,0xab,0xa2,0xb,0x51,0xa8,0xbd,0x80,0x6f,0x51,
  0xde,0x2d,0x90,0xdd,0xb5,0xc0,0x31,0xfd,0x9f,0x6a,0x99,0xec,0xfd,0xd3,0xdb,0x0,
  0xdb,0xeb,0xf8,0xfe,0xc8,0xe4,0x8,0xbc,0x45,0x50,0xa5,0x59,0x3e,0xd,0xf8,0x18,
  0xe5,0x9b,0x74,0x66,0x7b,0x1,0x3f,0x3,0x9e,0x18,0x5d,0x88,0xf4,0x8,0xd1,0x53,
  0x10,0x5e,0x2,0xa8,0x5d,0xc6,0xcb,0x1,0x3e,0x31,0x50,0x1b,0x3c,0xf,0xb8,0x8d,
  0xf8,0x73,0x72,0xd0,0xb1,0x82,0x12,0x6a,0xd4,0x22,0xd1,0xfd,0x6f,0xd0,0xe1,0xc,
  0x40,0xfb,0x39,0x13,0xa0,0xcc,0x4e,0x3,0xe,0xa4,0x3c,0x76,0x37,0xb3,0xad,0x81,
  0xb3,0x81,0xa3,0xa2,0xb,0x91,0x36,0x30,0x0,0x74,0xc3,0x62,0xf2,0xad,0x7,0xf0,
  0x89,0x81,0xda,0x60,0x29,0x70,0x24,0xf0,0x1e,0xe0,0xc1,0xe0,0x5a,0x6,0x31,0xf,
  0xf8,0x21,0xf0,0xca,0xe8,0x42,0x24,0x20,0xff,0x14,0x86,0xa6,0x24,0xe3,0xe5,0x0,
  0xef,0xe,0xd0,0x68,0x87,0x2,0xcb,0x88,0x3f,0x2f,0x7,0x19,0xeb,0x80,0xb7,0x56,
  0x7d,0x60,0x34,0x7c,0xd1,0xfd,0x6f,0xe0,0xfe,0x19,0x5d,0x80,0x1,0x60,0xe8,0x32,
  0x86,0x0,0xd7,0x4,0x68,0xb4,0x9d,0x80,0xf3,0x88,0x3f,0x2f,0x7,0x1d,0xef,0xad,
  0xfa,0xc0,0x68,0xb8,0xa2,0xfb,0x9f,0x1,0x40,0xd3,0x91,0x31,0x4,0x38,0x13,0xa0,
  0xd1,0x66,0x2,0x1f,0xa4,0x7c,0x9b,0x8e,0x3e,0x37,0x7,0x19,0x1f,0xac,0xfa,0xc0,
  0x68,0x78,0xa2,0xfb,0x9f,0x1,0x40,0xd3,0x65,0x8,0x50,0x1b,0x1c,0x3,0xdc,0x49,
  0xfc,0xb9,0x39,0xc8,0x38,0xa1,0xf2,0xa3,0xa2,0xa1,0x88,0xee,0x7f,0x6,0x0,0xd,
  0x62,0x31,0xf1,0xbf,0xfc,0xa6,0x3a,0xbc,0x1c,0xa0,0x8d,0xed,0x1,0x5c,0x4a,0xfc,
  0xb9,0x39,0xc8,0xf8,0x8,0xe5,0x49,0x88,0x4a,0x24,0xba,0xff,0x19,0x0,0x34,0xa8,
  0x45,0xc4,0xff,0xf2,0x9b,0xea,0x70,0x26,0x40,0x1b,0x9b,0xb,0x7c,0x9d,0xf8,0x73,
  0x73,0x90,0xf1,0x69,0xc,0x1,0xa9,0x44,0xf7,0x3f,0x3,0x80,0xaa,0x60,0x8,0x50,
  0x5b,0xbc,0x93,0x72,0xab,0x60,0xf4,0xf9,0x39,0xdd,0xf1,0x79,0xc,0x1,0x69,0x44,
  0xf7,0x3f,0x3,0x80,0xaa,0xb2,0x98,0xf8,0x5f,0x7e,0x86,0x0,0x55,0xe1,0x39,0xe4,
  0x5e,0x17,0xf0,0x39,0x7c,0x9d,0x70,0xa,0xd1,0xfd,0xcf,0x0,0xa0,0x2a,0x2d,0x22,
  0xfe,0x97,0x9f,0x21,0x40,0x55,0x78,0xc,0xf0,0x5f,0xc4,0x9f,0x9f,0xd3,0x1d,0x5f,
  0xc6,0x99,0x80,0xc6,0x8b,0xee,0x7f,0x6,0x0,0x55,0xcd,0x10,0xa0,0xb6,0x98,0x7,
  0x7c,0x87,0xf8,0xf3,0x73,0xba,0xc3,0x35,0x1,0xd,0x17,0xdd,0xff,0xc,0x0,0xaa,
  0x43,0xc6,0x10,0x70,0x36,0xb0,0x59,0x1d,0x7,0x43,0xa9,0xcd,0x0,0x3e,0x4c,0xfc,
  0xf9,0x39,0xdd,0xf1,0x29,0xc,0x1,0x8d,0x15,0xdd,0xff,0xc,0x0,0xaa,0x4b,0xc6,
  0x10,0x70,0xa,0xfe,0xb2,0xd4,0xd8,0xfe,0x12,0x58,0x43,0xfc,0x39,0x6a,0x8,0x68,
  0x91,0xe8,0xfe,0x67,0x0,0x50,0x9d,0x32,0x86,0x80,0xbf,0xa9,0xe5,0x48,0xa8,0xd,
  0xe,0x3,0xfe,0x40,0xfc,0x39,0x3a,0x9d,0xf1,0xf1,0x1a,0x8e,0x87,0x6,0x14,0xdd,
  0xff,0xc,0x0,0xaa,0xdb,0x62,0xe2,0x7f,0xf9,0x4d,0x65,0xac,0x6,0xf6,0xac,0xe3,
  0x40,0xa8,0x15,0x1e,0xb,0x5c,0x43,0xfc,0x79,0x3a,0x9d,0xf1,0x81,0x1a,0x8e,0x87,
  0x6,0x10,0xdd,0xff,0x6,0x1d,0xbe,0xe,0x58,0x13,0x59,0x4c,0xae,0x57,0x9,0x6f,
  0x8e,0x8f,0x56,0xd5,0xf8,0xae,0x3,0x9e,0x6,0x9c,0x1b,0x5d,0xc8,0x34,0xfc,0x3,
  0x65,0x56,0x4e,0xaa,0x46,0x74,0x2,0x71,0x6,0x20,0x8d,0x45,0xc4,0x7f,0x3,0x9a,
  0xec,0x58,0x47,0xb9,0xd,0x4c,0x1a,0xcf,0x1c,0xe0,0x9b,0xc4,0x9f,0xab,0xd3,0x19,
  0x6f,0xab,0xe1,0x78,0x68,0x1a,0xa2,0xfb,0x9f,0x33,0x0,0x1a,0x96,0xe3,0xfb,0x23,
  0x83,0x19,0xc0,0x6b,0xa3,0x8b,0x50,0xa3,0xad,0x1,0x5e,0x5,0x9c,0x18,0x5d,0xc8,
  0x34,0x7c,0xa,0x78,0x4d,0x74,0x11,0x6a,0x81,0xe8,0x4,0xe2,0xc,0x40,0x3a,0x59,
  0x66,0x2,0xae,0xa8,0xeb,0x0,0xa8,0x75,0xfe,0x8a,0x7c,0xaf,0x15,0x5e,0xb,0x1c,
  0x5b,0xc7,0xc1,0xd0,0xe4,0x45,0xf7,0xbf,0x41,0x47,0x2f,0x7b,0x13,0xed,0xf5,0xbc,
  0x3b,0x26,0xc0,0x22,0x9a,0xbf,0x2e,0x60,0x4,0xd8,0x16,0x58,0x1e,0x5d,0x88,0x52,
  0x78,0x9,0xf0,0x55,0x60,0x8b,0xe8,0x42,0xa6,0x60,0x35,0x70,0x34,0xf0,0x93,0xe8,
  0x42,0xba,0x2a,0x7b,0xff,0xf4,0x12,0x80,0xa6,0xe3,0x78,0x9a,0x1f,0x0,0x7a,0xc0,
  0xa3,0xa3,0x8b,0x50,0x1a,0xdf,0x1,0x8e,0x2,0x56,0x46,0x17,0x32,0x5,0x5b,0x0,
  0x3f,0x0,0x9e,0x14,0x5d,0x88,0x72,0x32,0x0,0x68,0xba,0x32,0x84,0x80,0x9d,0xa3,
  0xb,0x50,0x2a,0x17,0x0,0xcf,0x2,0x96,0x6,0xd7,0x31,0x15,0x5b,0x1,0x67,0x2,
  0xfb,0x44,0x17,0xa2,0x7c,0xc,0x0,0x1a,0x44,0xd3,0x17,0x6,0x3e,0x2a,0xba,0x0,
  0xa5,0x73,0x19,0xf0,0xc,0xe0,0x86,0xe0,0x3a,0xa6,0x62,0x3b,0xe0,0x47,0x18,0x78,
  0x35,0x45,0x6,0x0,0xd,0x6a,0x31,0xcd,0x9d,0x9,0x58,0x15,0x5d,0x80,0x52,0xba,
  0x81,0x12,0x2,0xae,0x8c,0x2e,0x64,0xa,0xf6,0x0,0x4e,0x7,0xe6,0x47,0x17,0xa2,
  0x3c,0xc,0x0,0xaa,0x42,0x53,0x2f,0x7,0xdc,0x1a,0x5d,0x80,0xd2,0x5a,0xa,0x3c,
  0x13,0xb8,0x28,0xba,0x90,0x29,0x38,0x90,0xf2,0x3e,0x8c,0x39,0xc1,0x75,0x28,0x9,
  0x3,0x80,0xaa,0xd2,0xc4,0x10,0xb0,0x2c,0xba,0x0,0xa5,0x76,0x17,0x70,0x24,0x70,
  0x56,0x74,0x21,0x53,0xf0,0x1c,0xe0,0x8b,0xf8,0xf2,0x20,0x4d,0x82,0x1,0x40,0x55,
  0x6a,0xd2,0x9a,0x80,0x95,0xe4,0xba,0x8e,0xab,0x66,0xba,0x17,0x78,0x3e,0x65,0xa1,
  0x5d,0x16,0xaf,0xc2,0x47,0x6,0x6b,0x12,0xc,0x0,0xaa,0xda,0x62,0x9a,0x31,0x13,
  0x70,0x2e,0xe5,0xe1,0x2e,0xd2,0xa0,0x1e,0x0,0x5e,0x8,0x9c,0x1a,0x5c,0xc7,0x54,
  0x2c,0x2,0xde,0x11,0x5d,0x84,0x9a,0xcd,0x0,0xa0,0x3a,0x34,0xe1,0x72,0xc0,0x37,
  0x83,0xb7,0xaf,0x76,0x79,0x0,0x78,0x19,0xf0,0xed,0xe8,0x42,0xa6,0xe0,0xe3,0x94,
  0x4b,0x2,0xd2,0x98,0x7c,0x12,0xa0,0xea,0x14,0xf5,0xc4,0xc0,0x9b,0x28,0xaf,0x7d,
  0x5d,0x1b,0xb0,0x6d,0xb5,0xdb,0x4c,0xe0,0x1b,0xc0,0x5f,0x44,0x17,0x32,0x49,0x77,
  0x53,0xee,0x68,0xf0,0xd1,0xd8,0x35,0xc8,0xde,0x3f,0x9d,0x1,0x50,0x9d,0xa2,0xd6,
  0x4,0x7c,0x8,0x9b,0xbf,0xea,0xb1,0xe,0x78,0x25,0xf0,0xe5,0xe0,0x3a,0x26,0x6b,
  0x2b,0xe0,0x34,0x60,0xa7,0xe8,0x42,0xd4,0x40,0xd1,0x2f,0x23,0xf0,0x65,0x40,0x9d,
  0x30,0xcc,0x17,0x8,0x5d,0x84,0xc1,0x56,0xf5,0x9b,0x1,0x9c,0x44,0xfc,0x4b,0x81,
  0xa6,0xf2,0xef,0xc5,0xe6,0xb5,0x1c,0x89,0xe,0x8b,0xee,0x7f,0x83,0xe,0x7f,0x51,
  0x6a,0x18,0x86,0xb5,0x26,0xe0,0x6e,0xca,0xa,0xe8,0xf5,0x43,0xd8,0x96,0xba,0x6d,
  0x3d,0xf0,0x56,0xca,0x2d,0x77,0x19,0x3c,0x5,0xf8,0x2,0xde,0x1e,0xa8,0xd1,0xa2,
  0x13,0x88,0x33,0x0,0x9d,0x52,0xe7,0x4c,0xc0,0x3,0x94,0x7b,0xb6,0xa5,0x61,0x9a,
  0x41,0x59,0x13,0x10,0xfd,0xd,0x7f,0xb2,0x63,0x71,0x2d,0x47,0xa1,0xa3,0xa2,0xfb,
  0xdf,0xc0,0xfd,0x33,0xba,0x0,0x3,0x40,0xe7,0xbc,0x9b,0xf2,0xed,0xa9,0xca,0x5f,
  0x6a,0xf7,0x1,0xcf,0x1d,0xe6,0x4e,0x48,0xa3,0xcc,0x2,0xbe,0x45,0x7c,0x73,0x9f,
  0xcc,0x58,0xf,0xbc,0xba,0x9e,0xc3,0xd0,0x3d,0xd1,0xfd,0x6f,0xd0,0xe1,0x5d,0x0,
  0x8a,0xf0,0x22,0xca,0x74,0xe4,0xc2,0xa,0x3e,0xeb,0x3a,0xe0,0xe5,0xc0,0xc5,0x15,
  0x7c,0x96,0x34,0x5d,0xb3,0x28,0x33,0x1,0x2f,0x8d,0x2e,0x64,0x12,0xee,0x7,0xe,
  0x6,0x2e,0x8d,0x2e,0x24,0xbb,0xec,0xfd,0xd3,0x35,0x0,0x8a,0x70,0x2a,0xb0,0x3f,
  0xf,0x7d,0x6b,0x9a,0x8e,0x35,0xc0,0x47,0x81,0x83,0xb0,0xf9,0x2b,0xde,0x83,0x94,
  0xf5,0x27,0xa7,0x46,0x17,0x32,0x9,0x9b,0x53,0xea,0xdc,0x2e,0xba,0x10,0xc5,0x72,
  0x6,0x40,0xd1,0xe,0x0,0xfe,0x1a,0x78,0x31,0xe5,0x96,0xa5,0x89,0x2c,0x3,0xbe,
  0xe,0x7c,0x12,0xb8,0xb9,0xbe,0xb2,0xa4,0x69,0x99,0x3,0x9c,0x1,0x1c,0x11,0x5d,
  0xc8,0x24,0xfc,0x7,0xf0,0x6c,0x4a,0x98,0xd6,0x34,0xa4,0xef,0x9f,0xe9,0x77,0xc0,
  0x0,0xd0,0x16,0x9b,0x53,0xa6,0x25,0xff,0x8c,0xf2,0x5e,0xf3,0x9d,0x80,0x5,0xc0,
  0x1d,0x94,0xa6,0x7f,0x13,0x70,0x1,0xf0,0x2b,0x7c,0xc4,0xaf,0x9a,0x6d,0x3e,0xf0,
  0x63,0xe0,0xa9,0xd1,0x85,0x4c,0xc2,0x49,0xc0,0x5b,0xa2,0x8b,0xc8,0x2a,0x7d,0xff,
  0x4c,0xbf,0x3,0x6,0x0,0x49,0xcd,0xb3,0xd,0xf0,0x13,0x60,0xbf,0xe8,0x42,0x26,
  0xe1,0xcd,0xc0,0xe7,0xa2,0x8b,0xc8,0x28,0x7d,0xff,0x4c,0xbf,0x3,0x6,0x0,0x49,
  0xcd,0xb4,0x33,0x70,0x3e,0xb0,0x67,0x74,0x21,0x13,0x58,0x43,0xb9,0x64,0xf1,0xb3,
  0xe8,0x42,0xb2,0x49,0xdf,0x3f,0xd3,0xef,0x80,0x1,0x40,0x52,0x73,0xed,0x49,0xb9,
  0xd6,0xbe,0x5b,0x70,0x1d,0x13,0x59,0x46,0x59,0x8f,0x73,0x7b,0x74,0x21,0x99,0x64,
  0xef,0x9f,0xde,0x5,0x20,0x49,0xf5,0xb9,0x1,0x38,0x8a,0xe6,0x37,0xd6,0x1d,0x29,
  0xb7,0x31,0xce,0x8a,0x2e,0x44,0xc3,0x63,0x0,0x90,0xa4,0x7a,0xfd,0x6,0x38,0x96,
  0xf2,0xc0,0xaa,0x26,0x3b,0x2,0x38,0x21,0xba,0x8,0xd,0x8f,0x97,0x0,0x24,0x69,
  0x38,0x8e,0x1,0xbe,0x4f,0x79,0xa5,0x70,0x53,0x8d,0x0,0x2f,0xa0,0xbc,0x41,0x50,
  0x13,0xc8,0xde,0x3f,0x9d,0x1,0x90,0xa4,0xe1,0x38,0x1d,0x78,0x5b,0x74,0x11,0x13,
  0xe8,0x1,0x27,0x3,0x7b,0x44,0x17,0xa2,0xfa,0x19,0x0,0x24,0x69,0x78,0x3e,0x7,
  0x9c,0x18,0x5d,0xc4,0x4,0x16,0x2,0xa7,0xe0,0xeb,0x83,0x5b,0xcf,0x0,0x20,0x49,
  0xc3,0x75,0x1c,0xf0,0xa5,0xe8,0x22,0x26,0xf0,0x64,0x9a,0x1f,0x54,0x34,0x20,0xd7,
  0x0,0x48,0xd2,0xf0,0xcd,0x2,0xbe,0xb,0x3c,0x2f,0xba,0x90,0x9,0xbc,0x16,0xf8,
  0x4a,0x74,0x11,0x4d,0x95,0xbe,0x7f,0xa6,0xdf,0x1,0x3,0x80,0xa4,0x9c,0xe6,0x1,
  0x3f,0xa7,0xbc,0x18,0xab,0xa9,0xee,0xa5,0xd4,0x77,0x63,0x74,0x21,0x4d,0x94,0xbd,
  0x7f,0x7a,0x9,0x40,0x92,0x62,0xdc,0x47,0x99,0x1,0x58,0x1a,0x5d,0xc8,0x26,0xcc,
  0xa7,0x3c,0x1f,0x60,0x76,0x74,0x21,0xaa,0x9e,0x1,0x40,0x92,0xe2,0xdc,0x44,0xb9,
  0xed,0xee,0xfe,0xe8,0x42,0x36,0xe1,0xcf,0x80,0xf7,0x46,0x17,0xa1,0xea,0x79,0x9,
  0x40,0x92,0xe2,0xbd,0x9c,0xf2,0x4d,0xbb,0xa9,0xbf,0xd0,0xd6,0x53,0x82,0xca,0xf,
  0xa3,0xb,0x69,0x92,0xec,0xfd,0xd3,0x19,0x0,0x49,0x8a,0xf7,0x2d,0xe0,0xfd,0xd1,
  0x45,0x6c,0xc2,0xc,0xca,0x9d,0xb,0x3b,0x44,0x17,0xa2,0xea,0x18,0x0,0x24,0xa9,
  0x19,0x16,0xd3,0xec,0xdb,0x3,0xb7,0xa3,0x3c,0x24,0xa8,0xc9,0x4f,0x32,0xd4,0x14,
  0x18,0x0,0x24,0xa9,0x39,0xde,0xa,0x5c,0x18,0x5d,0xc4,0x26,0x3c,0x1b,0xf8,0xdf,
  0xd1,0x45,0xa8,0x1a,0xae,0x1,0x90,0xa4,0x66,0xd9,0x9,0xf8,0x15,0xb0,0x73,0x74,
  0x21,0xe3,0x58,0x3,0x3c,0x9,0xb8,0x32,0xba,0x90,0x68,0xd9,0xfb,0xa7,0x33,0x0,
  0x92,0xd4,0x2c,0x4b,0x81,0x97,0x0,0xf,0x44,0x17,0x32,0x8e,0x39,0xc0,0x57,0xf1,
  0x51,0xc1,0xe9,0x19,0x0,0x24,0xa9,0x79,0x7e,0x41,0xb3,0x5f,0x1c,0x74,0x20,0xf0,
  0xa1,0xe8,0x22,0x34,0x18,0x2f,0x1,0x48,0x52,0x73,0x9d,0x4,0xbc,0x29,0xba,0x88,
  0x71,0xac,0x7,0xe,0xa1,0x3c,0xcd,0xb0,0x93,0xd2,0xf7,0xcf,0xf4,0x3b,0x60,0x0,
  0x90,0xd4,0x5e,0xb3,0x81,0xff,0x7,0x1c,0x16,0x5d,0xc8,0x38,0xae,0x7,0xe,0x2,
  0xee,0x8e,0x2e,0x24,0x42,0xf6,0xfe,0xe9,0x25,0x0,0x49,0x6a,0xae,0xb5,0x94,0x87,
  0x4,0xdd,0x12,0x5d,0xc8,0x38,0x1e,0x3,0xfc,0x73,0x74,0x11,0x9a,0x1e,0x3,0x80,
  0x24,0x35,0xdb,0xed,0xc0,0xcb,0x80,0x7,0xa3,0xb,0x19,0xc7,0x9b,0x80,0x17,0x45,
  0x17,0xa1,0xa9,0x33,0x0,0x48,0x52,0xf3,0x5d,0x0,0xfc,0x43,0x74,0x11,0x9b,0xf0,
  0x19,0x60,0x41,0x74,0x11,0x9a,0x1a,0x3,0x80,0x24,0xe5,0xf0,0x11,0xe0,0xdf,0xa3,
  0x8b,0x18,0xc7,0x8e,0xc0,0x89,0xd1,0x45,0x68,0x6a,0x5c,0x4,0x28,0x49,0x79,0x6c,
  0x45,0x79,0x48,0xd0,0x5e,0xd1,0x85,0x8c,0xe3,0xb9,0xc0,0x8f,0xa2,0x8b,0x18,0x96,
  0xf4,0xfd,0x33,0xfd,0xe,0x18,0x0,0x24,0x75,0xcb,0xfe,0x94,0xc7,0x5,0xcf,0x8d,
  0x2e,0x64,0xc,0x4b,0x80,0xfd,0x80,0x95,0xd1,0x85,0xc,0x43,0xf6,0xfe,0xe9,0x25,
  0x0,0x49,0xca,0xe5,0x72,0xe0,0xed,0xd1,0x45,0x8c,0x63,0x57,0xca,0xa5,0xa,0x25,
  0xe0,0xc,0x80,0x24,0xe5,0x74,0xa,0xf0,0xdf,0xa3,0x8b,0x18,0xc3,0x8,0xe5,0x52,
  0xc0,0x99,0xd1,0x85,0xd4,0x2d,0x7d,0xff,0x4c,0xbf,0x3,0x6,0x0,0x49,0xdd,0xb4,
  0x0,0xb8,0xc,0xd8,0x23,0xb6,0x8c,0x31,0xdd,0xc,0xec,0xd,0xac,0x8a,0x2e,0xa4,
  0x4e,0xd9,0xfb,0xa7,0x97,0x0,0x24,0x29,0xa7,0x15,0xc0,0x2b,0x68,0xe6,0xf3,0x1,
  0x76,0x3,0xde,0x17,0x5d,0x84,0x36,0xcd,0x0,0x20,0x49,0x79,0x5d,0x48,0x73,0x5f,
  0xca,0xf3,0x6e,0xca,0x4b,0x83,0xd4,0x50,0x5e,0x2,0x90,0xa4,0xdc,0x66,0x50,0xde,
  0x17,0x70,0x64,0x74,0x21,0x63,0xf8,0x25,0x70,0x30,0xb0,0x2e,0xba,0x90,0x3a,0x64,
  0xef,0x9f,0xce,0x0,0x48,0x52,0x6e,0xeb,0x81,0xd7,0x0,0xb7,0x45,0x17,0x32,0x86,
  0xa7,0x0,0x7f,0x15,0x5d,0x84,0xc6,0xe6,0xc,0x80,0x24,0xb5,0xc3,0xb1,0xc0,0x69,
  0xd1,0x45,0x8c,0xe1,0x5e,0xe0,0xf1,0xc0,0xad,0xd1,0x85,0x54,0x2d,0x7b,0xff,0x74,
  0x6,0x40,0x92,0xda,0xe1,0x87,0xc0,0x57,0xa3,0x8b,0x18,0xc3,0x7c,0xe0,0x93,0xd1,
  0x45,0xe8,0x91,0x9c,0x1,0x90,0xa4,0xf6,0x98,0xf,0x5c,0x1,0x3c,0x3a,0xb8,0x8e,
  0xb1,0xbc,0x18,0x38,0x35,0xba,0x88,0x2a,0xa5,0xef,0x9f,0xe9,0x77,0xc0,0x0,0x20,
  0x49,0xa3,0x1d,0xa,0x9c,0xb,0xcc,0x8c,0x2e,0x64,0x23,0x37,0x51,0x9e,0xd,0xb0,
  0x3a,0xba,0x90,0xaa,0x64,0xef,0x9f,0x5e,0x2,0x90,0xa4,0x76,0xf9,0x29,0xf0,0x2f,
  0xd1,0x45,0x8c,0x61,0x77,0xe0,0xef,0xa2,0x8b,0xd0,0x43,0x9c,0x1,0x90,0xa4,0xf6,
  0x99,0x43,0x79,0x46,0xc0,0x41,0xd1,0x85,0x6c,0xe4,0x7e,0xca,0xcb,0x82,0xae,0x8f,
  0x2e,0xa4,0xa,0xd9,0xfb,0xa7,0x33,0x0,0x92,0xd4,0x3e,0x6b,0x28,0xb7,0x6,0xae,
  0x8d,0x2e,0x64,0x23,0x9b,0x3,0x27,0x44,0x17,0xa1,0xc2,0x0,0x20,0x49,0xed,0x74,
  0x15,0xf0,0xb1,0xe8,0x22,0xc6,0xf0,0x52,0xca,0x2d,0x8b,0xa,0xe6,0x25,0x0,0x49,
  0x6a,0xaf,0x39,0xc0,0x7f,0x2,0xfb,0x47,0x17,0xb2,0x91,0xeb,0x80,0x7d,0x69,0xde,
  0xc,0xc5,0x94,0x64,0xef,0x9f,0xce,0x0,0x48,0x52,0x7b,0xad,0x1,0x5e,0x47,0xf3,
  0x5e,0x18,0xf4,0x58,0xe0,0x6d,0xd1,0x45,0x74,0x9d,0x1,0x40,0x92,0xda,0xed,0x12,
  0xe0,0xa3,0xd1,0x45,0x8c,0xe1,0x3,0xc0,0x2e,0xd1,0x45,0x74,0x99,0x1,0x40,0x92,
  0xda,0xef,0x7d,0x94,0x7,0x4,0x35,0xc9,0x96,0xf8,0xca,0xe0,0x50,0xae,0x1,0x90,
  0xa4,0x6e,0xf8,0x53,0xca,0xad,0x81,0xb3,0xa2,0xb,0x19,0x65,0x1d,0xe5,0x85,0x41,
  0x97,0x44,0x17,0x32,0x1d,0xd9,0xfb,0xa7,0x33,0x0,0x92,0xd4,0xd,0xbf,0x2,0x3e,
  0x13,0x5d,0xc4,0x46,0x66,0xd2,0xcc,0xcb,0x13,0x9d,0xe0,0xc,0x80,0x24,0x75,0x47,
  0x53,0xdf,0x15,0x70,0x14,0xf0,0xe3,0xe8,0x22,0xa6,0x2a,0x7b,0xff,0x74,0x6,0x40,
  0x92,0xba,0xe3,0x5e,0xe0,0xed,0xd1,0x45,0x8c,0xe1,0xe3,0xc0,0xec,0xe8,0x22,0xba,
  0xc6,0x0,0x20,0x49,0xdd,0x72,0x3a,0xe5,0xd5,0xc1,0x4d,0xb2,0x1f,0xf0,0x96,0xe8,
  0x22,0xba,0xc6,0x4b,0x0,0x92,0xd4,0x3d,0xbb,0x2,0x57,0x2,0x5b,0x47,0x17,0x32,
  0xca,0x9d,0x94,0xe7,0x3,0xac,0x8,0xae,0x63,0xd2,0xb2,0xf7,0x4f,0x67,0x0,0x24,
  0xa9,0x7b,0x96,0x0,0x8b,0xa2,0x8b,0xd8,0xc8,0xb6,0xf8,0xb6,0xc0,0xa1,0x72,0x6,
  0x40,0x92,0xba,0x69,0x26,0x70,0x1,0xf0,0xd4,0xe8,0x42,0x46,0x59,0x5,0xec,0x5,
  0xdc,0x1a,0x5d,0xc8,0x64,0x64,0xef,0x9f,0xce,0x0,0x48,0x52,0x37,0xad,0xa3,0x2c,
  0x8,0x6c,0x52,0x17,0x9b,0xb,0xfc,0x63,0x74,0x11,0x5d,0xe1,0xc,0x80,0x24,0x75,
  0xdb,0x57,0x80,0xff,0x11,0x5d,0xc4,0x28,0x6b,0x29,0xb3,0x0,0xbf,0x8f,0x2e,0x64,
  0x22,0xd9,0xfb,0xa7,0x33,0x0,0x92,0xd4,0x6d,0xef,0x6,0xee,0x8a,0x2e,0x62,0x94,
  0xd9,0xc0,0xdf,0x47,0x17,0xd1,0x5,0x6,0x0,0x49,0xea,0xb6,0xdb,0x69,0xde,0xb4,
  0xfb,0x1b,0x80,0x3,0xa2,0x8b,0x68,0x3b,0x2f,0x1,0x48,0x92,0x66,0x52,0x1e,0x15,
  0x7c,0x60,0x70,0x1d,0xa3,0x9d,0x1,0x1c,0x13,0x5d,0xc4,0xa6,0x64,0xef,0x9f,0xce,
  0x0,0x48,0x92,0xd6,0x1,0xef,0xa0,0x59,0xb,0x2,0x9f,0xb,0x3c,0x23,0xba,0x88,
  0x36,0x33,0x0,0x48,0x92,0x0,0x7e,0x6,0x7c,0x23,0xba,0x88,0x8d,0x1c,0x1f,0x5d,
  0x40,0x9b,0x79,0x9,0x40,0x92,0xb4,0xc1,0xee,0xc0,0xb5,0xc0,0x9c,0xe8,0x42,0x46,
  0x39,0x14,0x38,0x3f,0xba,0x88,0xb1,0x64,0xef,0x9f,0xce,0x0,0x48,0x92,0x36,0xb8,
  0x9,0xf8,0x6c,0x74,0x11,0x1b,0x69,0xda,0x13,0xb,0x5b,0xc3,0x19,0x0,0x49,0xd2,
  0x68,0x5b,0x3,0xd7,0x53,0x1e,0xcd,0xdb,0x14,0x87,0x50,0x2e,0x51,0x34,0x4a,0xf6,
  0xfe,0xe9,0xc,0x80,0x24,0x69,0xb4,0x95,0xc0,0x7,0xa2,0x8b,0xd8,0x88,0xb3,0x0,
  0x35,0x70,0x6,0x40,0x92,0xb4,0xb1,0x59,0xc0,0x15,0xc0,0xde,0xd1,0x85,0x8c,0x72,
  0x30,0x70,0x61,0x74,0x11,0xa3,0x65,0xef,0x9f,0xce,0x0,0x48,0x92,0x36,0xf6,0x20,
  0xf0,0xbe,0xe8,0x22,0x36,0xe2,0xd3,0x1,0x2b,0xe6,0xc,0x80,0x24,0x69,0x3c,0x67,
  0x3,0x47,0x46,0x17,0x31,0x4a,0xa3,0x66,0x1,0xb2,0xf7,0x4f,0x67,0x0,0x24,0x49,
  0xe3,0x69,0xda,0xb7,0xee,0xe3,0xa2,0xb,0x68,0x13,0x67,0x0,0x24,0x49,0x9b,0xd2,
  0xa4,0x59,0x80,0x11,0xe0,0x4f,0x80,0xab,0xa2,0xb,0x1,0x67,0x0,0x24,0x49,0xed,
  0xf6,0x2e,0x60,0x7d,0x74,0x11,0x7d,0x3d,0xe0,0x6f,0xa3,0x8b,0x68,0xb,0x3,0x80,
  0x24,0x69,0x53,0x2e,0x7,0xbe,0x13,0x5d,0xc4,0x28,0xaf,0xa0,0x3c,0xb1,0x50,0x3,
  0x32,0x0,0x48,0x92,0x26,0x72,0x1c,0x70,0x7f,0x74,0x11,0x7d,0xb3,0x81,0x77,0x46,
  0x17,0xd1,0x6,0x6,0x0,0x49,0xd2,0x44,0x6e,0x0,0xfe,0x35,0xba,0x88,0x51,0xde,
  0x8,0x6c,0x17,0x5d,0x44,0x76,0x6,0x0,0x49,0xd2,0x64,0x9c,0x0,0xdc,0x17,0x5d,
  0x44,0xdf,0x3c,0xe0,0xed,0xd1,0x45,0x64,0x67,0x0,0x90,0x24,0x4d,0xc6,0x1d,0xc0,
  0x17,0xa2,0x8b,0x18,0xe5,0xed,0xc0,0xdc,0xe8,0x22,0x32,0x33,0x0,0x48,0x92,0x26,
  0xab,0x49,0xb3,0x0,0xdb,0x2,0xaf,0x89,0x2e,0x22,0x33,0x3,0x80,0x24,0x69,0xb2,
  0x96,0x1,0x9f,0x89,0x2e,0x62,0x94,0xff,0x45,0xb9,0x35,0x50,0xd3,0xe0,0x83,0x80,
  0x24,0x49,0x53,0xf1,0x28,0xca,0xa2,0xc0,0x79,0xd1,0x85,0xf4,0x1d,0xd,0x9c,0x19,
  0xb1,0xe1,0xec,0xfd,0xd3,0x19,0x0,0x49,0xd2,0x54,0xdc,0x4e,0xb3,0xd6,0x2,0xfc,
  0x75,0x74,0x1,0x59,0x39,0x3,0x20,0x49,0x9a,0xaa,0x9d,0x80,0x6b,0x69,0xc6,0x2c,
  0xc0,0x8,0xb0,0x1f,0x70,0xf5,0xd0,0x37,0x9c,0xbc,0x7f,0x3a,0x3,0x20,0x49,0x9a,
  0xaa,0xa5,0xc0,0x49,0xd1,0x45,0xf4,0xf5,0x28,0x6b,0x1,0x34,0x45,0xce,0x0,0x48,
  0x92,0xa6,0x63,0x17,0xca,0x5a,0x80,0x39,0xd1,0x85,0x0,0xab,0x28,0x8f,0x7,0xbe,
  0x73,0x98,0x1b,0xcd,0xde,0x3f,0x9d,0x1,0x90,0x24,0x4d,0xc7,0x2d,0xc0,0xb7,0xa3,
  0x8b,0xe8,0x9b,0xb,0xfc,0x65,0x74,0x11,0xd9,0x38,0x3,0x20,0x49,0x9a,0xae,0x7d,
  0x80,0x2b,0x69,0xc6,0x97,0xc9,0xdf,0x1,0x8f,0x61,0x88,0x6f,0x2e,0xcc,0xde,0x3f,
  0x9b,0xf0,0xf,0x4d,0x92,0x94,0xd3,0x35,0xc0,0x19,0xd1,0x45,0xf4,0x3d,0x9a,0x72,
  0x4b,0xa0,0x26,0xc9,0x0,0x20,0x49,0x1a,0xc4,0x87,0xa2,0xb,0x18,0xe5,0xad,0xd1,
  0x5,0x64,0xe2,0x25,0x0,0x49,0xd2,0xa0,0xce,0x1,0xe,0x8f,0x2e,0x82,0x32,0xfd,
  0xbf,0x3b,0x65,0x7d,0x42,0xed,0xb2,0xf7,0x4f,0x67,0x0,0x24,0x49,0x83,0x3a,0x31,
  0xba,0x80,0xbe,0x19,0xc0,0xab,0xa3,0x8b,0xc8,0xc2,0x19,0x0,0x49,0xd2,0xa0,0x7a,
  0xc0,0xaf,0x81,0xc7,0x45,0x17,0x2,0x2c,0xa1,0x2c,0x6,0x5c,0x53,0xf7,0x86,0xb2,
  0xf7,0x4f,0x67,0x0,0x24,0x49,0x83,0x1a,0xa1,0x39,0x2f,0x9,0xda,0x15,0x78,0x49,
  0x74,0x11,0x19,0x38,0x3,0x20,0x49,0xaa,0xc2,0x5c,0xe0,0x56,0x60,0xeb,0xe8,0x42,
  0x80,0x9f,0x2,0xcf,0xac,0x7b,0x23,0xd9,0xfb,0xa7,0x33,0x0,0x92,0xa4,0x2a,0xac,
  0x2,0x4e,0x8e,0x2e,0xa2,0xef,0x10,0x60,0xaf,0xe8,0x22,0x9a,0xce,0x0,0x20,0x49,
  0xaa,0xca,0xbf,0x0,0x6b,0xa3,0x8b,0xa0,0xac,0x49,0x78,0x5d,0x74,0x11,0x4d,0x67,
  0x0,0x90,0x24,0x55,0xe5,0x66,0xe0,0x7b,0xd1,0x45,0xf4,0xbd,0x6,0x98,0x19,0x5d,
  0x44,0x93,0x19,0x0,0x24,0x49,0x55,0xfa,0x44,0x74,0x1,0x7d,0xbb,0x0,0xcf,0x8e,
  0x2e,0xa2,0xc9,0xc,0x0,0x92,0xa4,0x2a,0xfd,0x1c,0xf8,0x45,0x74,0x11,0x7d,0x5e,
  0x6,0xd8,0x4,0x3,0x80,0x24,0xa9,0x6a,0x9f,0x8d,0x2e,0xa0,0xef,0xf9,0xc0,0xb6,
  0xd1,0x45,0x34,0x95,0x1,0x40,0x92,0x54,0xb5,0x6f,0x3,0x2b,0xa3,0x8b,0x0,0xe6,
  0x0,0xaf,0x8a,0x2e,0xa2,0xa9,0xc,0x0,0x92,0xa4,0xaa,0xdd,0x4f,0x9,0x1,0x4d,
  0xf0,0xfa,0xe8,0x2,0x9a,0xca,0x7,0x1,0x49,0x92,0xea,0xb0,0x2f,0x70,0x25,0xe5,
  0x96,0xbc,0x68,0xfb,0x1,0x57,0x55,0xfd,0xa1,0xd9,0xfb,0xa7,0x33,0x0,0x92,0xa4,
  0x3a,0x5c,0x4d,0x79,0x4b,0x60,0x13,0xbc,0x34,0xba,0x80,0x26,0x32,0x0,0x48,0x92,
  0xea,0xf2,0xb9,0xe8,0x2,0xfa,0x5e,0x4d,0x33,0x66,0x22,0x1a,0xc5,0x4b,0x0,0x92,
  0xa4,0xba,0xcc,0x2,0x7e,0x47,0xb9,0x27,0x3f,0xda,0xa1,0xc0,0xf9,0x55,0x7e,0x60,
  0xf6,0xfe,0xe9,0xc,0x80,0x24,0xa9,0x2e,0xf,0x2,0x5f,0x89,0x2e,0xa2,0xcf,0xbb,
  0x1,0x36,0xe2,0xc,0x80,0x24,0xa9,0x4e,0x7b,0x1,0xbf,0x8d,0x2e,0x2,0xb8,0xb,
  0xd8,0x9,0x58,0x53,0xd5,0x7,0x66,0xef,0x9f,0xce,0x0,0x48,0x92,0xea,0x74,0x2d,
  0x70,0x71,0x74,0x11,0xc0,0x36,0xf8,0x68,0xe0,0x87,0x31,0x0,0x48,0x92,0xea,0xd6,
  0x94,0xc5,0x80,0xaf,0x8c,0x2e,0xa0,0x49,0xbc,0x4,0x20,0x49,0xaa,0xdb,0x96,0xc0,
  0xad,0xc0,0xfc,0xe0,0x3a,0x56,0x1,0xdb,0x1,0xab,0xab,0xf8,0xb0,0xec,0xfd,0xd3,
  0x19,0x0,0x49,0x52,0xdd,0xee,0x1,0x4e,0x89,0x2e,0x2,0x98,0xb,0x1c,0x19,0x5d,
  0x44,0x53,0x18,0x0,0x24,0x49,0xc3,0xf0,0xc5,0xe8,0x2,0xfa,0x7c,0x28,0x50,0x9f,
  0x97,0x0,0x24,0x49,0xc3,0xd0,0x3,0x7e,0xf,0xec,0x16,0x5c,0xc7,0xdd,0xc0,0xe,
  0x94,0xf7,0x15,0xc,0x24,0x7b,0xff,0x74,0x6,0x40,0x92,0x34,0xc,0x23,0xc0,0xa9,
  0xd1,0x45,0x0,0x5b,0x1,0x47,0x45,0x17,0xd1,0x4,0x6,0x0,0x49,0xd2,0xb0,0x7c,
  0x39,0xba,0x80,0xbe,0x97,0x44,0x17,0xd0,0x4,0x5e,0x2,0x90,0x24,0xd,0xd3,0x55,
  0x94,0x37,0x5,0x46,0x5a,0x4e,0xb9,0xc,0xb0,0x76,0x90,0xf,0xc9,0xde,0x3f,0x9d,
  0x1,0x90,0x24,0xd,0x53,0x13,0xee,0x6,0x58,0x8,0x1c,0x1e,0x5d,0x44,0x34,0x3,
  0x80,0x24,0x69,0x98,0x4e,0x6,0xd6,0x47,0x17,0x1,0xbc,0x38,0xba,0x80,0x68,0x6,
  0x0,0x49,0xd2,0x30,0xdd,0x8,0xfc,0x34,0xba,0x8,0xe0,0x79,0xd1,0x5,0x44,0x33,
  0x0,0x48,0x92,0x86,0xed,0x1b,0xd1,0x5,0x50,0x5e,0xc,0xf4,0x84,0xe8,0x22,0x22,
  0x19,0x0,0x24,0x49,0xc3,0xf6,0x3d,0x9a,0x71,0x19,0xe0,0xd8,0xe8,0x2,0x22,0x19,
  0x0,0x24,0x49,0xc3,0x76,0x7,0x70,0x61,0x74,0x11,0x74,0xfc,0x32,0x80,0x1,0x40,
  0x92,0x14,0xa1,0x9,0x77,0x3,0x1c,0xc,0xec,0x12,0x5d,0x44,0x14,0x3,0x80,0x24,
  0x29,0xc2,0xbf,0x13,0x7f,0x19,0xa0,0x47,0x87,0x2f,0x3,0x18,0x0,0x24,0x49,0x11,
  0x6e,0x1,0x2e,0x8d,0x2e,0x2,0x3,0x80,0x24,0x49,0x43,0xf7,0xc3,0xe8,0x2,0x80,
  0x23,0x28,0xaf,0x9,0xee,0x1c,0x3,0x80,0x24,0x29,0xca,0xd7,0x29,0x2f,0x9,0x8a,
  0xb4,0x5,0x70,0x58,0x70,0xd,0x21,0xc,0x0,0x92,0xa4,0x28,0xd7,0xd2,0x8c,0xcb,
  0x0,0x9d,0x7c,0x3b,0xa0,0x1,0x40,0x92,0x14,0xe9,0xb4,0xe8,0x2,0x30,0x0,0x48,
  0x92,0x34,0x74,0x4d,0x58,0x7,0xb0,0x2f,0xb0,0x6b,0x74,0x11,0xc3,0x66,0x0,0x90,
  0x24,0x45,0xba,0x98,0xf2,0x60,0xa0,0x68,0x9d,0x9b,0x5,0x30,0x0,0x48,0x92,0x22,
  0x8d,0x0,0x67,0x46,0x17,0x81,0x1,0x40,0x92,0xa4,0xa1,0x6b,0xc2,0x3a,0x80,0x23,
  0xe9,0x58,0x4f,0xec,0xd4,0xce,0x4a,0x92,0x1a,0xe9,0x4c,0xe0,0xfe,0xe0,0x1a,0xb6,
  0x7,0xe,0x8,0xae,0x61,0xa8,0xc,0x0,0x92,0xa4,0x68,0xf7,0x0,0xe7,0x46,0x17,
  0x41,0xc7,0x2e,0x3,0x18,0x0,0x24,0x49,0x4d,0xd0,0x84,0x75,0x0,0x9d,0x7a,0x20,
  0x50,0x6f,0x64,0x24,0xfa,0x21,0x4c,0x83,0xe9,0xf5,0x7a,0xd1,0x25,0x48,0x92,0x6,
  0xf7,0x78,0xe0,0xd7,0xc1,0x35,0xdc,0x3,0x2c,0x4,0xd6,0x4d,0xe6,0x2f,0x67,0xef,
  0x9f,0xce,0x0,0x48,0x92,0x9a,0xe0,0x37,0xc0,0x4d,0xc1,0x35,0x6c,0x9,0xec,0x1d,
  0x5c,0xc3,0xd0,0x18,0x0,0x24,0x49,0x4d,0x71,0x76,0x74,0x1,0xc0,0xd3,0xa3,0xb,
  0x18,0x16,0x3,0x80,0x24,0xa9,0x29,0xce,0x8a,0x2e,0x80,0x72,0x3b,0x60,0x27,0xb8,
  0x6,0x40,0x92,0xd4,0x14,0xdb,0x2,0xb7,0x13,0xfb,0xe5,0xf4,0x2e,0xca,0x2d,0x81,
  0xeb,0x27,0xfa,0x8b,0xd9,0xfb,0xa7,0x33,0x0,0x92,0xa4,0xa6,0xb8,0x13,0xb8,0x24,
  0xb8,0x86,0x6d,0x80,0xfd,0x83,0x6b,0x18,0xa,0x3,0x80,0x24,0xa9,0x49,0x9a,0xb0,
  0xe,0xe0,0x99,0xd1,0x5,0xc,0x83,0x1,0x40,0x92,0xd4,0x24,0xe7,0x45,0x17,0x0,
  0x1c,0x1a,0x5d,0xc0,0x30,0xb8,0x6,0x40,0x92,0xd4,0x24,0xf3,0x80,0x95,0xc0,0xcc,
  0xc0,0x1a,0x6e,0x5,0x76,0x99,0xe8,0x2f,0x65,0xef,0x9f,0xce,0x0,0x48,0x92,0x9a,
  0xe4,0x3e,0xe0,0xb2,0xe0,0x1a,0x76,0xee,0x8f,0x56,0x33,0x0,0x48,0x92,0x9a,0xe6,
  0x82,0xe8,0x2,0x80,0x27,0x45,0x17,0x50,0x37,0x3,0x80,0x24,0xa9,0x69,0x7e,0x16,
  0x5d,0x0,0x6,0x0,0x49,0x92,0x86,0xee,0xc7,0x4c,0xf2,0x79,0xfc,0x35,0x6a,0xfd,
  0x13,0x1,0xd,0x0,0x92,0xa4,0xa6,0x59,0x4e,0xfc,0x3a,0x80,0xa7,0x3,0xb3,0x83,
  0x6b,0xa8,0x95,0x1,0x40,0x92,0xd4,0x44,0x3f,0xd,0xde,0xfe,0x16,0xc0,0x13,0x83,
  0x6b,0xa8,0x95,0x1,0x40,0x92,0xd4,0x44,0x3f,0x8f,0x2e,0x0,0x78,0x6a,0x74,0x1,
  0x75,0x32,0x0,0x48,0x92,0x9a,0xe8,0x17,0xd1,0x5,0x0,0x4f,0x8e,0x2e,0xa0,0x4e,
  0x6,0x0,0x49,0x52,0x13,0x2d,0x1,0x6e,0x9,0xae,0xe1,0xa0,0xe0,0xed,0xd7,0xca,
  0x0,0x20,0x49,0x6a,0xaa,0x8b,0x82,0xb7,0xbf,0x37,0x2d,0x5e,0x8,0x68,0x0,0x90,
  0x24,0x35,0xd5,0x85,0xc1,0xdb,0x9f,0x9,0x3c,0x2e,0xb8,0x86,0xda,0x18,0x0,0x24,
  0x49,0x4d,0x15,0x3d,0x3,0x0,0x2d,0x7e,0x20,0x90,0x1,0x40,0x92,0xd4,0x54,0x17,
  0x3,0xf,0x6,0xd7,0x60,0x0,0x90,0x24,0x69,0xc8,0x56,0x1,0x97,0x7,0xd7,0x60,
  0x0,0x90,0x24,0x29,0xc0,0xc5,0xc1,0xdb,0x3f,0x88,0x96,0x2e,0x4,0x34,0x0,0x48,
  0x92,0x9a,0xec,0x92,0xe0,0xed,0x6f,0x1,0x3c,0x21,0xb8,0x86,0x5a,0x18,0x0,0x24,
  0x49,0x4d,0x76,0x69,0x74,0x1,0xc0,0xfe,0xd1,0x5,0xd4,0xc1,0x0,0x20,0x49,0x6a,
  0xb2,0xcb,0x89,0x5f,0x8,0xb8,0x6f,0xf0,0xf6,0x6b,0x61,0x0,0x90,0x24,0x35,0xd9,
  0x6a,0xe0,0x37,0xc1,0x35,0x78,0x9,0x40,0x92,0xa4,0x0,0xd1,0xeb,0x0,0x9c,0x1,
  0x90,0x24,0x29,0x40,0xf4,0x3a,0x80,0xff,0x6,0xcc,0xb,0xae,0xa1,0x72,0x6,0x0,
  0x49,0x52,0xd3,0x45,0x7,0x80,0x1e,0xe5,0xbd,0x0,0xad,0x62,0x0,0x90,0x24,0x35,
  0xdd,0x15,0xd1,0x5,0xd0,0xc2,0x75,0x0,0x6,0x0,0x49,0x52,0xd3,0xdd,0x9,0x2c,
  0xf,0xae,0xa1,0x75,0xeb,0x0,0xc,0x0,0x92,0xa4,0xc,0xae,0xe,0xde,0xbe,0x33,
  0x0,0x92,0x24,0x5,0xb8,0x2a,0x78,0xfb,0xae,0x1,0x90,0x24,0x29,0x40,0xf4,0xc,
  0xc0,0x1e,0xc0,0xac,0xe0,0x1a,0x2a,0x65,0x0,0x90,0x24,0x65,0x10,0x3d,0x3,0x30,
  0x1b,0xd8,0x3d,0xb8,0x86,0x4a,0x19,0x0,0x24,0x49,0x19,0x5c,0x19,0x5d,0x0,0xb0,
  0x67,0x74,0x1,0x55,0x32,0x0,0x48,0x92,0x32,0x58,0x6,0xdc,0x1e,0x5c,0x83,0x1,
  0x40,0x92,0xa4,0x0,0xbf,0xe,0xde,0xbe,0x1,0x40,0x92,0xa4,0x0,0xd7,0x5,0x6f,
  0xdf,0x0,0x20,0x49,0x52,0x0,0x3,0x40,0x85,0xc,0x0,0x92,0xa4,0x2c,0xa2,0x3,
  0xc0,0x3e,0xc0,0xcc,0xe0,0x1a,0x2a,0x63,0x0,0x90,0x24,0x65,0x11,0x1d,0x0,0xe6,
  0x2,0x3b,0x5,0xd7,0x50,0x19,0x3,0x80,0x24,0x29,0x8b,0xe8,0x0,0x0,0xe5,0x81,
  0x40,0xad,0x60,0x0,0x90,0x24,0x65,0x71,0xf,0x70,0x5b,0x70,0xd,0xbb,0x5,0x6f,
  0xbf,0x32,0x6,0x0,0x49,0x52,0x26,0xd1,0xb3,0x0,0x6,0x0,0x49,0x92,0x2,0xdc,
  0x10,0xbc,0x7d,0x3,0x80,0x24,0x49,0x1,0x6e,0xe,0xde,0xbe,0x6b,0x0,0x24,0x49,
  0xa,0x10,0x1d,0x0,0x76,0xd,0xde,0x7e,0x65,0xc,0x0,0x92,0xa4,0x4c,0xa2,0x3,
  0x80,0x97,0x0,0x24,0x49,0xa,0xf0,0xfb,0xe0,0xed,0x6f,0xf,0x6c,0x11,0x5c,0x43,
  0x25,0xc,0x0,0x92,0xa4,0x4c,0x96,0x44,0x17,0x0,0xec,0x12,0x5d,0x40,0x15,0xc,
  0x0,0x92,0xa4,0x4c,0x56,0x50,0x9e,0x7,0x10,0x69,0x87,0xe0,0xed,0x57,0xc2,0x0,
  0x20,0x49,0xca,0xe6,0xa6,0xe0,0xed,0x6f,0x1f,0xbc,0xfd,0x4a,0x18,0x0,0x24,0x49,
  0xd9,0x44,0x5f,0x6,0xd8,0x39,0x78,0xfb,0x95,0x30,0x0,0x48,0x92,0xb2,0x89,0x7e,
  0x1c,0xf0,0xa3,0x82,0xb7,0x5f,0x9,0x3,0x80,0x24,0x29,0x9b,0xdb,0x83,0xb7,0xef,
  0x25,0x0,0x49,0x92,0x2,0x2c,0xd,0xde,0xbe,0x97,0x0,0x24,0x49,0xa,0xe0,0xc,
  0x40,0x5,0xc,0x0,0x92,0xa4,0x6c,0xa2,0xd7,0x0,0x78,0x1b,0xa0,0x24,0x49,0x1,
  0x96,0x5,0x6f,0xdf,0x45,0x80,0x92,0x24,0x5,0x88,0xbe,0x4,0xb0,0x15,0x2d,0xe8,
  0x9f,0xe9,0x77,0x40,0x92,0xd4,0x39,0x77,0x0,0xeb,0x83,0x6b,0x58,0x10,0xbc,0xfd,
  0x81,0x19,0x0,0x24,0x49,0xd9,0xac,0xa7,0x3c,0x12,0x38,0xd2,0x82,0xe0,0xed,0xf,
  0xcc,0x0,0x20,0x49,0xca,0x68,0x79,0xf0,0xf6,0x17,0x6,0x6f,0x7f,0x60,0x6,0x0,
  0x49,0x52,0x46,0x2b,0x82,0xb7,0x6f,0x0,0x90,0x24,0x29,0x40,0xf4,0xc,0xc0,0x82,
  0xe0,0xed,0xf,0xcc,0x0,0x20,0x49,0xca,0x68,0x45,0xf0,0xf6,0x17,0x4,0x6f,0x7f,
  0x60,0x6,0x0,0x49,0x52,0x46,0xd1,0x33,0x0,0x5e,0x2,0x90,0x24,0x29,0xc0,0x8a,
  0xe0,0xed,0x2f,0x8,0xde,0xfe,0xc0,0xc,0x0,0x92,0xa4,0x8c,0x56,0x4,0x6f,0x7f,
  0xf3,0xe0,0xed,0xf,0xcc,0x0,0x20,0x49,0xca,0x68,0x65,0xf0,0xf6,0xe7,0x7,0x6f,
  0x7f,0x60,0x6,0x0,0x49,0x52,0x46,0x6b,0x83,0xb7,0x3f,0x37,0x78,0xfb,0x3,0x33,
  0x0,0x48,0x92,0x32,0x8a,0x5e,0x4,0xb8,0x59,0xf0,0xf6,0x7,0x66,0x0,0x90,0x24,
  0x65,0x14,0x3d,0x3,0xb0,0x75,0xf0,0xf6,0x7,0x66,0x0,0x90,0x24,0x65,0x74,0x6f,
  0xf0,0xf6,0x67,0x7,0x6f,0x7f,0x60,0x6,0x0,0x49,0x52,0x46,0xab,0x82,0xb7,0xbf,
  0x55,0xf0,0xf6,0x7,0x66,0x0,0x90,0x24,0x65,0xf4,0x40,0xf0,0xf6,0xbd,0xd,0x50,
  0x92,0xa4,0x0,0xd1,0xb7,0x1,0x6e,0x11,0xbc,0xfd,0x81,0x19,0x0,0x24,0x49,0x19,
  0xad,0x8f,0x2e,0x20,0x3b,0x3,0x80,0x24,0x29,0xa3,0xfb,0x83,0xb7,0xef,0x83,0x80,
  0x24,0x49,0xa,0xb0,0x3a,0x78,0xfb,0xde,0x5,0x20,0x49,0x92,0xf2,0x31,0x0,0x48,
  0x92,0xd4,0x41,0x6,0x0,0x49,0x92,0x3a,0xc8,0x0,0x20,0x49,0xca,0x28,0x7a,0x11,
  0x60,0xfa,0x97,0x1,0xf5,0x46,0x46,0x46,0xa2,0x6b,0x18,0x48,0xaf,0xd7,0x8b,0x2e,
  0x41,0x92,0x14,0x23,0xb4,0x81,0x8d,0x8c,0x8c,0xa4,0x6e,0x40,0xce,0x0,0x48,0x92,
  0xd4,0x41,0x6,0x0,0x49,0x52,0x56,0x6b,0x2,0xb7,0x1d,0xfd,0x36,0xc2,0x81,0x19,
  0x0,0x24,0x49,0x59,0xad,0xe8,0xe8,0xb6,0x2b,0x61,0x0,0x90,0x24,0x65,0x75,0x63,
  0xe0,0xb6,0x7f,0x17,0xb8,0xed,0x4a,0x18,0x0,0x24,0x49,0x59,0x5d,0x1a,0xb8,0xed,
  0xcb,0x2,0xb7,0x5d,0x9,0x3,0x80,0x24,0x29,0xab,0xf3,0x2,0xb7,0x7d,0x6e,0xe0,
  0xb6,0x2b,0xe1,0x6d,0x80,0x92,0xa4,0xac,0xe6,0x3,0xcb,0x80,0x79,0x43,0xde,0xee,
  0x2a,0x60,0xc7,0x91,0x91,0x91,0x7b,0x86,0xbc,0xdd,0x4a,0x39,0x3,0x20,0x49,0xca,
  0xea,0x5e,0xe0,0xeb,0x1,0xdb,0xfd,0x26,0x90,0xba,0xf9,0x83,0x33,0x0,0x92,0xa4,
  0xdc,0xf6,0x4,0xae,0x1,0xe6,0xc,0x69,0x7b,0x6b,0x81,0x27,0x0,0xd7,0x66,0xef,
  0x9f,0xce,0x0,0x48,0x92,0x32,0xbb,0x1,0xf8,0xe8,0x10,0xb7,0xf7,0x9,0xe0,0xda,
  0x21,0x6e,0xaf,0x36,0xce,0x0,0x48,0x92,0xb2,0xdb,0x8c,0xb2,0x20,0xf0,0x69,0x35,
  0x6f,0xe7,0x17,0xc0,0x61,0xf4,0xdf,0x43,0x90,0xbe,0x7f,0xa6,0xdf,0x1,0x3,0x80,
  0x24,0x9,0x76,0x4,0x7e,0x9,0xec,0x56,0xd3,0xe7,0x2f,0x1,0x9e,0x2,0x2c,0xdd,
  0xf0,0x5f,0x64,0xef,0x9f,0x5e,0x2,0x90,0x24,0xb5,0xc1,0x32,0xe0,0x18,0xe0,0xd6,
  0x1a,0x3e,0x7b,0x49,0xff,0xb3,0x97,0x4e,0xf4,0x17,0x33,0x31,0x0,0x48,0x92,0xda,
  0xe2,0xa,0xca,0xb7,0xf4,0x9f,0x57,0xf8,0x99,0x17,0x3,0x4f,0x6,0x2e,0xaf,0xf0,
  0x33,0x1b,0xc1,0x0,0x20,0x49,0x6a,0x93,0x5b,0x80,0xc3,0x81,0x7f,0x62,0xb0,0x97,
  0x5,0xdd,0x7,0xbc,0x1f,0x38,0x84,0x32,0xbb,0xd0,0x3a,0xae,0x1,0x90,0x24,0xb5,
  0xd5,0x9e,0xc0,0x71,0xc0,0x2b,0x99,0xfc,0xc3,0x82,0xee,0x3,0xbe,0x2,0x7c,0x80,
  0x9,0xa6,0xfc,0xd3,0xf7,0xcf,0xf4,0x3b,0x60,0x0,0x90,0x24,0x6d,0xda,0x7c,0xe0,
  0x68,0xe0,0x8,0xe0,0x0,0x4a,0x30,0xd8,0xba,0xff,0xbf,0xad,0xa4,0xbc,0x54,0xe8,
  0xbf,0x28,0x8f,0xf7,0x3d,0x83,0x49,0x3e,0xe4,0x27,0x7d,0xff,0xcc,0xbe,0x3,0x92,
  0x24,0x69,0xea,0x5c,0x3,0x20,0x49,0x52,0x7,0x19,0x0,0x24,0x49,0xea,0x20,0x3,
  0x80,0x24,0x49,0x1d,0x64,0x0,0x90,0x24,0xa9,0x83,0xc,0x0,0x92,0x24,0x75,0x90,
  0x1,0x40,0x92,0xa4,0xe,0x32,0x0,0x48,0x92,0xd4,0x41,0x6,0x0,0x49,0x92,0x3a,
  0xc8,0x0,0x20,0x49,0x52,0x7,0x19,0x0,0x24,0x49,0xea,0x20,0x3,0x80,0x24,0x49,
  0x1d,0x64,0x0,0x90,0x24,0xa9,0x83,0xc,0x0,0x92,0x24,0x75,0x90,0x1,0x40,0x92,
  0xa4,0xe,0x32,0x0,0x48,0x92,0xd4,0x41,0xff,0x1f,0x64,0x9,0x5b,0x3a,0xa0,0xfe,
  0xff,0xeb,0x0,0x0,0x0,0x0,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82,
    // D:/University/cs/sem3/cursach/photored/icons/mainwindow_icon.png
  0x0,0x0,0x3a,0xed,
  0x89,
  0x50,0x4e,0x47,0xd,0xa,0x1a,0xa,0x0,0x0,0x0,0xd,0x49,0x48,0x44,0x52,0x0,
  0x0,0x2,0x0,0x0,0x0,0x2,0x0,0x10,0x6,0x0,0x0,0x0,0xa4,0xe8,0x8,0xb9,
  0x0,0x0,0x0,0x20,0x63,0x48,0x52,0x4d,0x0,0x0,0x7a,0x26,0x0,0x0,0x80,0x84,
  0x0,0x0,0xfa,0x0,0x0,0x0,0x80,0xe8,0x0,0x0,0x75,0x30,0x0,0x0,0xea,0x60,
  0x0,0x0,0x3a,0x98,0x0,0x0,0x17,0x70,0x9c,0xba,0x51,0x3c,0x0,0x0,0x0,0x6,
  0x62,0x4b,0x47,0x44,0x0,0x0,0x0,0x0,0x0,0x0,0xf9,0x43,0xbb,0x7f,0x0,0x0,
  0x0,0x9,0x70,0x48,0x59,0x73,0x0,0x0,0x0,0x60,0x0,0x0,0x0,0x60,0x0,0xf0,
  0x6b,0x42,0xcf,0x0,0x0,0x0,0x7,0x74,0x49,0x4d,0x45,0x7,0xe7,0xc,0x6,0x12,
  0x29,0x34,0x5d,0x5e,0x2f,0x7,0x0,0x0,0x3a,0x4e,0x49,0x44,0x41,0x54,0x78,0xda,
  0xed,0xdd,0x79,0xb4,0x65,0x55,0x79,0x20,0xf0,0xef,0x16,0x33,0x14,0xa3,0x88,0x50,
  0xd8,0xc8,0x58,0x48,0x50,0x4,0x19,0x96,0xa,0xc2,0x2,0x44,0x50,0x51,0xb4,0x35,
  0x8e,0x31,0x93,0x4a,0xa2,0x49,0x47,0xed,0x4e,0xd2,0xab,0x3b,0x59,0x38,0x60,0x77,
  0xdb,0x66,0x68,0x95,0xd5,0xc9,0xb2,0x57,0x3a,0xc6,0x18,0x35,0x6a,0x4,0x89,0x11,
  0x51,0xac,0x42,0x11,0x6d,0xa3,0x2,0x52,0x2a,0xc5,0x20,0x60,0x82,0x4c,0x11,0x8a,
  0x79,0x86,0xba,0xfd,0xc7,0x57,0xb7,0x2e,0xf,0xea,0x55,0xbd,0xe1,0x9e,0xbb,0xcf,
  0x39,0xfb,0xf7,0xfb,0xe3,0x7c,0xeb,0x5c,0x5e,0xe2,0x57,0xef,0x9d,0xbb,0xef,0xfe,
  0xbe,0xb3,0xcf,0xbe,0x11,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x73,0x33,0x28,0x9d,0x0,0xdd,0x32,0x5c,0x1b,0x11,0xf1,0xf4,
  0xa7,0xe7,0x95,0xb3,0x7c,0x79,0xc,0x23,0x22,0xe,0x38,0x20,0xff,0xeb,0x1,0x7,
  0xe4,0xeb,0xa3,0xf3,0x3d,0xf7,0xcc,0xb8,0xed,0xb6,0x19,0xb7,0xd9,0x26,0xe3,0x8e,
  0x3b,0x66,0x5c,0xba,0x34,0xe3,0x16,0x5b,0x94,0xfe,0x77,0x1,0x0,0x4c,0xd7,0x23,
  0x8f,0x64,0xbc,0xf7,0xde,0x8c,0x77,0xdd,0x95,0xf1,0x81,0x7,0x32,0xde,0x7f,0x7f,
  0xc6,0x1b,0x6f,0xcc,0xf9,0xd6,0xd5,0x57,0xe7,0x3c,0xeb,0x9a,0x6b,0xf2,0xf5,0x51,
  0xbc,0xfa,0xea,0xc1,0x60,0xdd,0xcf,0x1,0x6c,0x82,0x6,0x0,0x33,0xc,0x87,0x11,
  0x11,0xfb,0xee,0x9b,0x1f,0x34,0xc7,0x1c,0x93,0x57,0xc8,0xd1,0x47,0xe7,0x7f,0x3d,
  0xe5,0x94,0x8c,0x7b,0xed,0x55,0x3a,0x4f,0x0,0x0,0x1e,0xef,0xd6,0x5b,0x73,0xfe,
  0x76,0xd1,0x45,0x39,0x7f,0xfb,0xf6,0xb7,0xf3,0xf5,0x8b,0x2f,0xce,0x78,0xe9,0xa5,
  0xd9,0x28,0xc8,0xd9,0x1e,0x50,0x27,0xd,0x80,0x4a,0xe5,0x9d,0xfc,0xa3,0x8e,0xca,
  0x2b,0xe0,0x8d,0x6f,0xcc,0x57,0x5f,0xfb,0xda,0x8c,0x7b,0xec,0x51,0x3a,0x3f,0x0,
  0x0,0x26,0xe9,0xa6,0x9b,0x32,0x7e,0xee,0x73,0xd9,0x28,0xf8,0xd4,0xa7,0x6,0x4b,
  0x22,0x22,0x7e,0xf0,0x83,0xd2,0x99,0x1,0xd3,0xa3,0x1,0xd0,0x73,0x33,0x97,0xec,
  0xbf,0xe5,0x2d,0xf9,0xea,0xa8,0xe0,0x5f,0xbe,0xbc,0x74,0x7e,0x0,0x0,0x94,0x74,
  0xd5,0x55,0x19,0x3f,0xfd,0xe9,0x8c,0xff,0xf7,0xff,0x7a,0xa4,0x0,0xfa,0x4b,0x3,
  0xa0,0x67,0x72,0x51,0xd7,0x7e,0xfb,0xe5,0xd9,0xef,0xfd,0x5e,0xc6,0xd3,0x4f,0xcf,
  0xb8,0xf5,0xd6,0xa5,0xf3,0x3,0x0,0xa0,0xcd,0x1e,0x7e,0x38,0xe3,0x67,0x3f,0x9b,
  0xf1,0xbf,0xff,0xf7,0x6c,0x8,0x5c,0x79,0x65,0xe9,0xcc,0x80,0xc5,0xd3,0x0,0xe8,
  0xb8,0xbc,0xc3,0x7f,0xc8,0x21,0x79,0xf6,0x9e,0xf7,0xe4,0x5f,0xf4,0x95,0xaf,0xcc,
  0xf3,0x25,0x4b,0x4a,0xe7,0x7,0x0,0x40,0x97,0xad,0x5d,0x9b,0xf1,0xec,0xb3,0xf3,
  0xd1,0x81,0xf7,0xbd,0x2f,0x1f,0x1d,0xf8,0xf1,0x8f,0x4b,0x67,0x6,0xcc,0x9f,0x6,
  0x40,0xc7,0xe4,0x1d,0xfe,0x9d,0x76,0xca,0xb3,0xf7,0xbd,0x2f,0xe3,0x3b,0xde,0x91,
  0x71,0xf3,0xcd,0x4b,0xe7,0x7,0x0,0x40,0x9f,0x3d,0xfa,0x68,0xc6,0xbf,0xf8,0x8b,
  0x6c,0x8,0x9c,0x71,0x46,0x36,0x4,0x46,0xdf,0x62,0x0,0xb4,0x99,0x6,0x40,0xcb,
  0x65,0xc1,0x3f,0x18,0xe4,0x0,0xfb,0xe6,0x37,0xe7,0x5f,0xec,0x43,0x1f,0xca,0xff,
  0xfa,0xb4,0xa7,0x95,0xce,0xf,0x0,0x80,0x9a,0xdd,0x7e,0x7b,0xc6,0x33,0xcf,0xcc,
  0x78,0xd6,0x59,0xf9,0xc8,0xc0,0x68,0xe5,0x0,0xd0,0x26,0x1a,0x0,0x2d,0x95,0x4b,
  0xfb,0x9f,0xfa,0xd4,0x3c,0xfb,0xc4,0x27,0xf2,0x2f,0xf5,0x92,0x97,0x94,0xce,0xb,
  0x0,0x0,0x36,0x68,0x18,0x11,0xb1,0x62,0x45,0xce,0x5b,0x7f,0xe5,0x57,0xb2,0x11,
  0x70,0xcb,0x2d,0xa5,0xd3,0x2,0xc6,0x34,0x0,0x5a,0x26,0xef,0xf8,0x1f,0x7f,0x7c,
  0x9e,0xfd,0xdd,0xdf,0x65,0x5c,0xb6,0xac,0x74,0x5e,0x0,0x0,0x30,0x77,0xff,0xf6,
  0x6f,0xa3,0x15,0xac,0xf9,0x88,0xc0,0xd7,0xbe,0x56,0x3a,0x23,0x20,0xc2,0x26,0x71,
  0x85,0x65,0xc1,0xbf,0x64,0x49,0xc6,0xf7,0xbf,0x3f,0x5f,0xfd,0xfa,0xd7,0x33,0x2a,
  0xfc,0x1,0x0,0xe8,0xa2,0xdd,0x76,0xcb,0x5b,0x8d,0xe7,0x9d,0x37,0x5c,0xb7,0x57,
  0xc0,0xfa,0x47,0x5b,0x81,0x62,0xbc,0x1,0xb,0xc9,0x25,0xfe,0x5b,0x6e,0x99,0x7f,
  0x81,0xbf,0xf9,0x9b,0x7c,0xf5,0xd,0x6f,0x28,0x9d,0x17,0x0,0x0,0x34,0xe7,0x53,
  0x9f,0xca,0x95,0x1,0xbf,0xf1,0x1b,0xb9,0x32,0xe0,0x91,0x47,0x4a,0x67,0x4,0x35,
  0xd1,0x0,0x98,0xb2,0xec,0x7c,0x6e,0xb7,0x5d,0x9e,0xfd,0xc3,0x3f,0x64,0x3c,0xe5,
  0x94,0xd2,0x79,0x1,0x0,0xc0,0x54,0x8c,0xf6,0xa,0x88,0x88,0x88,0x57,0xbd,0x2a,
  0x1b,0x1,0xf7,0xdc,0x53,0x3a,0x2d,0xa8,0x81,0x6,0xc0,0x94,0xe4,0x1d,0xff,0x5d,
  0x77,0x1d,0x2d,0x85,0xca,0x57,0x8f,0x3c,0xb2,0x74,0x5e,0x0,0x0,0x50,0xce,0xf7,
  0xbe,0x97,0xf1,0xa5,0x2f,0xcd,0x87,0x3,0x46,0xdf,0x2a,0x0,0x34,0x41,0x3,0xa0,
  0x61,0x79,0xc7,0x7f,0xdb,0x6d,0xf3,0x6c,0xf4,0x6c,0xff,0xf3,0x9f,0x5f,0x3a,0x2f,
  0x0,0x0,0x68,0x8f,0xef,0x7f,0x3f,0x57,0x6,0x9c,0x70,0x42,0xae,0x8,0xb8,0xf7,
  0xde,0xd2,0x19,0x41,0x1f,0xd9,0x4,0xb0,0x21,0x79,0xc7,0x7f,0x8b,0x2d,0xf2,0xec,
  0xec,0xb3,0x33,0x2a,0xfc,0x1,0x0,0xe0,0xc9,0x46,0x2b,0x63,0xbf,0xf8,0xc5,0x9c,
  0x47,0x6f,0xb5,0x55,0xe9,0x8c,0xa0,0x8f,0x34,0x0,0x26,0x6c,0xfd,0xee,0xa6,0x83,
  0x88,0x88,0xbf,0xfa,0xab,0x7c,0xf5,0xe4,0x93,0x4b,0xe7,0x5,0x0,0x0,0xad,0x36,
  0x88,0x88,0x38,0xf1,0xc4,0x8c,0x1f,0xff,0xf8,0xe8,0xdb,0xb2,0x4a,0xa7,0x5,0x7d,
  0xe2,0xd,0xd5,0x88,0xf7,0xbd,0x2f,0xe3,0xaf,0xfe,0x6a,0xe9,0x4c,0x0,0x0,0xa0,
  0x7b,0x46,0xdf,0x8e,0xf5,0xc7,0x7f,0x5c,0x3a,0x13,0xe8,0x13,0x7b,0x0,0x4c,0x48,
  0x76,0x28,0x8f,0x3b,0x2e,0xcf,0x46,0xbb,0x9a,0x6e,0xb6,0x59,0xe9,0xbc,0x0,0x0,
  0xa0,0xbb,0xd6,0xae,0xcd,0x78,0xd2,0x49,0xb9,0x49,0xe0,0xca,0x95,0xa5,0x33,0x82,
  0x2e,0xd3,0x0,0x58,0xa4,0x7c,0x46,0x69,0xb7,0xdd,0xf2,0x37,0x79,0xd9,0x65,0xf9,
  0xea,0xb2,0x65,0xa5,0xf3,0x2,0x0,0x80,0xfe,0xb8,0xf1,0xc6,0xdc,0x24,0xf0,0xd0,
  0x43,0x73,0x93,0xc0,0xdb,0x6e,0x2b,0x9d,0x11,0x74,0x91,0x47,0x0,0x16,0x68,0xe6,
  0xb3,0xfe,0x7f,0xfb,0xb7,0xf9,0xaa,0xc2,0x1f,0x0,0x0,0x26,0x6f,0xcf,0x3d,0x73,
  0xde,0xfd,0x89,0x4f,0xac,0x9f,0x87,0x3,0xf3,0xa6,0x1,0xb0,0x28,0xbf,0xfe,0xeb,
  0x19,0x6d,0xf2,0x7,0x0,0x0,0xcd,0x7b,0xe9,0x4b,0x73,0x25,0xc0,0x9b,0xde,0x54,
  0x3a,0x13,0xe8,0x22,0x9d,0xb3,0x79,0xca,0x25,0xff,0x3b,0xec,0x90,0xbf,0xb9,0x2b,
  0xaf,0xcc,0x57,0xf7,0xd8,0xa3,0x74,0x5e,0x0,0x0,0x50,0x8f,0x5b,0x6f,0xcd,0x46,
  0xc0,0x81,0x7,0xe6,0x23,0x1,0x77,0xdd,0x55,0x3a,0x23,0xe8,0x2,0x2b,0x0,0xe6,
  0x6b,0x10,0x11,0xf1,0x81,0xf,0xe4,0x89,0xc2,0x1f,0x0,0x0,0xa6,0xef,0x69,0x4f,
  0xcb,0x78,0xc6,0x19,0xa5,0x33,0x81,0x2e,0xb1,0x2,0x60,0x8e,0xf2,0xce,0xff,0x21,
  0x87,0xe4,0x6f,0xec,0x92,0x4b,0xf2,0xd5,0xcd,0x37,0x2f,0x9d,0x17,0x0,0x0,0xd4,
  0xeb,0xd1,0x47,0x33,0x1e,0x7a,0x68,0xee,0xa,0xf0,0x93,0x9f,0x94,0xce,0x8,0xda,
  0xcc,0xa,0x80,0x79,0x79,0xcf,0x7b,0x32,0x2a,0xfc,0x1,0x0,0xa0,0xbc,0xd1,0xbc,
  0xdc,0x4a,0x0,0x98,0xb,0x2b,0x0,0x36,0x61,0xb8,0xee,0xd9,0xa2,0x3c,0xbb,0xe2,
  0x8a,0x8c,0x4b,0x34,0x4e,0x0,0x0,0xa0,0x35,0x1e,0x7b,0x2c,0xf7,0x4,0x38,0xe8,
  0xa0,0xdc,0x13,0xe0,0x9a,0x6b,0x4a,0x67,0x4,0x6d,0xa4,0x90,0xdd,0x94,0x61,0x44,
  0xc4,0x1f,0xfe,0x61,0x9e,0x28,0xfc,0x1,0x0,0xa0,0x7d,0x36,0xdb,0x2c,0xe3,0x1f,
  0xfc,0x41,0xe9,0x4c,0xa0,0xcd,0xac,0x0,0x98,0x45,0xde,0xf9,0xdf,0x73,0xcf,0x3c,
  0xbb,0xee,0xba,0x8c,0x5b,0x6e,0x59,0x3a,0x2f,0x0,0x0,0x60,0x36,0xf,0x3d,0x94,
  0x71,0xdf,0x7d,0x73,0x4f,0x80,0x9b,0x6e,0x2a,0x9d,0x11,0xb4,0x89,0x3b,0xda,0x1b,
  0xf5,0xb6,0xb7,0x65,0x54,0xf8,0x3,0x0,0x40,0xfb,0x6d,0xb5,0x55,0xc6,0xb7,0xbc,
  0xa5,0x74,0x26,0xd0,0x46,0x56,0x0,0xcc,0x22,0x57,0x0,0x5c,0x75,0x55,0x9e,0x2d,
  0x5f,0x5e,0x3a,0x1f,0x0,0x0,0x60,0xe,0x86,0x11,0x11,0x57,0x5e,0x99,0x7b,0x1,
  0x1c,0x74,0x50,0xe9,0x74,0xa0,0x4d,0xac,0x0,0x78,0x82,0xfc,0xba,0xbf,0xa3,0x8e,
  0xca,0x33,0x85,0x3f,0x0,0x0,0x74,0xca,0x20,0x22,0xe2,0x99,0xcf,0xcc,0x1b,0x7a,
  0xcf,0x7d,0x6e,0xe9,0x74,0xa0,0x4d,0x7c,0x9d,0xdd,0x13,0xd,0x22,0x22,0xde,0xf8,
  0xc6,0xd2,0x69,0xf4,0xc3,0x8f,0x7e,0x94,0xf1,0xdc,0x73,0xb3,0x13,0x7b,0xd1,0x45,
  0x31,0xe3,0xfb,0x59,0xd7,0xac,0xc9,0x67,0xb3,0x1e,0x7c,0xb0,0x74,0xa6,0x0,0x0,
  0xd3,0x92,0x85,0xe9,0xd6,0x5b,0xe7,0xd9,0x2e,0xbb,0xe4,0x3c,0xe9,0xe0,0x83,0x73,
  0x9e,0x74,0xec,0xb1,0xf9,0xfa,0x69,0xa7,0x65,0x7c,0xf6,0xb3,0x4b,0xe7,0xdb,0x59,
  0xc3,0x88,0xf1,0xbc,0xfe,0xd2,0x4b,0x4b,0xa7,0x3,0xb4,0x48,0xe,0xc4,0x83,0x41,
  0xc6,0x9b,0x6e,0xca,0x38,0x1c,0x8a,0x73,0x8c,0x6b,0x23,0x22,0x56,0xac,0xc8,0xf3,
  0xe7,0x3f,0xbf,0xf4,0xdf,0x13,0x0,0xa0,0xeb,0x46,0xf3,0xaa,0x99,0xf3,0xac,0x16,
  0xcc,0xfb,0x3a,0x15,0xff,0xf5,0x5f,0x4b,0xff,0x1d,0x81,0x16,0x1a,0xae,0xfb,0xde,
  0xd0,0x76,0xc,0x54,0x5d,0x89,0xd7,0x5f,0x9f,0xf1,0xd5,0xaf,0x2e,0xfd,0xf7,0x3,
  0x0,0xe8,0xbb,0xd1,0xbc,0x6b,0xe6,0x3c,0xac,0xf4,0x7c,0xb0,0x3,0x71,0x6d,0x84,
  0x47,0x7b,0x81,0x19,0x72,0x80,0x78,0xfb,0xdb,0x8b,0xf,0x50,0x9d,0x88,0x5f,0xfd,
  0x6a,0xe,0xa4,0x3b,0xee,0x58,0xfa,0xef,0x6,0x0,0x50,0x9b,0x9c,0x87,0x2d,0x5d,
  0x9a,0xf3,0xb2,0x2f,0x7d,0xa9,0x1d,0xf3,0xc3,0x16,0xc7,0xb5,0x11,0xe3,0x6f,0xf7,
  0x82,0xba,0xd9,0x4,0x70,0x86,0xe3,0x8e,0x2b,0x9d,0x41,0xbb,0xfd,0x9f,0xff,0x93,
  0xcf,0x52,0x9d,0x7a,0x6a,0xee,0xaa,0x7a,0xd7,0x5d,0xa5,0x33,0x2,0x0,0xa8,0x4d,
  0xce,0xc3,0xee,0xbd,0x37,0xcf,0x5e,0xf9,0xca,0x8c,0x1f,0xfd,0x68,0xe9,0xbc,0x5a,
  0x6b,0x10,0x61,0x9e,0xf,0xcc,0x90,0x1d,0xc2,0x1b,0x6f,0x2c,0xde,0xa1,0x6c,0x65,
  0x3c,0xeb,0xac,0xd2,0x7f,0x1f,0x0,0x0,0x36,0x6e,0x34,0x6f,0x6b,0xc7,0xfc,0xb1,
  0x6d,0xf1,0xc6,0x1b,0x4b,0xff,0x7d,0x80,0x16,0xc8,0x25,0x41,0x4f,0x7f,0x7a,0x3b,
  0x6,0xa6,0xb6,0xc5,0xaf,0x7c,0x25,0x7f,0x3f,0x9b,0xfb,0xb6,0x8,0x0,0x80,0x96,
  0x1b,0xcd,0xdb,0xd6,0xcf,0xe3,0x5a,0x31,0x9f,0x6c,0x5b,0x5c,0xb6,0xac,0xf4,0xdf,
  0x9,0x4a,0xf2,0x8,0xc0,0x20,0x22,0xe2,0x80,0x3,0x4a,0xa7,0xd1,0x2e,0x3f,0xfb,
  0x59,0x2e,0xf5,0x7f,0xdd,0xeb,0x72,0x89,0xd9,0xa3,0x8f,0x96,0xce,0x8,0x0,0x80,
  0x8d,0x5b,0x3f,0x6f,0x5b,0x37,0x8f,0xcb,0x57,0x7f,0xf6,0xb3,0xd2,0x79,0xb5,0x8b,
  0x79,0x3f,0x75,0xd3,0x0,0x18,0x46,0xd8,0x15,0xf4,0x89,0xfe,0xd3,0x7f,0xca,0xf,
  0x90,0xbb,0xef,0x2e,0x9d,0x9,0x0,0x0,0xf3,0x33,0x73,0x1e,0xf7,0xfb,0xbf,0x5f,
  0x3a,0x9f,0xd6,0x18,0x46,0x68,0x0,0x50,0x3b,0xd,0x80,0x88,0x30,0x10,0xc4,0xba,
  0x1,0x71,0xe5,0xca,0xc1,0x20,0x22,0xe2,0xec,0xb3,0x4b,0xa7,0x3,0x0,0xc0,0xe2,
  0xe4,0xbc,0xee,0xb,0x5f,0xc8,0xb3,0xaf,0x7d,0xad,0x74,0x3e,0xc5,0x59,0xf9,0xb,
  0x1a,0x0,0x39,0x10,0x58,0x1,0x90,0xbf,0x87,0x3f,0xfe,0xe3,0xd2,0x69,0x0,0x0,
  0xd0,0x84,0xf7,0xbe,0xb7,0x74,0x6,0xed,0x70,0xe0,0x81,0xa5,0x33,0x80,0x92,0x34,
  0x0,0x22,0x22,0xe2,0x69,0x4f,0x2b,0x9d,0x41,0x59,0xab,0x56,0x65,0x87,0xf8,0xff,
  0xfd,0xbf,0xd2,0x99,0x0,0x0,0x30,0x59,0x33,0xe7,0x79,0x3f,0xfa,0x51,0xe9,0x7c,
  0x8a,0x19,0x46,0x44,0xec,0xbe,0x7b,0xe9,0x34,0xa0,0x24,0xd,0x80,0x88,0x88,0xd8,
  0x7e,0xfb,0xd2,0x19,0x94,0xf5,0xc5,0x2f,0x96,0xce,0x0,0x0,0x80,0x69,0xa8,0x78,
  0xde,0x37,0x88,0x88,0x58,0xba,0xb4,0x74,0x1a,0x50,0x92,0x6,0x40,0x44,0x54,0x3d,
  0x10,0xc,0x23,0x22,0xbe,0xf5,0xad,0xd2,0x69,0x0,0x0,0xd0,0xb0,0x61,0x44,0xc4,
  0xc5,0x17,0x97,0x4e,0xa3,0xac,0x8a,0xe7,0xfd,0x10,0x1a,0x0,0xeb,0x6c,0xb7,0x5d,
  0xe9,0xc,0x8a,0x19,0x44,0x44,0xac,0x5e,0x5d,0x3a,0xd,0x0,0x0,0xa6,0xe1,0x8a,
  0x2b,0x4a,0x67,0x50,0x56,0xed,0x2b,0x7f,0xa9,0xdd,0xa0,0x74,0x2,0xa5,0xd,0x87,
  0x11,0x11,0xf,0x3f,0x9c,0x67,0x5b,0x6c,0x51,0x3a,0x9f,0xe9,0xff,0x2,0x22,0x22,
  0xb6,0xde,0x3a,0xbf,0x2e,0xe6,0xa1,0x87,0x4a,0xa7,0x3,0x0,0x40,0x33,0x86,0x6b,
  0x23,0x22,0xb6,0xda,0x2a,0x2b,0x80,0x7,0x1f,0x2c,0x9d,0x4f,0x19,0xf,0x3f,0x9c,
  0x7b,0x22,0x6c,0xb5,0x55,0xe9,0x4c,0xa0,0x4,0xd,0x80,0xe1,0xf8,0x58,0xa3,0x1c,
  0x0,0x7,0xd5,0x5f,0x7,0x0,0x0,0xb5,0x30,0xff,0x1d,0x1f,0xa1,0x36,0x1e,0x1,
  0x0,0x0,0x0,0x80,0xa,0x68,0x0,0x0,0x0,0x0,0x40,0x5,0x34,0x0,0x0,0x0,
  0x0,0xa0,0x2,0x1a,0x0,0x0,0x0,0x0,0x50,0x1,0xd,0x0,0x0,0x0,0x0,0xa8,
  0x80,0x6,0x0,0x0,0x0,0x0,0x54,0x40,0x3,0x0,0x0,0x0,0x0,0x2a,0xa0,0x1,
  0x0,0x0,0x0,0x0,0x15,0xd0,0x0,0x0,0x0,0x0,0x80,0xa,0x68,0x0,0x0,0x0,
  0x0,0x40,0x5,0x34,0x0,0x0,0x0,0x0,0xa0,0x2,0x1a,0x0,0x0,0x0,0x0,0x50,
  0x1,0xd,0x0,0x0,0x0,0x0,0xa8,0x80,0x6,0x0,0x0,0x0,0x0,0x54,0x40,0x3,
  0x0,0x0,0x0,0x0,0x2a,0xb0,0x79,0xe9,0x4,0x0,0xba,0x66,0xb8,0x36,0x22,0x62,
  0xb7,0xdd,0xf2,0xec,0xb0,0xc3,0x32,0x1e,0x78,0x60,0xc,0xd6,0xc5,0xe1,0xe3,0xcf,
  0x77,0xdb,0x2d,0xcf,0xb7,0xdb,0x2e,0xcf,0x77,0xde,0x39,0x7f,0x7e,0xbb,0xed,0x66,
  0xfe,0x7f,0xbd,0xef,0xbe,0xfc,0xb9,0x3b,0xee,0xc8,0x9f,0x1b,0x9d,0xdf,0x7a,0x6b,
  0x9e,0x5f,0x7d,0x75,0xfe,0xdc,0x95,0x57,0xe6,0xeb,0x57,0x5d,0x95,0xe7,0x97,0x5d,
  0x36,0x58,0x12,0x11,0xf1,0x8b,0x5f,0x94,0xfe,0xbd,0x0,0x0,0xd0,0x6e,0x83,0xd2,
  0x9,0x94,0x36,0x1c,0x8e,0x8f,0x35,0x1a,0xc,0xc6,0x47,0x20,0xe5,0x88,0xb0,0xed,
  0xb6,0x79,0x76,0xd2,0x49,0x19,0x4f,0x38,0x21,0xe3,0xf1,0xc7,0x67,0x7c,0xd6,0xb3,
  0x32,0x96,0x7e,0xff,0x8c,0xc6,0xaf,0x1f,0xfd,0x28,0xe3,0x85,0x17,0x66,0x5c,0xb9,
  0x32,0xe3,0x5,0x17,0x64,0x86,0xf,0x3c,0x50,0x36,0x4f,0x0,0xda,0xc2,0xfc,0x77,
  0x7c,0x84,0xda,0x54,0x7f,0xe1,0x1b,0x0,0xc7,0x47,0xa8,0x4d,0xbe,0xf3,0x97,0x2c,
  0xc9,0x3b,0xea,0x2f,0x78,0x41,0x8e,0x88,0x6f,0x7e,0x73,0xfe,0xd7,0xd7,0xbf,0x3e,
  0xe3,0xe,0x3b,0x94,0xce,0x73,0x71,0xee,0xbe,0x3b,0xe3,0xb9,0xe7,0xe6,0xbf,0xf3,
  0xf3,0x9f,0xcf,0x7f,0xe7,0x79,0xe7,0xe5,0x3b,0xff,0xb1,0xc7,0x4a,0x67,0x8,0xc0,
  0x74,0x99,0xff,0x8e,0x8f,0x40,0x65,0x46,0x3,0x60,0xad,0xb1,0xf4,0xef,0x1f,0xa6,
  0x29,0xaf,0xf8,0xad,0xb7,0xce,0xf8,0x8e,0x77,0x64,0xbc,0xee,0xba,0xd2,0xef,0xc3,
  0xa9,0xc7,0xb5,0x11,0x11,0xd7,0x5e,0x9b,0xe7,0x6f,0x7f,0x7b,0x9e,0x6f,0xb5,0x55,
  0xe9,0xbf,0xf,0x0,0xd3,0x51,0xfc,0x73,0xc8,0xfc,0x17,0x28,0xa5,0xf4,0x0,0x54,
  0x3a,0x96,0xfe,0xfd,0x43,0x93,0x46,0x4b,0xf9,0xb3,0xc0,0xfd,0xfd,0xdf,0xcf,0xf3,
  0x9b,0x6e,0x2a,0xfd,0xbe,0x6b,0x67,0x1c,0xfd,0x5e,0xfe,0xe3,0x7f,0x9c,0xf9,0x8,
  0x4,0x0,0x7d,0xd3,0x8e,0xcf,0x1d,0xf3,0x5f,0xa0,0x80,0xd2,0x3,0x50,0xe9,0x58,
  0xfa,0xf7,0xf,0x4d,0xc8,0x82,0xff,0xe5,0x2f,0xcf,0x2b,0xfc,0xfa,0xeb,0x4b,0xbf,
  0xcf,0xba,0x19,0x6f,0xb8,0x21,0x7f,0x8f,0xaf,0x79,0x4d,0xe9,0xbf,0x27,0x0,0x93,
  0xd5,0x8e,0xcf,0x19,0xf3,0x5f,0xa0,0x80,0xd2,0x3,0x50,0xe9,0x58,0xfa,0xf7,0xf,
  0x93,0x90,0x57,0xf2,0xde,0x7b,0x67,0xfc,0xd2,0x97,0x4a,0xbf,0xaf,0xfa,0x19,0xcf,
  0x3d,0x37,0x1b,0x2,0x7b,0xed,0x55,0xfa,0xef,0xd,0xc0,0xe2,0xb4,0xe3,0x73,0xc5,
  0xfc,0x17,0x4a,0xa8,0x7e,0xf3,0x8b,0xda,0x7,0x2,0x9b,0xa0,0xd0,0x65,0xf9,0xce,
  0x7d,0xe5,0x2b,0xf3,0xec,0xaf,0xff,0x3a,0xe3,0xe8,0x6b,0xf6,0x68,0xc6,0x68,0x53,
  0xc1,0xb7,0xbd,0x2d,0x47,0x8e,0xcf,0x7d,0xae,0x74,0x46,0x0,0xcc,0x8f,0xf9,0xef,
  0xf8,0x8,0xb5,0x59,0x52,0x3a,0x1,0x80,0xb9,0x1a,0x6d,0x56,0x97,0x53,0x96,0x8f,
  0x7c,0x24,0x5f,0x3d,0xe7,0x9c,0x8c,0xa,0xff,0xe9,0x18,0x7d,0x2b,0xc2,0x67,0x3f,
  0x9b,0x7f,0x87,0x8f,0x7d,0xcc,0x26,0x82,0x0,0x0,0xdd,0x50,0x7d,0xe7,0x4b,0x7,
  0x74,0x7c,0x84,0xb6,0xca,0x77,0xe8,0x53,0x9e,0x92,0x5f,0x63,0xf7,0x4f,0xff,0x94,
  0x23,0xd7,0xf3,0x9e,0x57,0x3a,0x2f,0x1e,0xef,0xdb,0xdf,0xce,0xf8,0x8a,0x57,0xe4,
  0x88,0xb2,0x66,0x4d,0xe9,0x8c,0x0,0xd8,0x30,0xf3,0xdf,0xf1,0x11,0x6a,0x53,0xfd,
  0x85,0x6f,0x0,0x1c,0x1f,0xa1,0x6d,0xf2,0x9d,0xb9,0x6c,0x59,0x9e,0x9d,0x7f,0x7e,
  0xc6,0x67,0x3f,0xbb,0x74,0x5e,0x6c,0xcc,0xea,0xd5,0xd9,0xa8,0x39,0xf9,0xe4,0xc1,
  0x92,0x88,0x88,0x1b,0x6e,0x28,0x9d,0x11,0x0,0x33,0x99,0xff,0x8e,0x8f,0x50,0x1b,
  0x8f,0x0,0x0,0xad,0x93,0x53,0x92,0x67,0x3e,0x33,0xcf,0xbe,0xfb,0xdd,0x8c,0xa,
  0xff,0x6e,0x38,0xe8,0xa0,0x6c,0x2d,0x5f,0x7c,0x71,0xfe,0x1d,0xf,0x3c,0xb0,0x74,
  0x46,0x0,0x0,0xa4,0xea,0x3b,0x5f,0x3a,0xa0,0xe3,0x23,0x94,0x96,0xef,0xc4,0x3d,
  0xf7,0xcc,0xb3,0xd1,0x92,0xf2,0x67,0x3c,0xa3,0x74,0x5e,0x2c,0xc6,0x8d,0x37,0xe6,
  0x8a,0x80,0xa3,0x8f,0xce,0x15,0x1,0xff,0xf2,0x2f,0xa5,0x33,0x2,0xa8,0x9d,0xf9,
  0xef,0xf8,0x8,0xb5,0xb1,0x2,0x0,0x28,0x6e,0xfd,0x33,0xfe,0x11,0x11,0x71,0xc1,
  0x5,0x19,0x15,0xfe,0xfd,0xb0,0xe7,0x9e,0xd9,0x6a,0x3e,0xef,0xbc,0xfc,0x3b,0xef,
  0xb2,0x4b,0xe9,0x8c,0x0,0x0,0x6a,0xa5,0x1,0x0,0x14,0xb3,0x7e,0xf7,0xf8,0xd1,
  0xe6,0x7e,0x11,0x11,0x71,0xd0,0x41,0xa5,0xf3,0xa2,0x9,0xbf,0xf4,0x4b,0x19,0xbf,
  0xf4,0x25,0xdf,0x1a,0x0,0x0,0x50,0x86,0x6,0x0,0x50,0xce,0x20,0x22,0xe2,0xcf,
  0xfe,0xcc,0xae,0xfe,0x35,0x79,0xc1,0xb,0xf2,0xef,0xfd,0xa1,0xf,0x95,0xce,0x4,
  0x0,0xa0,0x36,0xd5,0x3f,0xfb,0xe2,0x19,0xa8,0xf1,0x11,0xa6,0x25,0xef,0x0,0xbf,
  0xe6,0x35,0x39,0x2,0x7d,0xfe,0xf3,0xa5,0xf3,0xa1,0xa4,0x57,0xbf,0x3a,0x47,0xa0,
  0xb3,0xcf,0x2e,0x9d,0x9,0x40,0x2d,0xcc,0x7f,0xc7,0x47,0xa8,0x4d,0xf5,0x17,0xbe,
  0x1,0x70,0x7c,0x84,0xa6,0xe5,0x3b,0x6d,0xef,0xbd,0xf3,0xec,0x87,0x3f,0xcc,0xb8,
  0xe3,0x8e,0xa5,0xf3,0xa2,0xa4,0x3b,0xef,0xcc,0x47,0x40,0xe,0x3d,0xd4,0x26,0x81,
  0x0,0xd3,0x61,0xfe,0x3b,0x3e,0x42,0x6d,0x3c,0x2,0x0,0x4c,0xd9,0x47,0x3f,0x9a,
  0x51,0xe1,0x4f,0x44,0xc4,0x4e,0x3b,0x65,0x2b,0xfa,0x23,0x1f,0x29,0x9d,0x9,0x0,
  0x40,0xdf,0x69,0x0,0x0,0x8d,0xcb,0x7b,0xc,0xaf,0x7c,0x65,0x9e,0xbd,0xfc,0xe5,
  0xa5,0xf3,0xa1,0x8d,0x4e,0x3b,0x2d,0x1f,0xd,0x71,0x7d,0x0,0x0,0x34,0xa5,0xfa,
  0xa5,0x2f,0x96,0x40,0x8d,0x8f,0x30,0x69,0xf9,0xce,0xda,0x76,0xdb,0x3c,0xbb,0xe2,
  0x8a,0x8c,0xbe,0xde,0x8f,0x8d,0xb9,0xfe,0xfa,0x8c,0x7,0x1f,0x9c,0x23,0xd3,0x3,
  0xf,0x94,0xce,0x8,0xa0,0x6f,0xcc,0x7f,0xc7,0x47,0xa8,0x8d,0x15,0x0,0x40,0x73,
  0x86,0x11,0x11,0xbf,0xf3,0x3b,0x79,0xa2,0xf0,0x67,0x2e,0xf6,0xd9,0x27,0xe3,0x6f,
  0xfd,0x56,0xe9,0x4c,0x0,0x0,0xfa,0xa6,0xfa,0xce,0x97,0xe,0xe8,0xf8,0x8,0x93,
  0xb2,0xfe,0x7b,0xde,0x7,0x11,0x11,0xd7,0x5d,0x97,0xaf,0x2e,0x5b,0x56,0x3a,0x2f,
  0xba,0xe4,0xe6,0x9b,0x33,0xee,0xbb,0x6f,0x8e,0x50,0xf,0x3e,0x58,0x3a,0x23,0x80,
  0xbe,0x30,0xff,0x1d,0x1f,0xa1,0x36,0x56,0x0,0x0,0x93,0x37,0x88,0x88,0x78,0xcb,
  0x5b,0xf2,0x44,0xe1,0xcf,0x42,0xec,0xb1,0x47,0xae,0x20,0xf9,0xb5,0x5f,0x2b,0x9d,
  0x9,0x0,0x40,0x5f,0x54,0xdf,0xf9,0xd2,0x1,0x1d,0x1f,0x61,0xb1,0xf2,0x9d,0xb4,
  0x64,0x5d,0x63,0xf1,0xa7,0x3f,0xcd,0x38,0x5a,0xd2,0xd,0xf3,0x34,0x8c,0x88,0xb8,
  0xf6,0xda,0xfc,0xa4,0x3a,0xe0,0x80,0x1c,0xa9,0xea,0x1d,0xaf,0x1,0x26,0xc5,0xfc,
  0x77,0x7c,0x84,0xda,0x58,0x1,0x0,0x4c,0xd8,0x71,0xc7,0x65,0x54,0xf8,0xb3,0x48,
  0x83,0x88,0x88,0xfd,0xf6,0xcb,0x46,0xc0,0xb,0x5f,0x58,0x3a,0x1d,0x0,0x80,0xae,
  0xd3,0x0,0x0,0x26,0xec,0xcd,0x6f,0x2e,0x9d,0x1,0x7d,0xe4,0xba,0x2,0x0,0x58,
  0xac,0xea,0x97,0xbe,0x58,0x2,0x35,0x3e,0xc2,0x42,0xe5,0x3b,0x68,0x9b,0x6d,0xf2,
  0x6c,0xb4,0x79,0xdb,0x8e,0x3b,0x96,0xce,0x8b,0x3e,0xb9,0xfb,0xee,0x8c,0xbb,0xef,
  0xee,0xeb,0x1,0x1,0x16,0xc7,0xfc,0x77,0x7c,0x84,0xda,0x58,0x1,0x0,0x4c,0xc8,
  0x8b,0x5f,0x9c,0x51,0xe1,0x4f,0x13,0x76,0xd8,0x21,0xe3,0x9,0x27,0x94,0xce,0x4,
  0x0,0xa0,0xab,0x34,0x0,0x80,0x9,0x51,0x98,0xd1,0xb0,0x61,0x44,0xc4,0xf1,0xc7,
  0x97,0x4e,0x3,0x0,0xa0,0xab,0x34,0x0,0x80,0x9,0x51,0x98,0x31,0xd,0x27,0x9e,
  0x58,0x3a,0x3,0x0,0x80,0xae,0xaa,0xfe,0xd9,0x17,0xcf,0x40,0x8d,0x8f,0x30,0x5f,
  0xc3,0xb5,0x11,0x11,0xbb,0xed,0x96,0x23,0xc9,0x2d,0xb7,0xe4,0xab,0xae,0x27,0x9a,
  0xb4,0x76,0x6d,0xae,0x4,0x78,0xda,0xd3,0x6,0x4b,0x22,0x22,0x6e,0xbb,0xad,0x74,
  0x46,0x0,0x5d,0x63,0xfe,0x3b,0x3e,0x42,0x6d,0xac,0x0,0x0,0x16,0xe9,0xb0,0xc3,
  0x32,0xfa,0x20,0x65,0x1a,0x96,0xac,0xfb,0xdc,0x3a,0xf4,0xd0,0xd2,0x99,0x0,0x0,
  0x74,0x8d,0x6,0x0,0xb0,0x48,0x7,0x1e,0x58,0x3a,0x3,0x2a,0x33,0x88,0x70,0xdd,
  0x1,0x0,0xcc,0x9f,0x6,0x0,0xb0,0x70,0xa,0x31,0x8a,0x71,0xdd,0x1,0x0,0xcc,
  0x97,0x6,0x0,0xb0,0x70,0xc3,0x88,0x88,0xe5,0xcb,0x4b,0xa7,0x41,0x8d,0x34,0x0,
  0x0,0x0,0xe6,0x4b,0x3,0x0,0x58,0xb8,0x41,0x44,0xc4,0xee,0xbb,0x97,0x4e,0x83,
  0x1a,0xb9,0xee,0x0,0x0,0xe6,0x4b,0x3,0x0,0x58,0xa4,0xed,0xb7,0x2f,0x9d,0x1,
  0x35,0x72,0xdd,0x1,0x0,0xcc,0x97,0x6,0x0,0xb0,0x48,0xa,0x31,0xa6,0x6c,0x18,
  0xe1,0xba,0x3,0x0,0x98,0x3f,0xd,0x0,0x60,0x91,0x96,0x2e,0x2d,0x9d,0x1,0x95,
  0x19,0x44,0x68,0x0,0x0,0x0,0xcc,0x9f,0x6,0x0,0x0,0x0,0x0,0x54,0x40,0x3,
  0x0,0x58,0xa4,0x7b,0xef,0x2d,0x9d,0x1,0x95,0x19,0x46,0x44,0xdc,0x73,0x4f,0xe9,
  0x34,0x0,0x0,0xba,0x46,0x3,0x0,0x58,0x24,0x85,0x18,0x53,0x36,0x88,0x70,0xdd,
  0x1,0x0,0xcc,0x9f,0x6,0x0,0xb0,0x48,0xa,0x31,0x4a,0x70,0xdd,0x1,0x0,0xcc,
  0x97,0x6,0x0,0xb0,0x70,0xc3,0x88,0x88,0x5b,0x6e,0x29,0x9d,0x6,0x35,0x72,0xdd,
  0x1,0x0,0xcc,0x97,0x6,0x0,0xb0,0x70,0x83,0x88,0x88,0xab,0xaf,0x2e,0x9d,0x6,
  0x35,0xba,0xea,0xaa,0xd2,0x19,0x0,0x0,0x74,0x8d,0x6,0x0,0xb0,0x70,0xc3,0x8,
  0x85,0x18,0x65,0xb8,0xee,0x0,0x0,0xe6,0x4b,0x3,0x0,0x58,0x24,0x85,0x18,0x53,
  0xa6,0xf1,0x4,0x0,0xb0,0x20,0x83,0xd2,0x9,0x94,0x36,0x1c,0x8e,0x8f,0x35,0x1a,
  0xc,0xc6,0x47,0x98,0xaf,0xe1,0xda,0x88,0x88,0xa7,0x3e,0x35,0x47,0x92,0x5b,0x6f,
  0xcd,0x57,0x5d,0x4f,0x34,0x69,0xed,0xda,0x8c,0xbb,0xed,0x96,0x57,0xda,0xed,0xb7,
  0x97,0xce,0x8,0xa0,0x6b,0xcc,0x7f,0xc7,0x47,0xa8,0x8d,0x15,0x0,0xc0,0x82,0xd,
  0x96,0x44,0x44,0xfc,0xe2,0x17,0x79,0xf6,0xe3,0x1f,0x97,0xce,0x87,0x9e,0x1b,0x46,
  0x44,0x5c,0x7e,0xb9,0xc2,0x1f,0x0,0x60,0x61,0x34,0x0,0x80,0x9,0x59,0xb9,0xb2,
  0x74,0x6,0xd4,0xc0,0x75,0x6,0x0,0xb0,0x50,0x1a,0x0,0xc0,0x84,0x28,0xcc,0x68,
  0xd8,0x20,0xc2,0x75,0x6,0x0,0xb0,0x70,0xd5,0x3f,0xfb,0xe2,0x19,0xa8,0xf1,0x11,
  0x16,0x2a,0xdf,0x41,0xdb,0x6c,0x93,0x67,0x37,0xdf,0x9c,0x71,0xc7,0x1d,0x4b,0xe7,
  0x45,0x9f,0xdc,0x75,0x57,0xc6,0x3d,0xf6,0xc8,0x11,0xeb,0x81,0x7,0x4a,0x67,0x4,
  0xd0,0x55,0xe6,0xbf,0xe3,0x23,0xd4,0xc6,0xa,0x0,0x60,0xd1,0xd6,0x17,0x64,0xc3,
  0x88,0x88,0x2f,0x7c,0xa1,0x74,0x3e,0xf4,0xcc,0x30,0x22,0xe2,0x73,0x9f,0x53,0xf8,
  0x3,0x0,0x2c,0x8e,0x6,0x0,0x30,0x39,0x83,0x88,0x88,0x4f,0x7e,0xb2,0x74,0x1a,
  0xf4,0x91,0xeb,0xa,0x0,0x60,0xb1,0xaa,0x5f,0xfa,0x62,0x9,0xd4,0xf8,0x8,0x8b,
  0x95,0xef,0xa4,0x25,0x4b,0xf2,0x8e,0xed,0x35,0xd7,0xe4,0x8,0xb3,0xef,0xbe,0xa5,
  0xf3,0xa2,0xcb,0x7e,0xfa,0xd3,0x8c,0xcb,0x97,0xe7,0x48,0x55,0xef,0x78,0xd,0x30,
  0x29,0xe6,0xbf,0xe3,0x23,0xd4,0xc6,0xa,0x0,0x60,0x62,0xf2,0xa3,0x74,0xed,0xda,
  0x2c,0xfc,0xff,0xf4,0x4f,0x4b,0xe7,0x43,0x1f,0xfc,0xc9,0x9f,0x28,0xfc,0x1,0x0,
  0x26,0xa3,0xfa,0xce,0x97,0xe,0xe8,0xf8,0x8,0x93,0x32,0x5c,0x1b,0x11,0xb1,0xd5,
  0x56,0x39,0xc2,0x5c,0x77,0x5d,0xbe,0xba,0x6c,0x59,0xe9,0xbc,0xe8,0x92,0x9f,0xff,
  0x3c,0x57,0x92,0xec,0xbf,0xff,0x60,0x49,0x44,0xc4,0x43,0xf,0x95,0xce,0x8,0xa0,
  0x2f,0xcc,0x7f,0xc7,0x47,0xa8,0x8d,0x15,0x0,0xc0,0xc4,0xcd,0x2c,0xd8,0xfe,0xfc,
  0xcf,0x4b,0xe7,0x43,0xc7,0xc,0x23,0x22,0xfe,0xe4,0x4f,0x14,0xfe,0x0,0x0,0x93,
  0x55,0x7d,0xe7,0x4b,0x7,0x74,0x7c,0x84,0x49,0xcb,0x77,0xd6,0xb6,0xdb,0xe6,0xd9,
  0x4f,0x7e,0x92,0x71,0xef,0xbd,0x4b,0xe7,0x45,0x4b,0xd,0x23,0x22,0xae,0xbd,0x36,
  0x3f,0x99,0x9e,0xf5,0xac,0x1c,0x99,0x1e,0x7c,0xb0,0x74,0x5a,0x0,0x7d,0x63,0xfe,
  0x3b,0x3e,0x42,0x6d,0xac,0x0,0x0,0x1a,0x93,0x1f,0xad,0xf7,0xdf,0x9f,0x67,0xef,
  0x78,0x47,0xe9,0x7c,0x68,0xb9,0x41,0x44,0xc4,0x3b,0xdf,0xa9,0xf0,0x7,0x0,0x68,
  0x86,0x6,0x0,0xd0,0xb8,0x2c,0xe8,0xbe,0xf2,0x95,0x3c,0xfb,0xc7,0x7f,0x2c,0x9d,
  0xf,0x6d,0x74,0xce,0x39,0x79,0x9d,0x7c,0xf9,0xcb,0xa5,0x33,0x1,0x0,0xe8,0xab,
  0xea,0x97,0xbe,0x58,0x2,0x35,0x3e,0x42,0xd3,0x72,0x73,0xc0,0xbd,0xf6,0xca,0x91,
  0xe7,0xf2,0xcb,0xf3,0xd5,0x9d,0x76,0x2a,0x9d,0x17,0x25,0xdd,0x71,0x47,0x2e,0xfd,
  0x7f,0xce,0x73,0xf2,0x99,0xff,0x1b,0x6e,0x28,0x9d,0x11,0x40,0xdf,0x99,0xff,0x8e,
  0x8f,0x50,0x1b,0x2b,0x0,0x80,0xa9,0xc9,0x2,0xef,0x5f,0xff,0x35,0xb,0xbe,0x37,
  0xbf,0x39,0x5f,0xad,0x77,0x2,0x52,0xb7,0xd1,0xdf,0xfd,0x2d,0x6f,0x51,0xf8,0x3,
  0x0,0x4c,0x87,0x6,0x0,0x30,0x75,0x59,0xf0,0xfd,0xd3,0x3f,0xe5,0xd9,0x59,0x67,
  0x95,0xce,0x87,0x29,0x1b,0x46,0x44,0x7c,0xf8,0xc3,0x79,0xef,0xe5,0x9c,0x73,0x4a,
  0xa7,0x3,0x0,0x50,0x8b,0xea,0x97,0xbe,0x58,0x2,0x35,0x3e,0xc2,0xb4,0xe5,0x23,
  0x1,0x5b,0x6d,0x95,0x23,0xd1,0xca,0x95,0xf9,0xea,0xb,0x5e,0x50,0x3a,0x2f,0x9a,
  0xf4,0xad,0x6f,0x65,0x3,0xe0,0x45,0x2f,0xca,0x46,0xd0,0xc3,0xf,0x97,0xce,0x8,
  0xa0,0x36,0xfd,0x9a,0xff,0x3e,0xf0,0x40,0xc6,0x5b,0x6e,0xc9,0x78,0xd3,0x4d,0xf9,
  0x39,0xf3,0xc0,0x3,0x39,0xbf,0xb8,0xf3,0xce,0x98,0xf1,0xef,0xbd,0xf3,0xce,0xfc,
  0xfc,0x39,0xfd,0xf4,0xd2,0x99,0x43,0x9,0xd5,0x17,0x7e,0xfd,0x1a,0x0,0xe7,0x4f,
  0x3,0x80,0x36,0xc8,0x46,0xc0,0x8e,0x3b,0xe6,0x88,0xf4,0xcd,0x6f,0xe6,0xab,0xcf,
  0x79,0x4e,0xe9,0xbc,0x98,0xa4,0xd1,0xd7,0x40,0x1e,0x7b,0x6c,0x8e,0x38,0x6b,0xd6,
  0x94,0xce,0x8,0xa0,0x56,0xad,0x9b,0xff,0xe,0x23,0x22,0xee,0xbb,0x2f,0xe7,0x1,
  0xab,0x56,0xe5,0xf9,0xea,0xd5,0x79,0x7e,0xf5,0xd5,0xf9,0x43,0x4f,0x8c,0x37,0xde,
  0x38,0x18,0x15,0xf8,0xc0,0x9c,0x55,0x5f,0xf8,0xb5,0x6e,0x0,0x9c,0x32,0xd,0x0,
  0xda,0x24,0xdf,0x89,0x7b,0xee,0x99,0x67,0xdf,0xfe,0x76,0xc6,0x67,0x3c,0xa3,0x74,
  0x5e,0x2c,0xc6,0xcf,0x7f,0x9e,0x13,0xb9,0xa3,0x8f,0x5e,0xbf,0x7,0x4,0x0,0x45,
  0x4d,0x77,0xfe,0x3b,0xfa,0xdf,0xb9,0xe2,0x8a,0x8c,0xdf,0xf8,0x46,0xc6,0x1f,0xfc,
  0x20,0x3f,0x1f,0x7e,0xf0,0x83,0xac,0x48,0x56,0xaf,0xce,0x19,0xe9,0x63,0x8f,0x95,
  0xfe,0xfd,0x40,0x9f,0x55,0x5f,0xf8,0x69,0x0,0x8c,0x8f,0xd0,0x16,0xf9,0x8e,0x3c,
  0xf0,0xc0,0x3c,0xfb,0xda,0xd7,0x32,0xee,0xb5,0x57,0xe9,0xbc,0x98,0x8f,0xd1,0x66,
  0x8f,0x27,0x9d,0x94,0x85,0xff,0xe8,0x8e,0xd,0x0,0xa5,0x35,0x33,0xff,0xbd,0xf9,
  0xe6,0x1c,0xf7,0x2f,0xbe,0x38,0x2b,0x8c,0xaf,0x7f,0x3d,0xcf,0xbf,0xf2,0x15,0x9b,
  0xbd,0x42,0x7b,0x54,0x5f,0xf8,0x69,0x0,0x8c,0x8f,0xd0,0x36,0xf9,0xce,0xdc,0x63,
  0x8f,0x3c,0x3b,0xff,0xfc,0x8c,0x87,0x1c,0x52,0x3a,0x2f,0x36,0xe6,0x8a,0x2b,0x72,
  0xc2,0x77,0xca,0x29,0x26,0x7c,0x0,0xed,0xb4,0xb0,0xf9,0xef,0x1d,0x77,0x64,0x3c,
  0xef,0xbc,0x8c,0xa3,0x2,0xff,0xc2,0xb,0x73,0xbc,0xff,0x97,0x7f,0x29,0xfd,0xef,
  0x2,0xd8,0xa4,0xd1,0x0,0x58,0x6b,0x2c,0xfd,0xfb,0x87,0xb9,0xc8,0x2b,0x75,0x97,
  0x5d,0x32,0x7e,0xfb,0xdb,0xa5,0xdf,0x37,0xe2,0x86,0xe2,0x45,0x17,0x65,0xdc,0x79,
  0xe7,0xd2,0xd7,0xb,0x0,0x1b,0xb7,0xf1,0xf1,0xfc,0xdf,0xfe,0x2d,0xe3,0xdf,0xfe,
  0x6d,0xee,0xd1,0xf3,0xf2,0x97,0x67,0xdc,0x72,0xcb,0xd2,0x79,0x3,0x2c,0x5a,0x3b,
  0x26,0xce,0x1a,0x0,0x30,0x17,0x39,0x1,0xd9,0x7c,0xf3,0xbc,0x72,0x3f,0xf8,0xc1,
  0x8c,0x6b,0xd7,0x96,0x7e,0x1f,0xd5,0x19,0x47,0xbf,0xf7,0x8f,0x7c,0xc4,0xc4,0x10,
  0xa0,0x5b,0x72,0xdc,0x5e,0xbd,0x3a,0xc7,0xf1,0xff,0xf1,0x3f,0xf2,0xfc,0xa8,0xa3,
  0xf2,0xdc,0xca,0x50,0xa0,0xc7,0xda,0x31,0x91,0xd6,0x0,0x80,0x85,0xc8,0x2b,0xf8,
  0xb4,0xd3,0x32,0xae,0x59,0x53,0xfa,0xfd,0x54,0x47,0xbc,0xeb,0xae,0x9c,0x28,0xfe,
  0xf2,0x2f,0x97,0xfe,0xfb,0x3,0x0,0xc0,0xbc,0xb4,0x63,0x42,0xad,0x1,0x0,0x8b,
  0x91,0x5,0xe9,0x33,0x9e,0x91,0x57,0xf4,0xb9,0xe7,0x96,0x7e,0x5f,0xf5,0x33,0x9e,
  0x7d,0x76,0xfe,0x9e,0xff,0xdd,0xbf,0x2b,0xfd,0xf7,0x6,0x0,0x80,0x5,0x69,0xc7,
  0xc4,0x5a,0x3,0x0,0x26,0x29,0xb,0xd5,0x53,0x4f,0xcd,0x2b,0xfc,0xba,0xeb,0x4a,
  0xbf,0xcf,0x3a,0x17,0xd7,0x46,0x44,0x5c,0x7b,0x6d,0x9e,0xbf,0xec,0x65,0xa5,0xff,
  0x9e,0x0,0x0,0x30,0x11,0xc5,0x27,0xda,0x1a,0x0,0xd0,0x98,0xbc,0xc2,0xb7,0xd9,
  0x26,0xe3,0xbb,0xde,0x95,0xf1,0xe7,0x3f,0x2f,0xfd,0xbe,0x6b,0x67,0xbc,0xe1,0x86,
  0x8c,0xef,0x7c,0x67,0xc6,0xad,0xb7,0x2e,0xfd,0xf7,0x3,0x0,0x80,0x89,0x6a,0xc7,
  0xc4,0x5b,0x3,0x0,0xa6,0x21,0xef,0x6c,0x6f,0xb5,0x55,0xc6,0xdf,0xfa,0xad,0x8c,
  0x3f,0xfd,0x69,0xe9,0xf7,0x61,0x99,0x78,0xcd,0x35,0x19,0x4f,0x3f,0xdd,0x26,0x7e,
  0x0,0x0,0x54,0xa1,0x1d,0x13,0x71,0xd,0x0,0x28,0x29,0xdf,0x9,0x87,0x1f,0x9e,
  0xf1,0x23,0x1f,0xc9,0x78,0xdb,0x6d,0xa5,0xdf,0x9f,0x93,0x89,0x77,0xde,0x99,0x71,
  0xf4,0x75,0x4e,0x2f,0x7a,0x51,0x9e,0xdb,0xe5,0x19,0x0,0xa0,0x36,0xd5,0x4f,0x0,
  0x6b,0x2f,0x84,0xb3,0x4,0x50,0x8,0xc0,0xe3,0xcd,0x5c,0x2,0x7f,0xe2,0x89,0x31,
  0x5c,0x17,0x23,0x22,0xe2,0xf8,0xe3,0x73,0xe4,0x3c,0xe4,0x90,0x3c,0x5f,0xb2,0xa4,
  0x6c,0xb6,0x6b,0xd7,0x66,0x7e,0x97,0x5f,0x9e,0xe7,0x17,0x5e,0x98,0xf9,0xad,0x58,
  0x91,0xe7,0x2b,0x57,0xe6,0x3b,0xfc,0xc1,0x7,0xcb,0xe6,0x9,0x0,0x40,0x69,0xd5,
  0x17,0x7e,0x1a,0x0,0xe3,0x23,0x30,0x37,0x79,0x27,0x7d,0xd7,0x5d,0xf3,0xec,0xb0,
  0xc3,0x72,0x24,0x5d,0xbe,0x3c,0xcf,0x9f,0xf9,0xcc,0x2c,0xc8,0xf,0x3c,0x30,0x5f,
  0xdf,0x6d,0xb7,0x3c,0xdf,0x7e,0xfb,0x3c,0xdf,0x69,0xa7,0xfc,0xb9,0xa5,0x4b,0x67,
  0xfe,0x7f,0xbd,0xf7,0xde,0x58,0x77,0xc7,0x3e,0x7f,0xee,0x9e,0x7b,0xf2,0xf5,0x5b,
  0x6f,0xcd,0x78,0xf5,0xd5,0x19,0xaf,0xbc,0x32,0x7f,0xee,0xaa,0xab,0xf2,0xe7,0x2e,
  0xbb,0x2c,0xdf,0xc1,0xb7,0xdf,0x5e,0xfa,0xf7,0x2,0x0,0x40,0xbb,0x55,0x5f,0xf8,
  0x69,0x0,0x8c,0x8f,0x0,0xb0,0x50,0xa3,0x3d,0x36,0x72,0x66,0x71,0xca,0x29,0xf9,
  0xea,0x8b,0x5e,0x94,0xd,0xab,0x23,0x8f,0xcc,0xd7,0xf7,0xd9,0x27,0x5f,0xdf,0x65,
  0x97,0x99,0xff,0xd7,0x6b,0xd6,0xe4,0xcf,0x5d,0x7f,0x7d,0xfe,0xdc,0xf7,0xbf,0x9f,
  0xaf,0x5f,0x70,0x41,0xbe,0x7e,0xfe,0xf9,0x83,0x25,0x11,0x11,0xf,0x3f,0x5c,0xfa,
  0xdf,0x9,0x0,0x74,0x58,0x3b,0x9e,0xd1,0xb5,0x7,0x0,0x0,0xdd,0x32,0x5a,0x9,
  0x93,0x9f,0x24,0x1f,0xf8,0x40,0xc6,0xdb,0x6f,0x6f,0xe6,0xf3,0x6a,0xb4,0x27,0xc7,
  0x99,0x67,0x66,0x7c,0xca,0x53,0x4a,0xff,0xfb,0x1,0x80,0xe,0x2a,0x5d,0x80,0x97,
  0x8e,0xa5,0x7f,0xff,0x0,0x74,0xc3,0x68,0xf3,0xc8,0xf5,0xdf,0x1e,0x31,0x8c,0x88,
  0x58,0xb3,0xa6,0xcc,0xe7,0xd7,0xed,0xb7,0x67,0x3,0xe2,0xad,0x6f,0x2d,0xfd,0x7b,
  0x1,0x0,0x3a,0xa4,0x74,0x1,0x5e,0x3a,0x96,0xfe,0xfd,0x3,0xd0,0x6e,0x59,0x68,
  0x2f,0x5d,0x9a,0xf1,0xb,0x5f,0x28,0xfd,0xb9,0xb5,0xe1,0xf8,0xf9,0xcf,0x8f,0xf2,
  0x2c,0xfd,0xfb,0x2,0x0,0x5a,0xac,0x1d,0x13,0x17,0xd,0x0,0x0,0xda,0x65,0xe6,
  0x12,0xff,0xef,0x7d,0xaf,0xf4,0xe7,0xd5,0xdc,0xe2,0x3f,0xff,0xf3,0xcc,0x4d,0x3a,
  0x1,0x0,0x1e,0xa7,0x1d,0x13,0x16,0xd,0x0,0x0,0xda,0x21,0xb,0xe8,0xa7,0x3e,
  0x75,0xb8,0xee,0xeb,0x25,0x4b,0x7f,0x4e,0x2d,0x2c,0x5e,0x71,0x45,0xc6,0xdd,0x77,
  0x2f,0xfd,0xfb,0x4,0x0,0x5a,0xa4,0x1d,0x13,0x15,0xd,0x0,0x0,0xca,0xea,0x47,
  0xe1,0xaf,0x11,0x0,0x0,0x6c,0x44,0x3b,0x26,0x28,0x1a,0x0,0x0,0x94,0xd1,0xcf,
  0xc2,0x5f,0x23,0x0,0x0,0xd8,0x80,0x76,0x4c,0x4c,0x34,0x0,0x0,0x98,0xae,0x3a,
  0xa,0x7f,0x8d,0x0,0x0,0xe0,0x71,0xda,0x31,0x21,0xd1,0x0,0x0,0x60,0x3a,0xea,
  0x2c,0xfc,0x35,0x2,0x0,0x80,0xd0,0x0,0x28,0xfd,0xfb,0x7,0x60,0x3a,0x14,0xfe,
  0x1b,0x8a,0x1a,0x1,0x0,0xd4,0x65,0x49,0xe9,0x4,0x0,0x80,0xe6,0x8c,0xa,0xff,
  0x18,0x44,0x44,0x7c,0xfd,0xeb,0xf9,0xea,0x21,0x87,0x94,0xce,0xab,0x1d,0xe,0x3a,
  0x28,0xe3,0xca,0x95,0x1a,0x1,0x0,0xd4,0x40,0x3,0x0,0x0,0x7a,0x48,0xe1,0x3f,
  0x1f,0x1a,0x1,0x0,0xd4,0x41,0x3,0x0,0x0,0x7a,0x44,0xe1,0xbf,0x18,0x1a,0x1,
  0x0,0xf4,0x9b,0x6,0x0,0x0,0xf4,0x80,0xc2,0x7f,0x92,0x34,0x2,0x0,0xe8,0xa7,
  0x41,0xe9,0x4,0x4a,0xab,0x7d,0x33,0xbc,0xc1,0x60,0x7c,0x4,0xa0,0x7b,0x14,0xfe,
  0xd3,0xb0,0x7a,0x75,0xc6,0x13,0x4e,0xc8,0x4f,0xcc,0x5b,0x6e,0x29,0x9d,0x11,0x30,
  0xbb,0x1c,0x17,0x37,0xdf,0x3c,0xcf,0x96,0x2d,0xcb,0xb8,0xe3,0x8e,0x19,0xb7,0xdd,
  0x36,0xe3,0xf6,0xdb,0xe7,0xb8,0xb9,0xc3,0xe,0x31,0x8c,0x88,0xd8,0x6e,0xbb,0x7c,
  0x7d,0xab,0xad,0x32,0xde,0x75,0x57,0xfe,0xf7,0x7b,0xee,0xc9,0xff,0x7e,0xff,0xfd,
  0x79,0x7e,0xdf,0x7d,0xf9,0xdf,0xef,0xb8,0x23,0x5f,0xff,0xc5,0x2f,0x6,0x4b,0xd6,
  0xfd,0x1c,0x74,0x40,0xf5,0x85,0x9f,0x6,0xc0,0xf8,0x8,0x40,0x77,0x28,0xfc,0x4b,
  0xd0,0x8,0x80,0x12,0x72,0xa6,0x3e,0x2a,0xdc,0x8f,0x3a,0x2a,0xe3,0x41,0x7,0x65,
  0x1,0x7e,0xc0,0x1,0x39,0xe,0x2e,0x5f,0x9e,0xaf,0x1f,0x70,0x40,0xc6,0x7d,0xf6,
  0xc9,0xb8,0xc5,0x16,0xd3,0xc9,0x72,0x34,0x1e,0x5c,0x7d,0x75,0xc6,0x6b,0xae,0x79,
  0x52,0x1c,0x46,0x44,0x7c,0xef,0x7b,0xd9,0x30,0xf8,0xf9,0xcf,0xa7,0xfd,0x7b,0x84,
  0x8,0xd,0x0,0xd,0x0,0xd,0x0,0x80,0x4e,0x51,0xf8,0xb7,0x81,0x46,0x0,0x4c,
  0xd2,0x70,0x74,0x7,0x7e,0x18,0x11,0xf1,0xfc,0xe7,0xe7,0xf8,0x76,0xcc,0x31,0x79,
  0x7e,0xf4,0xd1,0x79,0xfe,0xc2,0x17,0xe6,0x4f,0x8f,0xee,0xd0,0x77,0xdd,0xcd,0x37,
  0xe7,0xbf,0xef,0xe2,0x8b,0x67,0x8e,0xe7,0xdf,0xfe,0x76,0x8e,0x2b,0x3f,0xf9,0x49,
  0xe9,0xc,0xa1,0x97,0xda,0xf1,0x3d,0xc4,0xe5,0x62,0xe9,0xdf,0x3f,0x0,0x73,0x33,
  0x2a,0xfc,0x73,0xe4,0xbe,0xfc,0xf2,0xd2,0x9f,0x1f,0x62,0x44,0xc4,0x15,0x57,0xd8,
  0x23,0x0,0xe6,0x2e,0xdf,0x2f,0xbb,0xec,0x92,0xf1,0xf4,0xd3,0x73,0x5c,0xbb,0xf0,
  0xc2,0x3c,0x7f,0xe4,0x91,0x76,0xbc,0xaf,0xdb,0x12,0xaf,0xbb,0x2e,0xe3,0x7,0x3f,
  0x98,0xbf,0x27,0x8d,0x5e,0x98,0x88,0x76,0xbc,0xc1,0x35,0x0,0x0,0xd8,0x30,0x85,
  0x7f,0x17,0xa2,0x46,0x0,0x3c,0x5e,0xbe,0x1f,0xb6,0xde,0x3a,0xc7,0xaf,0x97,0xbf,
  0x3c,0xe3,0xe7,0x3e,0x97,0xaf,0x3f,0xf4,0x50,0x3b,0xde,0xb7,0x5d,0x8d,0x3f,0xf9,
  0x49,0xc6,0xf7,0xbe,0x37,0x7f,0xaf,0xfb,0xef,0x5f,0xfa,0xef,0xd,0x9d,0xd2,0x8e,
  0x37,0xb2,0x6,0x0,0x0,0x33,0x29,0xfc,0xbb,0x18,0x35,0x2,0xa8,0x53,0x5e,0xf7,
  0x7b,0xee,0x99,0xe3,0xd6,0x9f,0xfe,0x69,0x9e,0xdf,0x75,0x57,0x3b,0xde,0x97,0x7d,
  0x8f,0x6b,0xd7,0xe6,0xef,0xfd,0x82,0xb,0x32,0xbe,0xe8,0x45,0xa5,0xaf,0x7,0x68,
  0xb5,0x76,0xbc,0x71,0x35,0x0,0x0,0x48,0xa,0xff,0x3e,0x44,0x8d,0x0,0xfa,0x2d,
  0xaf,0xef,0xfd,0xf6,0xcb,0xf8,0x91,0x8f,0x64,0x7c,0xe0,0x81,0x76,0xbc,0xff,0xc4,
  0xfc,0x1c,0xb9,0xec,0xb2,0x8c,0xbf,0xfa,0xab,0x33,0xbf,0x15,0x1,0x2a,0x57,0xfc,
  0xd,0xaa,0x1,0x0,0x40,0x28,0xfc,0xfb,0x19,0x35,0x2,0xe8,0x87,0xbc,0x8e,0xf,
  0x3b,0x2c,0xe3,0x39,0xe7,0x64,0x7c,0xec,0xb1,0x76,0xbc,0xcf,0xc4,0xb9,0xc5,0xab,
  0xaf,0xce,0xf8,0x96,0xb7,0x64,0xdc,0x6c,0xb3,0xd2,0xd7,0x15,0x14,0xd1,0x8e,0x37,
  0x64,0xb9,0x58,0xfa,0xf7,0xf,0x50,0x3b,0x85,0x7f,0xd,0x51,0x23,0x80,0x6e,0xc9,
  0xeb,0x75,0xd9,0xb2,0x8c,0x1f,0xfb,0x58,0xc6,0x47,0x1f,0x6d,0xc7,0xfb,0x49,0x5c,
  0x74,0x5c,0x1b,0x11,0xb1,0x7a,0x75,0xc6,0x5f,0xfe,0xe5,0xd2,0xd7,0x1b,0x4c,0x55,
  0xf1,0x37,0xa0,0x6,0x0,0x40,0x95,0x14,0xfe,0x35,0x46,0x8d,0x0,0xda,0x69,0xb4,
  0x44,0x3c,0xe3,0x1f,0xfc,0x41,0x5e,0xa7,0xf7,0xdd,0xd7,0x8e,0xf7,0x8d,0x38,0x9d,
  0xf8,0x8f,0xff,0x98,0x7f,0xff,0xbd,0xf6,0x2a,0x7b,0x35,0x42,0xc3,0xda,0xf1,0x86,
  0x2b,0x17,0x4b,0xff,0xfe,0x1,0x6a,0xa3,0xf0,0x17,0x35,0x2,0x68,0x8b,0x1c,0x8f,
  0x8e,0x3c,0x32,0xaf,0xc7,0x1f,0xfe,0xb0,0x1d,0xef,0xf,0xb1,0x6c,0xbc,0xe7,0x9e,
  0x8c,0xef,0x7e,0x77,0xc6,0x25,0x4b,0x4a,0x5d,0x9f,0xd0,0x88,0x76,0xbc,0xd1,0xca,
  0xc5,0xd2,0xbf,0x7f,0x80,0x5a,0x28,0xfc,0x45,0x8d,0x0,0x4a,0x5b,0x7f,0xa7,0x7f,
  0x18,0x11,0xf1,0x9f,0xff,0x73,0x46,0x5f,0xcb,0x27,0x6e,0x2c,0x7e,0xe7,0x3b,0x19,
  0xf7,0xdb,0x6f,0xfa,0x57,0x2c,0x4d,0x18,0x94,0x4e,0xa0,0xb4,0xda,0xb,0xe1,0xc1,
  0x60,0x7c,0x4,0x60,0xf2,0x46,0x85,0x7f,0x7e,0xe2,0x7e,0xfd,0xeb,0xf9,0xea,0x21,
  0x87,0x94,0xce,0x8b,0x36,0x59,0xbd,0x3a,0xe3,0x9,0x27,0xe4,0x27,0xf2,0x2d,0xb7,
  0x94,0xce,0x88,0x7e,0xc9,0x99,0xee,0xde,0x7b,0xc7,0x30,0x22,0xe2,0x33,0x9f,0xc9,
  0xf1,0xe8,0x79,0xcf,0x2b,0x9d,0x17,0x5d,0x72,0xd7,0x5d,0x19,0x7f,0xfb,0xb7,0x73,
  0x9c,0xfa,0xfb,0xbf,0x2f,0x9d,0x11,0xb,0x63,0x49,0x7,0x0,0x34,0x40,0xe1,0xcf,
  0xdc,0x1d,0x74,0x50,0xc6,0x95,0x2b,0xad,0x8,0x60,0x92,0xf2,0x7a,0x3a,0xfe,0xf8,
  0x3c,0xfb,0xe7,0x7f,0x56,0xf8,0xb3,0x70,0x3b,0xee,0x98,0xf1,0x33,0x9f,0xc9,0xeb,
  0xea,0x63,0x1f,0xcb,0xcf,0xb9,0x2d,0xb7,0x2c,0x9d,0x19,0xf3,0xa3,0x1,0x0,0x0,
  0x13,0xa4,0xf0,0x67,0xe1,0x34,0x2,0x98,0x8c,0xbc,0x7e,0xfe,0xeb,0x7f,0xcd,0xb3,
  0xd1,0x38,0xb4,0xdb,0x6e,0xa5,0xf3,0xa2,0x4f,0x4e,0x3f,0x3d,0x3f,0xe7,0x2e,0xbc,
  0x30,0x3f,0xf7,0x5c,0x5f,0x5d,0x51,0xfd,0xd2,0x6f,0x8f,0x0,0x8c,0x8f,0x0,0x2c,
  0x9c,0xc2,0x9f,0xc9,0xf3,0x68,0x0,0x73,0x33,0x7a,0xb6,0x3f,0xc7,0x9f,0xb3,0xce,
  0xca,0x57,0x7f,0xfb,0xb7,0x4b,0xe7,0x45,0x4d,0xae,0xbf,0x3e,0xe3,0xa9,0xa7,0xe6,
  0x78,0x75,0xc5,0x15,0xa5,0x33,0x62,0xc3,0xaa,0x2f,0xfc,0x34,0x0,0xc6,0x47,0x0,
  0xe6,0x4f,0xe1,0x4f,0xf3,0x34,0x2,0xd8,0xb0,0x1c,0x7f,0x96,0x2e,0xcd,0xb3,0x2f,
  0x7e,0x31,0xc7,0xa1,0x13,0x4f,0x2c,0x9d,0x17,0x35,0xbb,0xe3,0x8e,0xdc,0x6b,0xe2,
  0xb4,0xd3,0x6,0x4b,0x22,0x22,0xbe,0xf5,0xad,0xd2,0x19,0x31,0x93,0x47,0x0,0x0,
  0x60,0x1,0x14,0xfe,0x4c,0x8f,0x47,0x3,0x98,0x29,0xaf,0x83,0x9d,0x76,0xca,0xf1,
  0xe7,0xab,0x5f,0x55,0xf8,0xd3,0x1e,0x3b,0xef,0x9c,0xd7,0xe3,0xf9,0xe7,0xe7,0x75,
  0x7a,0xca,0x29,0xa5,0x33,0x62,0x26,0xd,0x0,0x0,0x98,0x7,0x85,0x3f,0xe5,0x68,
  0x4,0xd4,0x2e,0xc7,0x9f,0x5d,0x77,0xcd,0x3b,0xac,0x17,0x5e,0x98,0xaf,0xbe,0xe0,
  0x5,0xa5,0xf3,0x82,0x27,0xdb,0x76,0xdb,0x8c,0x5f,0xfc,0xe2,0x70,0xdd,0x8a,0x80,
  0xd2,0x19,0x91,0xaa,0x5f,0xfa,0xed,0x11,0x80,0xf1,0x11,0x80,0xd9,0x29,0xfc,0x69,
  0x1f,0x8f,0x6,0xd4,0xc2,0xf8,0x43,0xf7,0x3d,0xfc,0x70,0xc6,0x57,0xbd,0x2a,0xc7,
  0xab,0xf3,0xce,0x2b,0x9d,0x51,0xad,0xaa,0x2f,0xfc,0x34,0x0,0xc6,0x47,0x0,0x9e,
  0xcc,0xc4,0x9b,0xf6,0xd3,0x8,0xe8,0xab,0xf5,0x77,0xfc,0x7,0x11,0x11,0x2b,0x56,
  0xe4,0xab,0xc6,0x1f,0xba,0xec,0xfe,0xfb,0x73,0x5,0xcb,0x4b,0x5e,0x92,0x7b,0x4,
  0x5c,0x74,0x51,0xe9,0x8c,0x6a,0x53,0x7d,0xe1,0xa7,0x1,0x30,0x3e,0x2,0x30,0xa6,
  0xf0,0xa7,0x7b,0x34,0x2,0xfa,0xc2,0xf8,0x43,0xff,0xdd,0x7d,0x77,0x36,0x2,0x8e,
  0x39,0x26,0x1b,0x1,0x3f,0xfa,0x51,0xe9,0x8c,0x6a,0x51,0x7d,0xe1,0xa7,0x1,0x30,
  0x3e,0x2,0x60,0xe2,0x4d,0x1f,0x68,0x4,0x74,0x95,0xf1,0x87,0xfa,0xfc,0xec,0x67,
  0xd9,0x8,0x78,0xde,0xf3,0xb2,0x11,0x70,0xeb,0xad,0xa5,0x33,0xea,0x3b,0x9b,0x0,
  0x2,0x40,0x98,0x78,0xd3,0x27,0x36,0xb,0xec,0x9a,0x99,0x4b,0xfd,0x8d,0x3f,0xd4,
  0x64,0xef,0xbd,0xf3,0xba,0x3f,0xe7,0x9c,0x7c,0x1f,0x6c,0xb9,0x65,0xe9,0x8c,0xfa,
  0x4e,0x3,0x0,0x80,0xaa,0x29,0xfc,0xe9,0x2f,0x8d,0x80,0xb6,0x9b,0x39,0xfe,0x78,
  0xc6,0x9f,0x9a,0x3d,0xff,0xf9,0xf9,0x3e,0xf8,0x5f,0xff,0xab,0x74,0x26,0x7d,0x57,
  0xfd,0xd2,0x6f,0x8f,0x0,0x8c,0x8f,0x0,0x35,0x51,0xf8,0x53,0x1f,0x8f,0x6,0xb4,
  0x85,0xcd,0xfd,0x60,0x53,0x7e,0xe5,0x57,0x72,0x9c,0xfa,0xd4,0xa7,0x4a,0x67,0xd2,
  0x37,0xd5,0x17,0x7e,0x1a,0x0,0xe3,0x23,0x40,0xd,0x14,0xfe,0xa0,0x11,0x50,0x5a,
  0x8e,0x43,0x2b,0x56,0xe4,0x38,0x74,0xc2,0x9,0xa5,0xf3,0x81,0xf6,0xb9,0xfb,0xee,
  0x8c,0x87,0x1e,0x9a,0xe3,0xd4,0xf5,0xd7,0x97,0xce,0xa8,0x2f,0x3c,0x2,0x0,0x40,
  0x15,0x14,0xfe,0x30,0xe2,0xd1,0x80,0xe2,0x6,0x11,0x11,0xbf,0xfb,0xbb,0x79,0xa2,
  0x1,0x3,0x4f,0xb6,0xc3,0xe,0x19,0x3f,0xf9,0xc9,0x1c,0xa7,0x36,0xdb,0xac,0x74,
  0x46,0x7d,0xa1,0x1,0x0,0x40,0xaf,0xd9,0x5c,0xb,0x66,0xb3,0xff,0xfe,0x19,0xf,
  0x3d,0xb4,0x74,0x26,0xb5,0xc9,0x3b,0x9a,0xab,0x57,0xe7,0xee,0xe7,0x27,0x9f,0x9c,
  0xf1,0xb6,0xdb,0x4a,0xe7,0x5,0xed,0x73,0xf4,0xd1,0x19,0xdf,0xf5,0xae,0xd2,0x99,
  0xf4,0x45,0xf5,0x4b,0xbf,0x3d,0x2,0x30,0x3e,0x2,0xf4,0x89,0x3b,0xfe,0x30,0x9b,
  0x47,0x1e,0xc9,0xf8,0xba,0xd7,0xd,0xd6,0xed,0xbe,0x5d,0x3a,0xa3,0xda,0xe5,0x4c,
  0x74,0xbc,0x32,0x23,0xa3,0x95,0x19,0x30,0x76,0xff,0xfd,0x19,0x9f,0xfd,0xec,0x1c,
  0xb7,0xae,0xbb,0xae,0x74,0x46,0x5d,0x65,0x5,0x0,0x0,0xbd,0xa2,0xf0,0x87,0xd9,
  0x28,0xfc,0xdb,0xca,0x8a,0x0,0xd8,0x94,0x6d,0xb7,0xcd,0x78,0xd6,0x59,0xa5,0x33,
  0xe9,0x3a,0xd,0x0,0x0,0x7a,0x41,0xe1,0xf,0xb3,0x51,0xf8,0x77,0xc5,0x60,0x49,
  0x44,0xc4,0xaa,0x55,0x39,0x8e,0x1d,0x7b,0x6c,0xbe,0x6a,0x8f,0x0,0x18,0x7b,0xe9,
  0x4b,0x73,0xc5,0xcc,0x4b,0x5f,0x5a,0x3a,0x93,0xae,0xaa,0x7e,0xe9,0xb7,0x47,0x0,
  0xc6,0x47,0x80,0x2e,0x52,0xf8,0xc3,0x6c,0x14,0xfe,0x5d,0xe7,0xd1,0x0,0xd8,0x80,
  0x61,0x44,0xc4,0x95,0x57,0xe6,0xc9,0x21,0x87,0x64,0xe3,0x6c,0x34,0xde,0xb1,0x29,
  0x56,0x0,0x40,0x8f,0x64,0x21,0xb4,0xd5,0x56,0x39,0x61,0x38,0xed,0xb4,0x8c,0x67,
  0x9d,0x95,0xaf,0x7f,0xf7,0xbb,0x79,0x7e,0xeb,0xad,0x19,0x1f,0x79,0x64,0x66,0xbc,
  0xf5,0xd6,0x99,0x3f,0x77,0xd6,0x59,0x19,0x5f,0xf1,0x8a,0x7c,0x7d,0xcb,0x2d,0x4b,
  0xff,0xfb,0xe0,0xf1,0x6c,0xee,0x7,0xb3,0x19,0x4d,0x84,0x5f,0xff,0x7a,0x85,0x7f,
  0xb7,0x79,0x34,0x0,0x36,0x60,0x10,0x11,0xf1,0xcc,0x67,0xe6,0xc9,0xaf,0xff,0x7a,
  0xe9,0x74,0xba,0xa6,0xfa,0x3b,0xbf,0x56,0x0,0x8c,0x8f,0x74,0xcf,0xcc,0x2,0x68,
  0xb4,0x3b,0xea,0xdb,0xdf,0x9e,0x71,0x97,0x5d,0x26,0xfb,0xbf,0x76,0xfb,0xed,0x19,
  0xff,0xf2,0x2f,0x33,0x7e,0xf8,0xc3,0x79,0xe5,0x8c,0x5e,0x87,0xe9,0x98,0x79,0xdd,
  0xaf,0x58,0x91,0xaf,0x2a,0xfc,0xe1,0xc9,0x85,0xff,0xd9,0x67,0x97,0xce,0x88,0xc9,
  0xb2,0x22,0x0,0x1e,0x67,0x18,0x11,0x71,0xdd,0x75,0x39,0x1f,0x58,0xbe,0x3c,0xc7,
  0xbd,0xc7,0x1e,0x2b,0x9d,0x16,0x2d,0x37,0x6a,0x0,0xd4,0x1a,0x4b,0xff,0xfe,0x99,
  0x9f,0xfc,0x8b,0xd,0x6,0x19,0x4f,0x3f,0x3d,0xe3,0x9a,0x35,0x65,0xae,0x9f,0xdb,
  0x6f,0xcf,0x42,0xec,0xad,0x6f,0x2d,0xfd,0x7b,0xa1,0xe,0xa3,0xc2,0x3f,0xaf,0xbf,
  0xcb,0x2f,0x2f,0x3d,0x7e,0x8a,0x62,0x7b,0xe2,0xc3,0xf,0x67,0xfc,0xf7,0xff,0x7e,
  0xa1,0xef,0x2f,0xba,0x65,0xd4,0x8,0xc8,0x78,0xf3,0xcd,0xed,0xb8,0xe,0x45,0xb1,
  0x64,0x7c,0xed,0x6b,0x17,0xf3,0x9e,0xaa,0x49,0xf5,0x77,0x7e,0x6b,0x2f,0x84,0xad,
  0x0,0xe8,0x86,0x2c,0x7c,0x96,0x2e,0xcd,0xb3,0x4f,0x7c,0x22,0xdf,0xb9,0x6d,0x9b,
  0xe8,0xfd,0xc3,0x3f,0x64,0x27,0xf6,0x37,0x7e,0x23,0x9f,0xc5,0xba,0xf7,0xde,0xd2,
  0x19,0xd1,0xf,0xee,0xf8,0xc3,0x6c,0xdc,0xf1,0xaf,0x9d,0x15,0x1,0x30,0x72,0xf9,
  0xe5,0x19,0xf,0x3b,0x2c,0xc7,0xc3,0x7a,0xeb,0xbb,0x4d,0xa9,0xbe,0xf0,0xd3,0x0,
  0x18,0x1f,0x69,0x9f,0x99,0x85,0xcf,0x79,0xe7,0xe5,0xab,0x47,0x1e,0x59,0x3a,0xaf,
  0x8d,0xfb,0xde,0xf7,0xb2,0x11,0xf0,0xb2,0x97,0x65,0x23,0xc0,0xb3,0x8a,0x2c,0x8c,
  0xc2,0x1f,0x66,0xa3,0xf0,0x67,0x26,0x8d,0x0,0x88,0x75,0x8f,0x4,0xbc,0xf8,0xc5,
  0x39,0xff,0xbc,0xe0,0x82,0xd2,0xe9,0xb4,0x95,0x4d,0x0,0xa1,0x85,0x66,0xee,0x6a,
  0x3e,0x2a,0x7c,0xda,0x5e,0xf8,0x8f,0x1c,0x75,0x54,0xe6,0x7d,0xd1,0x45,0x39,0x21,
  0x31,0x1,0x61,0x7e,0x36,0x7c,0xfd,0x2b,0xfc,0xe1,0xc9,0xbb,0xfa,0x2b,0xfc,0x49,
  0x36,0xb,0x84,0x91,0x3f,0xfc,0xc3,0xd2,0x19,0xb4,0x5d,0xf5,0x77,0x7e,0xad,0x0,
  0x18,0x1f,0x29,0xaf,0x9f,0x5f,0x67,0xb6,0x7a,0x75,0xc6,0x13,0x4e,0xc8,0x2b,0xcd,
  0xf7,0x19,0xb3,0x61,0xfd,0xbc,0xfe,0x61,0x12,0x7c,0x9d,0x1f,0xf3,0x63,0x45,0x0,
  0xf5,0x1a,0xd5,0x75,0xfb,0xef,0x9f,0xe3,0xe5,0x75,0xd7,0x95,0xce,0xa8,0x6d,0xac,
  0x0,0x80,0x16,0xe8,0x77,0xe1,0x33,0x9e,0x80,0x58,0x11,0xc0,0x86,0xf4,0xfb,0xfa,
  0x87,0xc5,0x50,0xf8,0xb3,0x30,0xeb,0x57,0x4,0x44,0x44,0xc4,0x9,0x27,0x64,0xd4,
  0x80,0xa7,0x6,0xa3,0x1b,0x9b,0x6f,0x78,0x43,0xe9,0x4c,0xda,0xaa,0xfa,0x3b,0xbf,
  0x56,0x0,0x8c,0x8f,0x4c,0x5f,0x9d,0x85,0x8f,0x15,0x1,0xa4,0x3a,0xaf,0x7f,0x98,
  0xb,0x85,0x3f,0x93,0x65,0x45,0x0,0xf5,0x59,0xbd,0x3a,0xc7,0xcf,0x5f,0xfa,0xa5,
  0xd2,0x99,0xb4,0x8d,0x15,0x0,0x50,0x40,0xdd,0x85,0x8f,0x15,0x1,0xb5,0xab,0xfb,
  0xfa,0x87,0x8d,0x51,0xf8,0xd3,0xc,0x2b,0x2,0xa8,0xcf,0x41,0x7,0xe5,0x7c,0xe3,
  0x39,0xcf,0x29,0x9d,0x49,0xdb,0x68,0x0,0xc0,0x14,0x29,0x7c,0x1e,0x4f,0x23,0xa0,
  0x36,0xae,0x7f,0x98,0x8d,0xc2,0x9f,0xe9,0xd0,0x8,0xa0,0x2a,0x83,0x88,0x88,0x37,
  0xbe,0xb1,0x74,0x1a,0x6d,0x53,0xfd,0xd2,0x6f,0x8f,0x0,0x8c,0x8f,0x34,0x47,0xe1,
  0x33,0x17,0x1e,0xd,0xe8,0x2b,0xd7,0x3f,0xcc,0x46,0xe1,0x4f,0x59,0x39,0x3e,0x8f,
  0xc6,0xe3,0x15,0x2b,0x72,0x9c,0xde,0x75,0xd7,0xd2,0x79,0xc1,0xe4,0xfc,0xec,0x67,
  0x39,0xbe,0xee,0xb3,0x4f,0xe9,0x4c,0xda,0xc2,0xa,0x0,0x68,0x90,0xc2,0x67,0x3e,
  0xac,0x8,0xe8,0x1b,0xd7,0x3f,0xcc,0x46,0xe1,0x4f,0x3b,0xe4,0xf7,0xa5,0xaf,0x5a,
  0x95,0xe3,0xf4,0xb1,0xc7,0xe6,0xab,0x1a,0xf0,0xf4,0xc9,0xde,0x7b,0xe7,0xbc,0x72,
  0xef,0xbd,0x4b,0x67,0xd2,0x16,0x1a,0x0,0xd0,0x0,0x85,0xcf,0x62,0x68,0x4,0x74,
  0x9d,0xeb,0x1f,0x66,0xa3,0xf0,0xa7,0x9d,0x3c,0x1a,0x40,0xff,0x1d,0x77,0x5c,0xe9,
  0xc,0xda,0x42,0x3,0x0,0x26,0x48,0xe1,0x33,0x49,0x1a,0x1,0x5d,0xe3,0xfa,0x87,
  0xd9,0x28,0xfc,0xe9,0x6,0x8d,0x0,0xfa,0x4b,0x3,0x60,0x44,0x3,0x0,0x26,0x40,
  0xe1,0xd3,0x24,0x8d,0x80,0xb6,0x73,0xfd,0xc3,0x6c,0x14,0xfe,0x74,0x93,0x46,0x0,
  0xbd,0x32,0x8c,0xd0,0x0,0x18,0xd3,0x0,0x80,0x45,0x50,0xf8,0x4c,0x93,0x46,0x40,
  0xdb,0xb8,0xfe,0x61,0x36,0xa,0xff,0xa6,0x8d,0xc6,0x9f,0xfc,0x3c,0xf8,0xc6,0x37,
  0x32,0x1e,0x7e,0x78,0xe9,0xbc,0xfa,0x46,0x23,0x80,0x5e,0x18,0x44,0x44,0xec,0xbb,
  0x6f,0x8e,0x1b,0x7b,0xed,0x55,0x3a,0x9d,0xd2,0x34,0x0,0x60,0x1,0x14,0x3e,0x25,
  0x69,0x4,0x94,0xe6,0xfa,0x87,0xd9,0x28,0xfc,0x9b,0x96,0xe3,0xcf,0xae,0xbb,0xce,
  0x1c,0x7f,0x8e,0x3b,0x2e,0xef,0xf0,0x9d,0x7f,0xfe,0xcc,0x5d,0xed,0x99,0x94,0xf5,
  0x8d,0x80,0x61,0x44,0xc4,0xc9,0x27,0x67,0xbc,0xed,0xb6,0xd2,0x79,0xc1,0xbc,0xc,
  0x22,0x22,0x8e,0x3c,0xb2,0x74,0x1a,0xa5,0x69,0x0,0xc0,0x3c,0x28,0x7c,0xda,0x44,
  0x23,0x60,0xda,0x5c,0xff,0x30,0x1b,0x85,0x7f,0xd3,0x66,0x8e,0x3f,0x2b,0x56,0xe4,
  0xab,0x8f,0x1b,0x7f,0x46,0x5f,0x5f,0x37,0x88,0xb0,0x22,0xa0,0x39,0xbe,0x35,0x80,
  0xee,0xdb,0x7f,0xff,0xd2,0x19,0x94,0xa6,0x1,0x0,0x73,0xa0,0xf0,0x69,0x33,0x8d,
  0x80,0xa6,0xb9,0xfe,0x61,0x36,0xa,0xff,0xa6,0x2d,0x6c,0xfc,0xd9,0x79,0xe7,0x8c,
  0x17,0x5c,0xa0,0x11,0xd0,0xc,0x8f,0x6,0xd0,0x5d,0x7,0x1c,0x50,0x3a,0x83,0xd2,
  0x34,0x0,0x60,0x23,0x14,0x3e,0x5d,0xa2,0x11,0x30,0x69,0xae,0x7f,0x98,0x8d,0xc2,
  0xbf,0x69,0x93,0x19,0x7f,0x34,0x2,0x9a,0xa6,0x11,0x40,0xf7,0x2c,0x5f,0x5e,0x3a,
  0x83,0xd2,0x34,0x0,0x60,0x3,0x14,0x3e,0x5d,0xa6,0x11,0xb0,0x58,0xae,0x7f,0x98,
  0x8d,0xc2,0xbf,0x69,0xcd,0x8c,0x3f,0x1a,0x1,0x4d,0xd3,0x8,0xa0,0x3b,0xac,0x0,
  0x18,0x94,0x4e,0xa0,0xb4,0xfc,0x20,0xc8,0x63,0x8d,0x72,0xc0,0x1e,0x54,0x7f,0x1d,
  0x8c,0x28,0x7c,0xfa,0x68,0x3c,0x21,0xc9,0x2b,0xdd,0x84,0x64,0x36,0xae,0x7f,0x98,
  0x8d,0xc2,0xbf,0x69,0x33,0x37,0xf7,0xdb,0xc0,0x33,0xfe,0x13,0xfb,0x1f,0x8a,0x18,
  0x6f,0x5e,0x77,0xe2,0x89,0xeb,0x9f,0x69,0x67,0xa2,0x66,0x6e,0xc6,0xb8,0x62,0xc5,
  0xfa,0x3d,0x1a,0xa0,0xd,0x86,0x11,0x11,0x3b,0xee,0x98,0xef,0xff,0xbb,0xef,0x2e,
  0x9d,0xce,0xb4,0x59,0x1,0x0,0xa1,0xf0,0xe9,0x37,0x2b,0x2,0x36,0xc5,0xf5,0xf,
  0xb3,0x51,0xf8,0x37,0x6d,0x93,0x9b,0xfb,0x4d,0x9a,0xcd,0x2,0xa7,0xc2,0x66,0x81,
  0xb4,0xdf,0x6e,0xbb,0x95,0xce,0xa0,0x14,0xd,0x0,0xaa,0xa6,0xf0,0xa9,0x89,0x46,
  0xc0,0x13,0xb9,0xfe,0x61,0x36,0xa,0xff,0xa6,0xb5,0x63,0xfc,0xf1,0x68,0x40,0xd3,
  0x3c,0x1a,0x40,0x2b,0xd,0x22,0x22,0x96,0x2e,0x2d,0x9d,0x46,0x29,0x1a,0x0,0xd4,
  0x4d,0xe1,0x53,0xa1,0x51,0x23,0xe0,0xab,0x5f,0x5d,0xbf,0xe4,0xb4,0x32,0x1b,0xfe,
  0x1e,0x6d,0xd7,0x3f,0x8c,0xb,0xff,0xd7,0xbf,0x5e,0xe1,0xdf,0x8c,0x76,0x14,0xfe,
  0x4f,0xa4,0x11,0xd0,0x34,0x8d,0x0,0x5a,0x65,0x18,0x11,0xb1,0xfd,0xf6,0xa5,0xd3,
  0x28,0x45,0x3,0x0,0x8a,0x4f,0x3c,0x28,0xe3,0x90,0x43,0x72,0x2,0x7a,0xd1,0x45,
  0xb5,0xac,0x8,0x98,0xfa,0x52,0x5b,0xe8,0x8c,0x27,0xde,0xf1,0x3f,0xfb,0xec,0xd2,
  0x19,0xf5,0x4d,0x3b,0xb,0xff,0x27,0xd2,0x8,0x68,0x9a,0x46,0x0,0xad,0x60,0x5,
  0x0,0x40,0xcd,0xfa,0xff,0x68,0x40,0x37,0x26,0xde,0x50,0x82,0xa5,0xfe,0x4d,0xeb,
  0xe6,0xf8,0xa3,0x11,0xd0,0x34,0x8d,0x0,0x8a,0x1a,0x46,0x68,0x0,0x0,0x54,0xaf,
  0x7f,0x8d,0x80,0x6e,0x4e,0xbc,0x61,0x1a,0x14,0xfe,0x4d,0xeb,0xc7,0xa3,0x46,0x3b,
  0xef,0x9c,0x85,0xc2,0xf9,0xe7,0xcf,0xdc,0xd5,0x9e,0x49,0x59,0xdf,0x8,0x18,0x46,
  0x44,0x9c,0x7c,0xf2,0xcc,0x6f,0x69,0x80,0x86,0xc,0x22,0x3c,0x2,0x0,0xc0,0x3a,
  0xdd,0x6f,0x4,0x28,0xfc,0x61,0x36,0xa,0xff,0xa6,0xf5,0xee,0x51,0x23,0xdf,0x1a,
  0x30,0x15,0xbe,0x35,0x80,0xa9,0x1a,0x46,0x8c,0x3f,0xf,0xea,0xa3,0x1,0x0,0xb0,
  0x41,0xdd,0x6b,0x4,0x28,0xfc,0x61,0x36,0xa,0xff,0xa6,0xd5,0x31,0xfe,0x78,0x34,
  0xa0,0x69,0x1e,0xd,0x60,0x2a,0x6,0x11,0x11,0xf7,0xdc,0x53,0x3a,0x8d,0x52,0x34,
  0x0,0x0,0x36,0xaa,0xfd,0x8d,0x80,0x3a,0x26,0xde,0xb0,0x10,0xa,0xff,0xa6,0xd5,
  0x39,0xfe,0x68,0x4,0x34,0x4d,0x23,0x80,0x46,0xd,0x23,0x22,0xee,0xbd,0xb7,0x74,
  0x1a,0xa5,0x68,0x0,0x0,0xcc,0x49,0xfb,0x1a,0x1,0x75,0x4e,0xbc,0x61,0x2e,0x14,
  0xfe,0x4d,0x33,0xfe,0x44,0x68,0x4,0x34,0x4f,0x23,0x80,0x46,0xc,0x22,0x34,0x0,
  0x0,0x98,0xa3,0xf2,0x8d,0x0,0x13,0x6f,0x98,0x8d,0xc2,0xbf,0x69,0xc6,0x9f,0xd,
  0xd1,0x8,0x68,0x9a,0x46,0x0,0x93,0xe7,0x11,0x0,0x0,0xe6,0x65,0xfa,0x8d,0x0,
  0x13,0x6f,0x98,0x8d,0xc2,0xbf,0x69,0xfd,0xd8,0xd5,0xbf,0x69,0xbe,0x35,0xa0,0x69,
  0xbe,0x35,0x80,0x89,0x18,0x46,0xd4,0xdc,0x0,0x18,0x94,0x4e,0xa0,0xb4,0x9c,0xb8,
  0xe7,0xb1,0x46,0x39,0x90,0xe,0xaa,0xbd,0xe,0x6a,0xff,0xfb,0x33,0x49,0xe3,0x3b,
  0x13,0xf9,0x8e,0x9a,0xdc,0x9d,0x9,0x85,0x3f,0xcc,0x46,0xe1,0xdf,0x34,0xe3,0xcf,
  0x62,0xdc,0x71,0x47,0xc6,0x93,0x4e,0xca,0xeb,0xf3,0x92,0x4b,0x4a,0x67,0xd4,0x37,
  0x39,0x83,0x1b,0x37,0xe4,0x33,0x96,0x7f,0x44,0x8f,0x36,0x7b,0xf8,0xe1,0x6c,0x0,
  0x6c,0xb7,0x5d,0x7e,0xfb,0xc4,0xa3,0x8f,0x96,0xce,0x68,0xda,0xac,0x0,0x0,0x98,
  0x88,0xc9,0xaf,0x8,0x30,0xf1,0x86,0xd9,0x28,0xfc,0x9b,0x66,0xfc,0x99,0x4,0x8f,
  0x6,0x34,0xcd,0xa3,0x1,0xcc,0xdf,0xf5,0xd7,0xd7,0x5a,0xf8,0x8f,0x68,0x0,0x0,
  0x4c,0xd4,0xe2,0x1b,0x1,0x26,0xde,0x30,0x1b,0x85,0x7f,0xd3,0x8c,0x3f,0x4d,0xd0,
  0x8,0x68,0x9a,0x46,0x0,0x73,0x77,0xf5,0xd5,0xa5,0x33,0x28,0x4d,0x3,0x0,0xa0,
  0x11,0xf3,0x6f,0x4,0x98,0x78,0xc3,0x6c,0x14,0xfe,0x4d,0x33,0xfe,0x4c,0x83,0x46,
  0x40,0xd3,0x34,0x2,0xd8,0xa8,0x61,0x44,0xc4,0x35,0xd7,0x94,0x4e,0xa3,0x34,0xd,
  0x0,0x80,0x46,0x6d,0xba,0x11,0x60,0xe2,0xd,0xb3,0x51,0xf8,0x37,0xcd,0xf8,0x53,
  0x82,0x46,0x40,0xd3,0x34,0x2,0xd8,0xa0,0x41,0x84,0x6,0x80,0x6,0x0,0xc0,0x94,
  0x3c,0xb9,0x11,0x60,0xe2,0xd,0xb3,0x51,0xf8,0x37,0xcd,0xae,0xfe,0x6d,0xe0,0x5b,
  0x3,0x9a,0xe6,0x5b,0x3,0x78,0xb2,0x51,0x63,0xa8,0x5e,0xd5,0xee,0xfe,0x3e,0x52,
  0xfb,0x2e,0xf0,0xbe,0x5,0x60,0x7c,0x84,0xe9,0x5a,0xb5,0x6a,0xe6,0xb9,0x89,0x1f,
  0x8c,0xb,0xff,0xd7,0xbf,0x3e,0x3f,0x99,0xce,0x3e,0xbb,0x74,0x46,0x7d,0xa3,0xf1,
  0xd8,0x66,0xbe,0x35,0xa0,0x69,0xbe,0x35,0xa0,0x66,0xf,0x3f,0x9c,0x71,0xe7,0x9d,
  0xf3,0xfd,0x75,0xff,0xfd,0xa5,0x33,0x2a,0xa5,0xda,0xc2,0x6f,0xa4,0xf6,0x2,0x50,
  0x3,0x60,0x7c,0x4,0xa0,0x14,0x77,0xfc,0x9b,0xa6,0xf0,0xef,0x12,0x8d,0x80,0xa6,
  0x69,0x4,0xd4,0xe8,0xe2,0x8b,0xf3,0xfd,0xf4,0xc2,0x17,0x96,0xce,0xa4,0x34,0x8f,
  0x0,0x0,0x0,0x85,0x28,0xfc,0x9b,0xa6,0xf0,0xef,0x22,0x7b,0x4,0x34,0xcd,0x1e,
  0x1,0x35,0xfa,0xe6,0x37,0x4b,0x67,0xd0,0x16,0x1a,0x0,0x0,0xc0,0x94,0x29,0xfc,
  0x9b,0xa6,0xf0,0xef,0x3,0x8d,0x80,0xa6,0x69,0x4,0x54,0x62,0x18,0xa1,0x1,0x30,
  0x56,0xed,0xd2,0xef,0x91,0xda,0x97,0x80,0x7b,0x4,0x60,0x7c,0x4,0xa0,0x69,0xa,
  0xff,0xa6,0x29,0xfc,0xfb,0xcc,0xa3,0x1,0x4d,0xf3,0x68,0x40,0x1f,0x3d,0xfa,0x68,
  0x36,0x0,0x76,0xd9,0x65,0xb0,0x24,0x22,0xe2,0x9e,0x7b,0x4a,0x67,0x54,0x9a,0x15,
  0x0,0x0,0x40,0xc3,0x14,0xfe,0x4d,0xb3,0xab,0x7f,0xd,0x7c,0x6b,0x40,0xd3,0x7c,
  0x6b,0x40,0x1f,0x7d,0xeb,0x5b,0xa,0xff,0x99,0x34,0x0,0x0,0x80,0x86,0x28,0xfc,
  0x9b,0x36,0xf3,0x8e,0xff,0x8a,0x15,0xf9,0xaa,0xc2,0xb0,0xb7,0x6,0x11,0xe3,0x46,
  0xcf,0x37,0xbe,0xe1,0xd1,0x80,0x66,0x64,0xc1,0xb8,0x6a,0x55,0xfe,0x9e,0x8f,0x3d,
  0x36,0x5f,0xf5,0x68,0x40,0xe7,0xc,0x23,0x22,0x3e,0xfd,0xe9,0xd2,0x69,0xb4,0x4d,
  0xb5,0x4b,0xbf,0x47,0x6a,0x5f,0x2,0xee,0x11,0x80,0xf1,0x11,0x80,0x49,0x51,0xf8,
  0x37,0xcd,0x52,0x7f,0xc6,0x3c,0x1a,0xd0,0x34,0x8f,0x6,0x74,0xd1,0xe8,0x6b,0xff,
  0xf6,0xd8,0x23,0xdf,0x17,0x6b,0xd6,0x94,0xce,0xa8,0x2d,0xac,0x0,0x0,0x0,0x26,
  0x44,0xe1,0xdf,0x34,0x85,0x3f,0x4f,0x66,0xb3,0xc0,0xa6,0xd9,0x2c,0xb0,0x8b,0xce,
  0x3b,0x4f,0xe1,0xbf,0x61,0x1a,0x0,0x0,0xc0,0x22,0x29,0xfc,0x9b,0xa6,0xf0,0x67,
  0xd3,0x34,0x2,0x9a,0xa6,0x11,0xd0,0x25,0x9f,0xf9,0x4c,0xe9,0xc,0xda,0xaa,0xda,
  0xa5,0xdf,0x23,0xb5,0x2f,0x1,0xf7,0x8,0xc0,0xf8,0x8,0xc0,0x7c,0x29,0xfc,0x9b,
  0x36,0x73,0x73,0x3f,0xcf,0xf8,0x33,0x47,0x33,0x36,0xaf,0x3b,0xf1,0xc4,0xf5,0xcf,
  0xb4,0x33,0x51,0x33,0x37,0x63,0x5c,0xb1,0x62,0xfd,0x1e,0xd,0x14,0x74,0xf7,0xdd,
  0x19,0x77,0xdf,0x3d,0x3f,0x97,0x1e,0x78,0xa0,0x74,0x46,0x6d,0x63,0x5,0x0,0x0,
  0x30,0x4f,0xa,0xff,0xa6,0xd9,0xdc,0x8f,0x45,0xb1,0x59,0xe0,0x54,0xd8,0x2c,0xb0,
  0x65,0x86,0x11,0x11,0x1f,0xfb,0x98,0xc2,0x7f,0xe3,0xaa,0xbd,0xf3,0x3b,0x52,0xfb,
  0x1d,0x60,0x2b,0x0,0xc6,0x47,0x0,0x36,0x45,0xe1,0xdf,0x34,0x4b,0xfd,0x69,0x8e,
  0xcd,0x2,0x9b,0x66,0xb3,0xc0,0x92,0x1e,0x7a,0x28,0xe3,0xbe,0xfb,0xe6,0xf5,0x7d,
  0xd3,0x4d,0xa5,0x33,0x6a,0x2b,0x2b,0x0,0x0,0x80,0x4d,0x50,0xf8,0x37,0x4d,0xe1,
  0x4f,0xf3,0xec,0x11,0xd0,0x34,0x7b,0x4,0x14,0x32,0x8c,0x88,0xf8,0xe4,0x27,0x15,
  0xfe,0x73,0x53,0xed,0x9d,0xdf,0x91,0xda,0xef,0x0,0x5b,0x1,0x30,0x3e,0x2,0xf0,
  0x44,0xa,0xff,0xa6,0x29,0xfc,0x29,0xc7,0x8a,0x80,0xa6,0x59,0x11,0x30,0xd,0x6b,
  0xd7,0x66,0x7c,0xd6,0xb3,0x66,0x36,0x60,0x98,0x8d,0x15,0x0,0x0,0xc0,0x13,0x28,
  0xfc,0x9b,0xa6,0xf0,0xa7,0x3c,0x2b,0x2,0x9a,0x66,0x45,0xc0,0x34,0x9c,0x73,0x8e,
  0xc2,0x7f,0x7e,0xaa,0xbd,0xf3,0x3b,0x52,0xfb,0x1d,0x60,0x2b,0x0,0xc6,0x47,0x0,
  0x14,0xfe,0x4d,0xb3,0xab,0x3f,0xad,0xe4,0x5b,0x3,0xa6,0xc2,0xb7,0x6,0x4c,0xd2,
  0xe8,0xce,0xff,0xe1,0x87,0xe7,0xe7,0xd5,0xf,0x7f,0x58,0x3a,0xa3,0xae,0xb0,0x2,
  0x0,0x0,0xaa,0xa7,0xf0,0x6f,0x9a,0x5d,0xfd,0x69,0x35,0xdf,0x1a,0x30,0x15,0xbe,
  0x35,0x60,0x92,0x3e,0xfe,0x71,0x85,0xff,0xc2,0x54,0x7b,0xe7,0x77,0xa4,0xf6,0x3b,
  0xc0,0x56,0x0,0x8c,0x8f,0x0,0xf5,0x51,0xf8,0x37,0xcd,0x1d,0x7f,0x3a,0xc9,0x8a,
  0x80,0xa9,0xb0,0x22,0x60,0x21,0xee,0xbd,0x37,0xe3,0x81,0x7,0xda,0xf4,0x6f,0x61,
  0xac,0x0,0x0,0x80,0xea,0x28,0xfc,0x9b,0xe6,0x8e,0x3f,0x9d,0x66,0x45,0xc0,0x54,
  0x58,0x11,0xb0,0x10,0xef,0x7d,0xaf,0xc2,0x7f,0x71,0xaa,0xbd,0xf3,0x3b,0x52,0xfb,
  0x1d,0x60,0x2b,0x0,0xc6,0x47,0x80,0xfe,0x53,0xf8,0x37,0xcd,0xe6,0x7e,0xf4,0x97,
  0x6f,0xd,0x68,0x9a,0x6f,0xd,0xd8,0x98,0x55,0xab,0x72,0x65,0xca,0x11,0x47,0x64,
  0xe3,0x64,0xf4,0x79,0xc6,0x7c,0x59,0x1,0x0,0x0,0xbd,0xa7,0xf0,0x6f,0xda,0xcc,
  0xa5,0xfe,0xa,0x7f,0xfa,0x68,0xe7,0x9d,0xb3,0x0,0x3b,0xff,0xfc,0x99,0x4b,0xd7,
  0x99,0x94,0xf5,0xbb,0xd9,0xf,0x23,0x22,0x4e,0x3e,0x79,0xe6,0xa3,0x18,0xb5,0x1a,
  0x7d,0x7e,0xfd,0xe6,0x6f,0x2a,0xfc,0x27,0x43,0x3,0x0,0x0,0x7a,0x4b,0xe1,0xdf,
  0x34,0x4b,0xfd,0xa9,0x8a,0x47,0x3,0xa6,0xc2,0xa3,0x1,0xeb,0xc,0x23,0x22,0xde,
  0xff,0x7e,0x2b,0x4e,0x26,0xab,0xda,0xa5,0xdf,0x23,0xb5,0x2f,0x1,0xf7,0x8,0xc0,
  0xf8,0x8,0xd0,0x1f,0xa,0xff,0xa6,0xd9,0xdc,0xf,0xc2,0x66,0x81,0x53,0x52,0xe7,
  0x66,0x81,0xdf,0xf9,0x4e,0xc6,0x63,0x8f,0xcd,0xcf,0xb1,0xc7,0x1e,0x2b,0x9d,0x51,
  0x5f,0x54,0x5b,0xf8,0x8d,0xd4,0x5e,0x0,0x6a,0x0,0x8c,0x8f,0x0,0xdd,0xa7,0xf0,
  0x6f,0x9a,0x67,0xfc,0x61,0x36,0xf6,0x8,0x68,0x5a,0x1d,0x7b,0x4,0xac,0x59,0x93,
  0xf1,0x88,0x23,0xf2,0x3a,0xba,0xfe,0xfa,0xd2,0x19,0xf5,0x8d,0x47,0x0,0x0,0xa0,
  0xf3,0x14,0xfe,0x4d,0x53,0xf8,0xc3,0xa6,0xec,0xbc,0x73,0xc6,0xb,0x2e,0xf0,0x68,
  0x40,0x33,0xd6,0xef,0x11,0x10,0x11,0x11,0x27,0x9c,0x90,0xb1,0x2f,0x8f,0x6,0xac,
  0x5d,0x9b,0xf1,0x4d,0x6f,0x52,0xf8,0x37,0x4b,0x3,0x0,0x0,0x3a,0x4b,0xe1,0xdf,
  0x34,0x9b,0xfb,0xc1,0x7c,0xd9,0x2c,0xb0,0x69,0xfd,0xdc,0x2c,0xf0,0x8f,0xfe,0x28,
  0xff,0x5d,0xe7,0x9f,0x5f,0x3a,0x93,0xbe,0xab,0x76,0xe9,0xf7,0x48,0xed,0x4b,0xc0,
  0x3d,0x2,0x30,0x3e,0x2,0x74,0x87,0xc2,0xbf,0x69,0xee,0xf8,0xc3,0xa4,0x78,0x34,
  0xa0,0x69,0xdd,0x7e,0x34,0xe0,0xe3,0x1f,0xcf,0xeb,0xe2,0x37,0x7f,0xb3,0x74,0x26,
  0xb5,0xa8,0xb6,0xf0,0x1b,0xa9,0xbd,0x0,0xd4,0x0,0x18,0x1f,0x1,0xda,0x4f,0xe1,
  0xdf,0x34,0x9b,0xfb,0x41,0x3,0x6c,0x16,0x38,0x15,0x9d,0xd9,0x2c,0x70,0x18,0x11,
  0x71,0xc1,0x5,0x79,0xf2,0xb2,0x97,0xf9,0x7a,0xbf,0xe9,0xaa,0xb6,0xf0,0x1b,0xa9,
  0xbd,0x0,0xd4,0x0,0x18,0x1f,0x1,0xda,0x4b,0xe1,0xdf,0x34,0x77,0xfc,0x61,0x5a,
  0xac,0x8,0x68,0x5a,0x6b,0x57,0x4,0xc,0x23,0x22,0xbe,0xfb,0xdd,0x3c,0x39,0xe9,
  0xa4,0x2c,0xfc,0xef,0xbd,0xb7,0x74,0x5a,0xb5,0xb1,0x7,0x0,0x0,0xb4,0x96,0xc2,
  0xbf,0x69,0xa,0x7f,0x98,0x36,0x9b,0x5,0x36,0xad,0x9d,0x9b,0x5,0xae,0x5a,0x95,
  0xe3,0xec,0xe8,0x8e,0xbf,0xc2,0xbf,0x14,0xd,0x0,0x0,0x68,0x1d,0x85,0x7f,0xd3,
  0x14,0xfe,0x50,0x9a,0x46,0x40,0xd3,0xda,0xd1,0x8,0x58,0xb5,0x2a,0xef,0xfc,0x9f,
  0x78,0x62,0xe6,0x33,0xfa,0x9a,0x3f,0x4a,0xd1,0x0,0x0,0x80,0xd6,0x50,0xf8,0x37,
  0x4d,0xe1,0xf,0x6d,0xa3,0x11,0xd0,0xb4,0x32,0x8d,0x80,0xc7,0x15,0xfe,0x4b,0x22,
  0xba,0xff,0x2d,0x5,0xfd,0xa1,0x1,0x0,0x0,0xc5,0x29,0xfc,0x9b,0xa6,0xf0,0x87,
  0xb6,0xd3,0x8,0x68,0xda,0x74,0x1a,0x1,0xa,0xff,0xb6,0xd3,0x0,0x0,0x80,0x62,
  0x14,0xfe,0x4d,0x53,0xf8,0x43,0xd7,0x68,0x4,0x34,0xad,0x99,0x46,0x80,0xc2,0xbf,
  0x2b,0x34,0x0,0x0,0x60,0xea,0x14,0xfe,0x4d,0x53,0xf8,0x43,0xd7,0x69,0x4,0x34,
  0x6d,0x32,0x8d,0x0,0x85,0x7f,0xd7,0x68,0x0,0x0,0xc0,0xd4,0x28,0xfc,0x9b,0xa6,
  0xf0,0x87,0xbe,0xd1,0x8,0x68,0xda,0xc2,0x1a,0x1,0xa,0xff,0xae,0xd2,0x0,0x0,
  0x80,0xc6,0x29,0xfc,0x9b,0xa6,0xf0,0x87,0xbe,0xd3,0x8,0x68,0xda,0xdc,0x1a,0x1,
  0xa,0xff,0xae,0xd3,0x0,0x0,0x80,0xc6,0x28,0xfc,0x9b,0x96,0x85,0xff,0xae,0xbb,
  0x2a,0xfc,0xa1,0x16,0x3b,0xef,0x9c,0x5,0xe8,0xf9,0xe7,0xe7,0xfb,0xdf,0xfb,0x7d,
  0xd2,0xd6,0x37,0x2,0x86,0x11,0x11,0x27,0x9f,0x9c,0x71,0xe5,0x4a,0x85,0x7f,0x3f,
  0xc,0x4a,0x27,0x50,0x5a,0x76,0x10,0xf3,0x58,0xa3,0x7c,0x83,0xf,0xaa,0xbd,0xe,
  0x6a,0xff,0xfb,0x3,0x4d,0x51,0xf8,0x37,0xcd,0x1d,0x7f,0x20,0xdd,0x71,0x47,0xc6,
  0x93,0x4e,0xca,0xf1,0xf6,0x92,0x4b,0x4a,0x67,0x4,0x6d,0x66,0x5,0x0,0x0,0x4c,
  0x8c,0xc2,0xbf,0x69,0xa,0x7f,0x60,0x26,0x8f,0x6,0xc0,0x7c,0x68,0x0,0x0,0xc0,
  0xa2,0x29,0xfc,0x9b,0xa6,0xf0,0x7,0x36,0x4e,0x23,0x0,0xe6,0x42,0x3,0x0,0x0,
  0x16,0x4c,0xe1,0xdf,0x34,0x85,0x3f,0x30,0x3f,0x1a,0x1,0xb0,0x31,0x1a,0x0,0x0,
  0x30,0x6f,0xa,0xff,0xa6,0x29,0xfc,0x81,0xc5,0xd1,0x8,0x80,0xd,0xd1,0x0,0x0,
  0x80,0x39,0x53,0xf8,0x37,0x4d,0xe1,0xf,0x4c,0x96,0x46,0x0,0x3c,0x9e,0x6,0x0,
  0x0,0x6c,0x92,0xc2,0xbf,0x69,0xa,0x7f,0xa0,0x59,0x1a,0x1,0x10,0xa1,0x1,0x0,
  0x0,0x1b,0xa1,0xf0,0x6f,0x9a,0xc2,0x1f,0x98,0x2e,0x8d,0x0,0xea,0xa6,0x1,0x0,
  0x0,0x4f,0xa2,0xf0,0x6f,0x9a,0xc2,0x1f,0x28,0x4b,0x23,0x80,0x3a,0x69,0x0,0x0,
  0xc0,0x7a,0xa,0xff,0xa6,0x29,0xfc,0x81,0x76,0xd1,0x8,0xa0,0x2e,0x1a,0x0,0x0,
  0xa0,0xf0,0x6f,0x9c,0xc2,0x1f,0x68,0x37,0x8d,0x0,0xea,0xa0,0x1,0x0,0x40,0xc5,
  0x14,0xfe,0x4d,0x53,0xf8,0x3,0xdd,0xa2,0x11,0x40,0xbf,0x69,0x0,0x0,0x50,0x21,
  0x85,0x7f,0xd3,0x14,0xfe,0x40,0xb7,0x69,0x4,0xd0,0x4f,0x1a,0x0,0x0,0x54,0x44,
  0xe1,0xdf,0x34,0x85,0x3f,0xd0,0x2f,0x1a,0x1,0xf4,0x8b,0x6,0x0,0x0,0x15,0x50,
  0xf8,0x37,0x4d,0xe1,0xf,0xf4,0x9b,0x46,0x0,0xfd,0xa0,0x1,0x0,0x40,0x8f,0x29,
  0xfc,0x9b,0xa6,0xf0,0x7,0xea,0xa2,0x11,0x40,0xb7,0x69,0x0,0x0,0xd0,0x43,0xa,
  0xff,0xa6,0x29,0xfc,0x81,0xba,0x69,0x4,0xd0,0x4d,0x1a,0x0,0x0,0xf4,0x88,0xc2,
  0xbf,0x69,0xa,0x7f,0x80,0xc7,0xd3,0x8,0xa0,0x5b,0x34,0x0,0x0,0xe8,0x1,0x85,
  0x7f,0xd3,0x14,0xfe,0x0,0x1b,0xa3,0x11,0x40,0x37,0x68,0x0,0x0,0xd0,0x61,0xa,
  0xff,0xa6,0x29,0xfc,0x1,0xe6,0x43,0x23,0x80,0x76,0xd3,0x0,0x0,0xa0,0x83,0x14,
  0xfe,0x4d,0x53,0xf8,0x3,0x2c,0x86,0x46,0x0,0xed,0xa4,0x1,0x0,0x40,0x87,0x28,
  0xfc,0x9b,0xa6,0xf0,0x7,0x98,0x24,0x8d,0x0,0xda,0x45,0x3,0x0,0x80,0xe,0x50,
  0xf8,0x37,0x2d,0xb,0xff,0x5d,0x77,0x55,0xf8,0x3,0x34,0x61,0xe7,0x9d,0x63,0x18,
  0x11,0xf1,0xa1,0xf,0x95,0xce,0x84,0xba,0x69,0x0,0x0,0xd0,0x62,0xa,0xff,0xa6,
  0xcd,0xbc,0xe3,0xbf,0x62,0x45,0xbe,0xaa,0xf0,0x7,0x98,0xac,0x55,0xab,0x32,0xbe,
  0xee,0x75,0xa5,0x33,0xa1,0x6e,0x1a,0x0,0x0,0xb4,0x90,0xc2,0xbf,0x69,0x96,0xfa,
  0x3,0x4c,0xc3,0xaa,0x55,0x79,0xe7,0xff,0xc4,0x13,0x7,0x4b,0x22,0x22,0x6e,0xbb,
  0xad,0x74,0x46,0xd4,0x4d,0x3,0x0,0x80,0x16,0x51,0xf8,0x37,0x4d,0xe1,0xf,0x30,
  0xd,0xa,0x7f,0xda,0x49,0x3,0x0,0x80,0x16,0x50,0xf8,0x37,0x4d,0xe1,0xf,0x30,
  0xd,0xa,0x7f,0xda,0x4d,0x3,0x0,0x80,0x82,0x14,0xfe,0x4d,0x53,0xf8,0x3,0x4c,
  0x83,0xc2,0x9f,0x6e,0xd0,0x0,0x0,0xa0,0x0,0x85,0x7f,0xd3,0x14,0xfe,0x0,0xd3,
  0xa0,0xf0,0xa7,0x5b,0x34,0x0,0x0,0x98,0x22,0x85,0x7f,0xd3,0x14,0xfe,0x0,0xd3,
  0xa0,0xf0,0xa7,0x9b,0x34,0x0,0x0,0x98,0x2,0x85,0x7f,0xd3,0x14,0xfe,0x0,0xd3,
  0xa0,0xf0,0xa7,0xdb,0x34,0x0,0x0,0x68,0x90,0xc2,0xbf,0x69,0xa,0x7f,0x80,0x69,
  0x50,0xf8,0xd3,0xf,0x1a,0x0,0x0,0x34,0x40,0xe1,0xdf,0x34,0x85,0x3f,0xc0,0x34,
  0x28,0xfc,0xe9,0x17,0xd,0x0,0x0,0x26,0x48,0xe1,0xdf,0x34,0x85,0x3f,0xc0,0x34,
  0x28,0xfc,0xe9,0x27,0xd,0x0,0x0,0x26,0x40,0xe1,0xdf,0x34,0x85,0x3f,0xc0,0x34,
  0x28,0xfc,0xe9,0x37,0xd,0x0,0x0,0x16,0x41,0xe1,0xdf,0x34,0x85,0x3f,0xc0,0x34,
  0x28,0xfc,0xa9,0x83,0x6,0x0,0x0,0xb,0xa0,0xf0,0x6f,0x9a,0xc2,0x1f,0x60,0x1a,
  0x14,0xfe,0xd4,0x45,0x3,0x0,0x80,0x79,0x50,0xf8,0x37,0x4d,0xe1,0xf,0x30,0xd,
  0xa,0x7f,0xea,0xa4,0x1,0x0,0xc0,0x1c,0x28,0xfc,0x9b,0xa6,0xf0,0x7,0x98,0x6,
  0x85,0x3f,0x75,0xd3,0x0,0x0,0x60,0x23,0x14,0xfe,0x4d,0x53,0xf8,0x3,0x4c,0x83,
  0xc2,0x1f,0x22,0x34,0x0,0x0,0xd8,0x20,0x85,0x7f,0xd3,0x14,0xfe,0x0,0xd3,0xa0,
  0xf0,0x87,0xc7,0xd3,0x0,0x0,0xe0,0x71,0x14,0xfe,0x4d,0x53,0xf8,0x3,0x4c,0x83,
  0xc2,0x1f,0x36,0x44,0x3,0x0,0x80,0x50,0xf8,0x37,0x4f,0xe1,0xf,0x30,0xd,0xa,
  0x7f,0xd8,0x18,0xd,0x0,0x80,0xaa,0x29,0xfc,0x9b,0xa6,0xf0,0x7,0x98,0x6,0x85,
  0x3f,0xcc,0x85,0x6,0x0,0x40,0x95,0x14,0xfe,0x4d,0x53,0xf8,0x3,0x4c,0x83,0xc2,
  0x1f,0xe6,0x43,0x3,0x0,0xa0,0x2a,0xa,0xff,0xa6,0x29,0xfc,0x1,0xa6,0x41,0xe1,
  0xf,0xb,0xa1,0x1,0x0,0x50,0x5,0x85,0x7f,0xd3,0x14,0xfe,0x0,0xd3,0xa0,0xf0,
  0x87,0xc5,0xd0,0x0,0x0,0xe8,0x35,0x85,0x7f,0xd3,0x14,0xfe,0x0,0xd3,0xa0,0xf0,
  0x87,0x49,0xd8,0xbc,0x74,0x2,0x50,0x52,0x16,0x44,0x79,0x4,0x98,0xf,0x85,0x3f,
  0xc0,0x34,0x28,0xfc,0x61,0x92,0xac,0x0,0x0,0x80,0x79,0x50,0xf8,0x3,0x4c,0x83,
  0xc2,0x1f,0x9a,0xa0,0x1,0x0,0x0,0x73,0xa0,0xf0,0x7,0x98,0x6,0x85,0x3f,0x34,
  0x49,0x3,0x0,0x0,0x36,0x42,0xe1,0xf,0x30,0xd,0xa,0x7f,0x98,0x6,0xd,0x0,
  0x0,0xd8,0x0,0x85,0x3f,0xc0,0x34,0x28,0xfc,0x61,0x9a,0x34,0x0,0x0,0xe0,0x71,
  0x14,0xfe,0x0,0xd3,0xa0,0xf0,0x87,0x12,0x34,0x0,0x0,0x20,0x14,0xfe,0x0,0xd3,
  0xa1,0xf0,0x87,0x92,0x34,0x0,0x0,0xa8,0x9a,0xc2,0x1f,0x60,0x1a,0x14,0xfe,0xd0,
  0x6,0x1a,0x0,0x0,0x54,0x49,0xe1,0xf,0x30,0xd,0xa,0x7f,0x68,0x13,0xd,0x0,
  0x0,0xaa,0xa2,0xf0,0x7,0x98,0x6,0x85,0x3f,0xb4,0x91,0x6,0x0,0x0,0x55,0x50,
  0xf8,0x3,0x4c,0x83,0xc2,0x1f,0xda,0x4c,0x3,0x0,0x80,0x5e,0x53,0xf8,0x3,0x4c,
  0x83,0xc2,0x1f,0xba,0x40,0x3,0x0,0x80,0x5e,0x52,0xf8,0x3,0x4c,0x83,0xc2,0x1f,
  0xba,0x44,0x3,0x0,0x80,0x5e,0x51,0xf8,0x3,0x4c,0x83,0xc2,0x1f,0xba,0x48,0x3,
  0x0,0x80,0x5e,0x50,0xf8,0x3,0x4c,0x83,0xc2,0x1f,0xba,0x4c,0x3,0x0,0x80,0x4e,
  0x53,0xf8,0x3,0x4c,0x83,0xc2,0x1f,0xfa,0x40,0x3,0x20,0x22,0x22,0x1e,0x79,0xa4,
  0x74,0x6,0xa5,0xe4,0xc4,0x79,0x8b,0x2d,0x4a,0xe7,0x1,0x30,0x5f,0xa,0x7f,0x80,
  0x69,0x50,0xf8,0x43,0x9f,0x68,0x0,0x44,0x44,0xc4,0x3d,0xf7,0x94,0xce,0xa0,0x98,
  0x41,0x44,0xc4,0x76,0xdb,0x95,0x4e,0x3,0x60,0xae,0xb2,0xf0,0xdf,0x75,0x57,0x85,
  0x3f,0x40,0x93,0x14,0xfe,0xd0,0x47,0x1a,0x0,0x11,0x11,0x71,0xdf,0x7d,0xa5,0x33,
  0x28,0x6b,0xd9,0xb2,0xd2,0x19,0x0,0x6c,0xca,0xcc,0x3b,0xfe,0x2b,0x56,0xe4,0xab,
  0xa,0x7f,0x80,0xc9,0x52,0xf8,0x43,0x9f,0x69,0x0,0x44,0x44,0xd5,0x2b,0x0,0x22,
  0x22,0x62,0xf9,0xf2,0xd2,0x19,0x0,0xcc,0xc6,0x1d,0x7f,0x80,0x69,0x50,0xf8,0x43,
  0xd,0x34,0x0,0x22,0x22,0xe2,0xde,0x7b,0x4b,0x67,0x50,0xcc,0x30,0x22,0xe2,0xa8,
  0xa3,0x4a,0xa7,0x1,0xf0,0x44,0xc3,0x61,0x44,0xc4,0x53,0x9e,0xe2,0x8e,0x3f,0x40,
  0x93,0x14,0xfe,0x50,0x13,0xd,0x80,0x88,0x88,0xb8,0xe5,0x96,0xd2,0x19,0x14,0x33,
  0x88,0x88,0x78,0xf1,0x8b,0x4b,0xa7,0x1,0x30,0x32,0x73,0x73,0xd2,0x2f,0x7c,0x21,
  0xa3,0xc2,0x1f,0x60,0xb2,0x14,0xfe,0x50,0x23,0xd,0x80,0x61,0x44,0xc4,0x35,0xd7,
  0x94,0x4e,0xa3,0xac,0xc3,0xf,0xcf,0x9,0xf7,0xfe,0xfb,0x97,0xce,0x4,0x20,0xfd,
  0xb7,0xff,0x96,0xf1,0xb8,0xe3,0x4a,0x67,0x2,0xd0,0x2f,0xa,0x7f,0xa8,0x99,0x6,
  0xc0,0x20,0x22,0xe2,0xea,0xab,0x4b,0xa7,0x51,0xdc,0x20,0x22,0xe2,0x3f,0xfc,0x87,
  0xd2,0x69,0x0,0xf5,0xca,0x46,0xe4,0x73,0x9e,0x93,0xe3,0xd1,0xbb,0xdf,0x5d,0x3a,
  0x1f,0x80,0x7e,0x51,0xf8,0x3,0x1a,0x0,0xeb,0xd4,0xbe,0x2,0x60,0xe4,0x6d,0x6f,
  0xcb,0x9,0xf8,0x5e,0x7b,0x95,0xce,0x4,0xa8,0xd0,0x20,0x22,0xe2,0xa3,0x1f,0xcd,
  0x93,0xcd,0x37,0x2f,0x9d,0xe,0x40,0x3f,0x28,0xfc,0x81,0x31,0xd,0x80,0x88,0xb0,
  0x2,0x60,0x64,0x9b,0x6d,0x66,0x4e,0xc0,0x1,0x9a,0x97,0x9b,0xfd,0x9d,0x72,0x4a,
  0x9e,0x1d,0x7b,0x6c,0xe9,0x7c,0x0,0xfa,0x41,0xe1,0xf,0x3c,0x59,0xf5,0xd,0x80,
  0xc1,0x20,0x22,0xe2,0xc6,0x1b,0xf3,0xec,0xa6,0x9b,0x4a,0xe7,0xd3,0xe,0xa7,0x9d,
  0x96,0x13,0xf2,0x77,0xbe,0xb3,0x74,0x26,0x40,0x7f,0xe5,0x38,0x93,0xa3,0x70,0xc4,
  0x7,0x3e,0x50,0x3a,0x1f,0x80,0x7e,0x50,0xf8,0x3,0xb3,0xab,0xbe,0x1,0x30,0xd3,
  0x37,0xbf,0x59,0x3a,0x83,0x76,0xf9,0xb3,0x3f,0xcb,0x9,0xfa,0x6b,0x5f,0x5b,0x3a,
  0x13,0xa0,0xaf,0x5e,0xf5,0xaa,0x8c,0x87,0x1f,0x5e,0x3a,0x13,0x80,0x6e,0x53,0xf8,
  0x3,0x9b,0xa6,0x1,0x30,0x32,0x8c,0xd0,0x0,0x78,0xa2,0xcd,0x36,0xcb,0xf8,0xe9,
  0x4f,0x5b,0x11,0x0,0x4c,0xca,0xcc,0x3b,0xff,0xef,0x7f,0x7f,0xe9,0x7c,0x0,0xba,
  0x4d,0xe1,0xf,0xcc,0x9d,0x6,0xc0,0xc8,0x20,0x42,0x3,0x60,0x36,0xa3,0x46,0xc0,
  0x87,0x3f,0x9c,0x13,0xf7,0x73,0xcf,0xcd,0xcd,0x2,0x9f,0xf1,0x8c,0xd2,0x99,0x1,
  0x1d,0x34,0x8c,0x88,0xd8,0x6f,0xbf,0x3c,0x39,0xf8,0xe0,0xd2,0xe9,0x0,0x74,0x93,
  0xc2,0x1f,0x98,0x3f,0xd,0x80,0x19,0xae,0xba,0x2a,0xa3,0xbd,0x0,0x36,0xee,0x15,
  0xaf,0xc8,0x86,0xc9,0xea,0xd5,0xd9,0x10,0x38,0xeb,0xac,0x6c,0x8,0x2c,0x5f,0x5e,
  0x3a,0x33,0xa0,0x3,0x6,0x11,0x96,0xfc,0x3,0x2c,0x94,0xc2,0x1f,0x58,0x38,0xd,
  0x80,0x75,0x72,0x31,0xea,0x70,0x98,0x3,0xea,0x67,0x3f,0x5b,0x3a,0x9f,0x6e,0xd8,
  0x66,0x9b,0x8c,0xbf,0xfb,0xbb,0x39,0xa1,0xbf,0xea,0xaa,0x6c,0x4,0x5c,0x7a,0x69,
  0x36,0x6,0xfe,0xe7,0xff,0xcc,0xf8,0xaa,0x57,0xe5,0xeb,0xcf,0x7a,0x56,0x9e,0xef,
  0xb2,0x4b,0x9e,0xfb,0x9a,0x2f,0xa8,0xd2,0x30,0x42,0x3,0x0,0x60,0xbe,0x14,0xfe,
  0xc0,0xe2,0xd,0x4a,0x27,0xd0,0x36,0x59,0x98,0x1e,0x71,0x44,0xfe,0x66,0xbe,0xff,
  0xfd,0xd2,0xf9,0x0,0x7d,0x73,0xea,0xa9,0xd9,0x70,0xfc,0xf2,0x97,0x4b,0x67,0x52,
  0x4a,0x36,0x2,0x57,0xae,0xcc,0xb3,0xe3,0x8f,0x2f,0x9d,0xf,0x40,0xbb,0x29,0xfc,
  0x81,0xc9,0xd1,0x0,0x98,0x45,0x4e,0x50,0xaf,0xbc,0x32,0xcf,0xe,0x3c,0xb0,0x74,
  0x3e,0x40,0x5f,0x2c,0x5b,0x96,0xd,0x80,0x9b,0x6f,0x2e,0x9d,0xc9,0xb4,0xcd,0xdc,
  0xfc,0x6f,0xcd,0x9a,0x8c,0x3b,0xed,0x54,0x3a,0x2f,0x80,0x76,0x52,0xf8,0x3,0x93,
  0xe7,0x11,0x80,0x8d,0xfa,0xcc,0x67,0x4a,0x67,0x0,0xf4,0xc5,0x8d,0x37,0xd6,0x5a,
  0xf8,0xaf,0x37,0x63,0xf3,0x3f,0x85,0x3f,0xc0,0x86,0x29,0xfc,0x81,0xe6,0x68,0x0,
  0x6c,0xd4,0x5f,0xfd,0x55,0xc6,0x87,0x1e,0x2a,0x9d,0x9,0xd0,0x75,0x97,0x5c,0x52,
  0x3a,0x83,0xe2,0x6,0x11,0x11,0x47,0x1c,0x51,0x3a,0xd,0x80,0x76,0x52,0xf8,0x3,
  0xcd,0xd3,0x0,0x98,0x45,0xde,0xa9,0xbb,0xf1,0xc6,0x1c,0x88,0x3f,0xf9,0xc9,0xd2,
  0xf9,0x0,0x5d,0xa7,0x1,0x60,0xf3,0x3f,0x80,0xd,0x51,0xf8,0x3,0xd3,0xa3,0x1,
  0xb0,0x29,0x83,0x88,0x88,0xf,0x7e,0x30,0x4f,0x1e,0x7b,0xac,0x74,0x3a,0x40,0x57,
  0x69,0x0,0xf8,0xfa,0x3f,0x80,0xc7,0x53,0xf8,0x3,0xd3,0xa7,0x1,0xb0,0x9,0xb9,
  0x12,0xe0,0xda,0x6b,0xf3,0xec,0x9c,0x73,0x4a,0xe7,0x3,0x74,0xd5,0xa5,0x97,0x96,
  0xce,0xa0,0x94,0x99,0x9b,0xff,0x1d,0x76,0x58,0xe9,0x7c,0x0,0xca,0x52,0xf8,0x3,
  0xe5,0xf8,0x16,0x80,0x39,0x1a,0x7d,0x8f,0x7d,0xfe,0xc6,0x2e,0xbb,0x2c,0x5f,0xf5,
  0x3d,0xf6,0xc0,0xa6,0xdc,0x74,0x53,0x96,0xbe,0x7b,0xee,0x59,0x3a,0x93,0x52,0x72,
  0xfc,0xdc,0x7f,0xff,0x1c,0x3f,0xaf,0xb9,0xa6,0x74,0x3e,0x0,0x65,0x28,0xfc,0x81,
  0xf2,0xac,0x0,0x98,0xa3,0x1c,0xa8,0x7f,0xfc,0xe3,0x3c,0xfb,0xdf,0xff,0xbb,0x74,
  0x3e,0x40,0x57,0xfc,0xe0,0x7,0xa5,0x33,0x28,0xce,0xe6,0x7f,0x40,0xd5,0x14,0xfe,
  0x40,0x7b,0x68,0x0,0xcc,0xd7,0x30,0x22,0xe2,0x8c,0x33,0xf2,0xa4,0xe2,0xaf,0xf3,
  0x2,0xe6,0xc8,0xb3,0xff,0x36,0xff,0x3,0xea,0xa4,0xf0,0x7,0xda,0x47,0x3,0x60,
  0x9e,0x72,0x0,0xbf,0xfb,0xee,0x3c,0xfb,0x2f,0xff,0xa5,0x74,0x3e,0x40,0xdb,0x69,
  0x0,0xd8,0xfc,0xf,0xa8,0x8b,0xc2,0x1f,0x68,0x2f,0x7b,0x0,0x2c,0xd0,0xfa,0x4d,
  0xad,0x86,0x11,0x11,0x5f,0xfe,0x72,0xfe,0x26,0x5f,0xf2,0x92,0xd2,0x79,0x1,0x6d,
  0xb3,0x6c,0x59,0xee,0x1,0x50,0xdf,0x8a,0xa1,0x99,0x9b,0xff,0xad,0x59,0x93,0x71,
  0xa7,0x9d,0x4a,0xe7,0x5,0xd0,0xc,0x85,0x3f,0xd0,0x7e,0x56,0x0,0x2c,0x50,0x4e,
  0x69,0x73,0x7a,0x1b,0xf1,0x6b,0xbf,0x96,0xf1,0xc6,0x1b,0x4b,0xe7,0x5,0xb4,0xc5,
  0x68,0xf3,0xbf,0xfa,0xa,0xff,0xf5,0x86,0x11,0x11,0xfb,0xed,0x97,0x27,0xa,0x7f,
  0xa0,0xaf,0x14,0xfe,0x40,0x77,0x68,0x0,0x2c,0x52,0xe,0xf4,0xbf,0xf8,0x45,0xe,
  0xfc,0x6f,0x7c,0x63,0xbe,0xfa,0xd8,0x63,0xa5,0xf3,0x2,0x4a,0xb3,0xf9,0x9f,0xcd,
  0xff,0x80,0x7e,0x53,0xf8,0x3,0xdd,0xa3,0x1,0x30,0x21,0x39,0xf0,0x5f,0x74,0x51,
  0x9e,0xbd,0xff,0xfd,0xa5,0xf3,0x1,0x4a,0xbb,0xf4,0xd2,0xd2,0x19,0x14,0x37,0x8c,
  0x88,0x78,0xee,0x73,0x4b,0xa7,0x1,0x30,0x59,0xa,0x7f,0xa0,0xbb,0x34,0x0,0x1a,
  0x71,0xe6,0x99,0x19,0xff,0xe6,0x6f,0x4a,0x67,0x2,0x94,0x62,0x5,0x80,0x15,0x0,
  0x40,0xbf,0x28,0xfc,0x81,0xee,0xb3,0x9,0x60,0x43,0x86,0x6b,0x23,0x22,0xb6,0xd8,
  0x22,0xcf,0xce,0x3d,0xd7,0x26,0x81,0x50,0x1b,0x9b,0xff,0xe5,0x99,0xcd,0xff,0x80,
  0xae,0x53,0xf8,0x3,0xfd,0x61,0x5,0x40,0x43,0xf2,0x3,0xe2,0x91,0x47,0xb2,0xf0,
  0x7f,0xcd,0x6b,0xf2,0xd5,0xef,0x7c,0xa7,0x74,0x5e,0x40,0xd3,0x6c,0xfe,0x67,0xf3,
  0x3f,0xa0,0x1f,0x14,0xfe,0x40,0xff,0x68,0x0,0x34,0x2c,0xb,0x81,0xfb,0xef,0xcf,
  0xb3,0x57,0xbc,0x22,0xe3,0xf7,0xbe,0x57,0x3a,0x2f,0xa0,0x29,0x97,0x5c,0x52,0x3a,
  0x83,0xe2,0x6,0x11,0x11,0x87,0x1f,0x5e,0x3a,0xd,0x80,0x85,0x51,0xf8,0x3,0xfd,
  0xa5,0x1,0x30,0x25,0xd9,0x8,0xb8,0xfd,0xf6,0x3c,0x3b,0xe1,0x84,0xfc,0x60,0xf9,
  0xca,0x57,0x4a,0xe7,0x5,0x4c,0x9a,0x67,0xff,0x73,0x7c,0xf3,0xec,0x3f,0xd0,0x35,
  0xa,0x7f,0xa0,0xff,0x34,0x0,0xa6,0x2c,0x1b,0x1,0xf7,0xdd,0x97,0x67,0xaf,0x78,
  0x45,0x7e,0xd0,0xfc,0xf5,0x5f,0x97,0xce,0xb,0x98,0x14,0x2b,0x0,0xac,0x0,0x0,
  0xba,0x45,0xe1,0xf,0xd4,0x43,0x3,0xa0,0x90,0xfc,0x80,0x79,0xf4,0xd1,0x9c,0x28,
  0xbf,0xf5,0xad,0xf9,0xea,0x7b,0xde,0x93,0xf1,0xb1,0xc7,0x4a,0xe7,0x7,0x2c,0x54,
  0xbd,0x5f,0xff,0x37,0x73,0xf3,0xbf,0xc3,0xe,0x2b,0x9d,0xf,0xc0,0xc6,0x29,0xfc,
  0x81,0xfa,0xf8,0x16,0x80,0x96,0xc9,0x9,0xf4,0x71,0xc7,0xe5,0xd9,0xa7,0x3e,0x95,
  0x71,0xcf,0x3d,0x4b,0xe7,0x5,0x6c,0xca,0x68,0xf3,0xbf,0x7a,0xdf,0xaf,0xf9,0xed,
  0x27,0xfb,0xef,0x9f,0x9f,0x2c,0xd7,0x5c,0x53,0x3a,0x1f,0x80,0xd,0x53,0xf8,0x3,
  0xf5,0xb2,0x2,0xa0,0x65,0xb2,0x80,0xf8,0xe6,0x37,0xf3,0x83,0xe9,0xd0,0x43,0xf3,
  0xd5,0x2f,0x7f,0xb9,0x74,0x5e,0xc0,0xa6,0x58,0xfa,0x9f,0x85,0xbf,0x67,0xff,0x81,
  0xb6,0x52,0xf8,0x3,0x68,0x0,0xb4,0xd4,0xe8,0x83,0x29,0x1b,0x2,0xa7,0x9e,0x9a,
  0x1f,0x58,0xa3,0x6f,0x11,0xb8,0xe1,0x86,0xd2,0xf9,0x1,0x4f,0xa4,0x1,0x90,0xe3,
  0x94,0x67,0xff,0x81,0xb6,0x51,0xf8,0x3,0x8c,0x68,0x0,0x74,0x44,0x7e,0x60,0x7d,
  0xe9,0x4b,0x79,0x76,0xd0,0x41,0x19,0xdf,0xf7,0xbe,0x8c,0xf,0x3f,0x5c,0x3a,0x3f,
  0xc0,0xee,0xff,0x36,0xff,0x3,0xda,0x45,0xe1,0xf,0xf0,0x44,0xf6,0x0,0xe8,0xb8,
  0xdc,0x33,0xe0,0xe0,0x83,0xf3,0xec,0x8c,0x33,0x32,0xbe,0xfa,0xd5,0x19,0x37,0xdb,
  0xac,0x74,0x7e,0x50,0x8f,0x65,0xcb,0x72,0xc5,0xce,0xcd,0x37,0x97,0xce,0x64,0xda,
  0x66,0x6e,0xfe,0xb7,0x66,0x4d,0xc6,0x9d,0x76,0x2a,0x9d,0x17,0x50,0x2b,0x85,0x3f,
  0xc0,0x6c,0x34,0x0,0x7a,0x26,0x27,0xe2,0xfb,0xec,0x93,0x67,0xef,0x7a,0x57,0xc6,
  0xb7,0xbd,0x2d,0xe3,0x36,0xdb,0x94,0xce,0xf,0xfa,0xc7,0xe6,0x7f,0x36,0xff,0x3,
  0xda,0x41,0xe1,0xf,0xb0,0x29,0x1e,0x1,0xe8,0x99,0x2c,0x44,0xae,0xbf,0x3e,0xe3,
  0x3b,0xdf,0x99,0xaf,0xee,0xbf,0x7f,0xc6,0x33,0xce,0xc8,0xf,0xc6,0x2b,0xaf,0x2c,
  0x9d,0x27,0xf4,0x47,0xbd,0x5f,0xfb,0xb7,0x9e,0xa5,0xff,0x40,0x51,0xa,0x7f,0x80,
  0xb9,0xd2,0x0,0xe8,0xb9,0x6c,0x4,0x8c,0xee,0x50,0x9e,0x79,0x66,0x7e,0x30,0x8e,
  0xf6,0x10,0x38,0xfc,0xf0,0xfc,0xc0,0xfc,0xf3,0x3f,0xcf,0xf3,0x9f,0xff,0xbc,0x74,
  0xbe,0xd0,0x3d,0x9e,0xfd,0xb7,0xf9,0x1f,0x50,0x86,0xc2,0x1f,0x60,0xbe,0x3c,0x2,
  0xc0,0xc,0xf9,0x8,0xc1,0xbe,0xfb,0xe6,0x7,0xea,0x31,0xc7,0xe4,0x15,0x72,0xf4,
  0xd1,0xf9,0x5f,0x5f,0xfc,0xe2,0x8c,0x7b,0xef,0x5d,0x3a,0x4f,0x68,0x8f,0x53,0x4f,
  0xcd,0x6,0x5b,0xbd,0x5f,0xd7,0x99,0xe3,0xc6,0xca,0x95,0x79,0x76,0xfc,0xf1,0xa5,
  0xf3,0x1,0xfa,0x4e,0xe1,0xf,0xb0,0x50,0x1a,0x0,0xcc,0x4b,0x4e,0xf4,0x97,0x2d,
  0xcb,0xb3,0xe5,0xcb,0xf3,0x3,0xf8,0x80,0x3,0xf2,0xfc,0x80,0x3,0xf2,0x8a,0x1a,
  0x9d,0x8f,0x7e,0x6e,0xbb,0xed,0x32,0x6e,0xbb,0x6d,0xc6,0xd1,0xe6,0x60,0x4b,0x97,
  0x66,0xdc,0x62,0x8b,0xd2,0xff,0x2e,0x58,0xb8,0x3d,0xf7,0x1c,0xad,0xb4,0x29,0x9d,
  0xc9,0xb4,0xd9,0xfc,0xf,0x98,0x2e,0x85,0x3f,0xc0,0x62,0x69,0x0,0x0,0xb0,0x20,
  0x36,0xff,0x3,0xa6,0x43,0xe1,0xf,0x30,0x29,0xf6,0x0,0x0,0x60,0x61,0x6,0x11,
  0x11,0x47,0x1c,0x51,0x3a,0xd,0xa0,0xaf,0x14,0xfe,0x0,0x93,0xa6,0x1,0x0,0xc0,
  0xc2,0xd8,0xfc,0xf,0x68,0x84,0xc2,0x1f,0xa0,0x29,0x1a,0x0,0x0,0x2c,0x8c,0xaf,
  0xff,0x3,0x26,0x4a,0xe1,0xf,0xd0,0x34,0x7b,0x0,0x0,0x30,0x2f,0x36,0xff,0x3,
  0x26,0x4b,0xe1,0xf,0x30,0x2d,0x56,0x0,0x0,0x30,0x3f,0xc3,0x88,0x88,0xfd,0xf6,
  0xcb,0x13,0x85,0x3f,0xb0,0x50,0xa,0x7f,0x80,0x69,0xd3,0x0,0x0,0x60,0x7e,0x6c,
  0xfe,0x7,0x2c,0x8a,0xc2,0x1f,0xa0,0x14,0xd,0x0,0x0,0xe6,0xc7,0xe6,0x7f,0xc0,
  0x82,0x28,0xfc,0x1,0x4a,0xd3,0x0,0x0,0x60,0x7e,0x6c,0xfe,0x7,0xcc,0x8b,0xc2,
  0x1f,0xa0,0x2d,0x6c,0x2,0x8,0xc0,0x9c,0xd8,0xfc,0xf,0x98,0x1f,0x85,0x3f,0x40,
  0xdb,0x58,0x1,0x0,0xc0,0xdc,0xd8,0xfc,0xf,0x98,0x13,0x85,0x3f,0x40,0x5b,0x69,
  0x0,0x0,0x30,0x37,0x36,0xff,0x3,0x36,0x4a,0xe1,0xf,0xd0,0x76,0x1a,0x0,0x0,
  0xcc,0x8d,0xcd,0xff,0x80,0xd,0x52,0xf8,0x3,0x74,0x85,0x6,0x0,0x0,0x73,0x63,
  0xf3,0x3f,0x60,0x6,0x85,0x3f,0x40,0xd7,0xd8,0x4,0x10,0x80,0x8d,0xb2,0xf9,0x1f,
  0x30,0x93,0xc2,0x1f,0xa0,0xab,0xac,0x0,0x0,0x60,0xe3,0x6c,0xfe,0x7,0x44,0x84,
  0xc2,0x1f,0xa0,0xfb,0x34,0x0,0x0,0xd8,0x38,0x9b,0xff,0x41,0xe5,0x14,0xfe,0x0,
  0x7d,0xa1,0x1,0x0,0xc0,0xc6,0xd9,0xfc,0xf,0x2a,0xa5,0xf0,0x7,0xe8,0x1b,0xd,
  0x0,0x0,0x36,0xce,0xe6,0x7f,0x50,0x19,0x85,0x3f,0x40,0x5f,0xd9,0x4,0x10,0x80,
  0xd,0xb2,0xf9,0x1f,0xd4,0x46,0xe1,0xf,0xd0,0x77,0x56,0x0,0x0,0xb0,0x61,0x36,
  0xff,0x83,0x4a,0x28,0xfc,0x1,0x6a,0xa1,0x1,0x0,0xc0,0x86,0xd9,0xfc,0xf,0x7a,
  0x4e,0xe1,0xf,0x50,0x1b,0xd,0x0,0x0,0x36,0xcc,0xe6,0x7f,0xd0,0x53,0xa,0x7f,
  0x80,0x5a,0x69,0x0,0x0,0xb0,0x61,0x36,0xff,0x83,0x9e,0x51,0xf8,0x3,0xd4,0xce,
  0x26,0x80,0x0,0xcc,0x60,0xf3,0x3f,0xe8,0x1b,0x85,0x3f,0x0,0xc9,0xa,0x0,0x0,
  0x66,0xb2,0xf9,0x1f,0xf4,0x84,0xc2,0x1f,0x80,0x99,0x34,0x0,0x0,0x98,0xc9,0xe6,
  0x7f,0xd0,0x71,0xa,0x7f,0x0,0x36,0x4c,0x3,0x0,0x80,0x99,0x6c,0xfe,0x7,0x1d,
  0xa5,0xf0,0x7,0x60,0xe3,0x34,0x0,0x0,0x98,0xc9,0xe6,0x7f,0xd0,0x31,0xa,0x7f,
  0x0,0xe6,0xc6,0x26,0x80,0x0,0x44,0x84,0xcd,0xff,0xa0,0x7b,0x14,0xfe,0x0,0xcc,
  0x8f,0x15,0x0,0x0,0x24,0x9b,0xff,0x41,0x47,0x28,0xfc,0x1,0x58,0x18,0xd,0x0,
  0x0,0x92,0xcd,0xff,0xa0,0xe5,0x14,0xfe,0x0,0x2c,0x8e,0x6,0x0,0x0,0xc9,0xe6,
  0x7f,0xd0,0x52,0xa,0x7f,0x0,0x26,0x43,0x3,0x0,0x80,0x64,0xf3,0x3f,0x68,0x19,
  0x85,0x3f,0x0,0x93,0x65,0x13,0x40,0x80,0xca,0xd9,0xfc,0xf,0xda,0x46,0xe1,0xf,
  0x40,0x33,0xac,0x0,0x0,0xa8,0x9d,0xcd,0xff,0xa0,0x25,0x14,0xfe,0x0,0x34,0x4b,
  0x3,0x0,0xa0,0x76,0x36,0xff,0x83,0xc2,0x14,0xfe,0x0,0x4c,0x87,0x6,0x0,0x40,
  0xed,0x6c,0xfe,0x7,0x85,0x28,0xfc,0x1,0x98,0x2e,0xd,0x0,0x80,0xda,0xd9,0xfc,
  0xf,0xa6,0x4c,0xe1,0xf,0x40,0x19,0x36,0x1,0x4,0xa8,0x94,0xcd,0xff,0x60,0xda,
  0x14,0xfe,0x0,0x94,0x65,0x5,0x0,0x40,0xad,0x6c,0xfe,0x7,0x53,0xa2,0xf0,0x7,
  0xa0,0x1d,0x34,0x0,0x0,0x6a,0x65,0xf3,0x3f,0x68,0x98,0xc2,0x1f,0x80,0x76,0xd1,
  0x0,0x0,0xa8,0x95,0xcd,0xff,0xa0,0x21,0xa,0x7f,0x0,0xda,0x49,0x3,0x0,0xa0,
  0x6a,0xcf,0x7d,0x6e,0xe9,0xc,0xa0,0x3f,0xee,0xb8,0x23,0xb,0xff,0x17,0xbf,0x58,
  0xe1,0xf,0x40,0x1b,0x6d,0x5e,0x3a,0x1,0x0,0xa6,0x6b,0xe6,0xe6,0x7f,0x1a,0x0,
  0x30,0x11,0xc3,0x88,0x88,0xdf,0xfb,0xbd,0x2c,0xfc,0x6f,0xbd,0xb5,0x74,0x3a,0x0,
  0xb0,0x21,0x56,0x0,0x0,0xd4,0x66,0x18,0x11,0x71,0xf0,0xc1,0x79,0x62,0xf3,0x3f,
  0x58,0xb8,0x6c,0xa7,0x45,0xfc,0xd1,0x1f,0x65,0xe1,0xff,0x77,0x7f,0x57,0x3a,0x23,
  0x0,0xd8,0x18,0x2b,0x0,0x0,0x6a,0x33,0x88,0x88,0x38,0xe6,0x98,0xd2,0x69,0x40,
  0x77,0xdd,0x7c,0x73,0xc6,0xdf,0xf9,0x9d,0x5c,0x4b,0x73,0xce,0x39,0xa5,0x33,0x2,
  0x80,0xb9,0xd0,0x0,0x0,0xa8,0xd2,0xd3,0x9f,0x5e,0x3a,0x3,0x68,0xaf,0x47,0x1e,
  0xc9,0x38,0x5a,0xca,0x7f,0xd9,0x65,0x19,0x47,0x85,0xfe,0x67,0x3e,0x93,0x85,0xff,
  0x83,0xf,0x96,0xce,0x14,0x0,0xe6,0x43,0x3,0x0,0xa0,0x4a,0x96,0xfe,0x53,0xa3,
  0x3b,0xef,0xcc,0x47,0x60,0x2e,0xbd,0x34,0xcf,0x2f,0xb9,0x24,0x57,0xc4,0x5c,0x72,
  0x49,0xbe,0x3e,0x3a,0xbf,0xf6,0xda,0x2c,0xf0,0x47,0x4b,0xfc,0x1,0xa0,0x1f,0x34,
  0x0,0x0,0xaa,0x74,0xdf,0x7d,0xa5,0x33,0x80,0xc9,0xb9,0xfb,0xee,0x8c,0x3f,0xfa,
  0x51,0xc6,0x27,0x16,0xf4,0x97,0x5c,0x92,0xaf,0xaf,0x5e,0x9d,0xcf,0xea,0xaf,0x5d,
  0x5b,0x3a,0x63,0x0,0x28,0x41,0x3,0x0,0xa0,0x36,0xc3,0x88,0x88,0x5f,0xfc,0x22,
  0x6,0xa5,0x13,0x81,0x4d,0x71,0xc7,0x1e,0x0,0x26,0x49,0x3,0x0,0xa0,0x36,0x33,
  0xee,0x88,0x42,0x9,0xee,0xd8,0x3,0x40,0x9,0xee,0xff,0x0,0x54,0x26,0xef,0x91,
  0x6e,0xb7,0x5d,0x9e,0xdd,0x76,0x5b,0xc6,0xad,0xb7,0x2e,0x9d,0x17,0x7d,0xe0,0x8e,
  0x3d,0x0,0xb4,0x99,0x6,0x0,0x40,0xa5,0xb2,0xf4,0xfa,0xf4,0xa7,0xf3,0xec,0xd,
  0x6f,0x28,0x9d,0xf,0x6d,0x36,0x8f,0x3b,0xf6,0x83,0x8,0x77,0xec,0x1,0xa0,0x9d,
  0x34,0x0,0x0,0x2a,0x35,0x5c,0x1b,0x11,0x71,0xcc,0x31,0xf9,0x49,0xf0,0xad,0x6f,
  0x95,0xce,0x87,0x12,0xdc,0xb1,0x7,0x80,0x9a,0x68,0x0,0x0,0x54,0x2e,0x4b,0xba,
  0xcf,0x7e,0x36,0xcf,0x5e,0xfb,0xda,0xd2,0xf9,0x30,0x9,0xee,0xd8,0x3,0x0,0x4f,
  0xa6,0x1,0x0,0x50,0xb9,0x6c,0x0,0x2c,0x5b,0x96,0x67,0xdf,0xff,0x7e,0xc6,0xd1,
  0x39,0xed,0xe2,0x8e,0x3d,0x0,0xb0,0x70,0x1a,0x0,0x0,0x44,0xc4,0xa8,0x54,0x3c,
  0xfc,0xf0,0x3c,0xfb,0xc6,0x37,0x32,0x2e,0x5d,0x5a,0x3a,0xaf,0x3a,0x28,0xec,0x1,
  0x80,0xe6,0x69,0x0,0x0,0x30,0x43,0xee,0xd,0x70,0xc8,0x21,0xf9,0x9,0xf1,0xc5,
  0x2f,0xe6,0xab,0xfb,0xec,0x53,0x3a,0xaf,0x6e,0xb2,0x14,0x1f,0x0,0x68,0xf,0xd,
  0x0,0x0,0x36,0x28,0x1b,0x1,0xbb,0xee,0x9a,0x9f,0x14,0x67,0x9f,0x9d,0xaf,0xbe,
  0xf0,0x85,0xa5,0xf3,0x6a,0x7,0x77,0xec,0x1,0x80,0xee,0xd1,0x0,0x0,0x60,0xa3,
  0xb2,0x11,0xb0,0xe5,0x96,0xf9,0x89,0x71,0xe6,0x99,0xf9,0xea,0xbb,0xdf,0x9d,0x71,
  0x8b,0x2d,0x4a,0xe7,0x37,0x59,0xa,0x7b,0x0,0x0,0x0,0x88,0x88,0x51,0xc9,0x7b,
  0xf0,0xc1,0x19,0xff,0xfe,0xef,0x33,0x3e,0xfa,0x68,0xc6,0xe1,0xb0,0x9d,0xf1,0x8e,
  0x3b,0xb2,0x91,0xb1,0x62,0x45,0xc6,0xf,0x7d,0x28,0x5f,0x7f,0xdd,0xeb,0xf2,0x7c,
  0xff,0xfd,0xf3,0x7c,0xa0,0x31,0xe,0x0,0xf4,0x96,0x89,0xe,0x0,0x8b,0x92,0x5,
  0xf4,0x33,0x9e,0x91,0x9f,0x28,0x6f,0x7a,0x53,0xbe,0x3a,0xfa,0x3a,0xc1,0x43,0xe,
  0xc9,0xd8,0x54,0x61,0xed,0x8e,0x3d,0x0,0xc0,0x5c,0x69,0x0,0x0,0xd0,0x88,0x6c,
  0xc,0x3c,0xed,0x69,0x79,0x76,0xec,0xb1,0xf9,0x89,0x33,0xfa,0x96,0x81,0x83,0xf,
  0xce,0x2,0x7d,0xd7,0x5d,0xf3,0xfc,0xa9,0x4f,0xcd,0xff,0xbe,0xdb,0x6e,0x79,0xfe,
  0xd8,0x63,0xa,0x7b,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x0,0x0,0x0,0x0,0x80,0x32,0xfe,0x3f,0xf0,0x70,0x58,0x3d,0x48,0x75,0xa9,0x6,
  0x0,0x0,0x0,0x0,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82,
};
static const unsigned char qt_resource_name[] = {
  // plus.png
  0x0,0x8,
  0x3,0xc6,0x59,0xa7,
  0x0,0x70,
  0x0,0x6c,0x0,0x75,0x0,0x73,0x0,0x2e,0x0,0x70,0x0,0x6e,0x0,0x67,
    // arrowToRight.png
  0x0,0x10,
  0x0,0x7b,0xe0,0xe7,
  0x0,0x61,
  0x0,0x72,0x0,0x72,0x0,0x6f,0x0,0x77,0x0,0x54,0x0,0x6f,0x0,0x52,0x0,0x69,0x0,0x67,0x0,0x68,0x0,0x74,0x0,0x2e,0x0,0x70,0x0,0x6e,0x0,0x67,
    // arrowToLeft.png
  0x0,0xf,
  0x9,0xf,0x9d,0x67,
  0x0,0x61,
  0x0,0x72,0x0,0x72,0x0,0x6f,0x0,0x77,0x0,0x54,0x0,0x6f,0x0,0x4c,0x0,0x65,0x0,0x66,0x0,0x74,0x0,0x2e,0x0,0x70,0x0,0x6e,0x0,0x67,
    // mainwindow_icon.png
  0x0,0x13,
  0x1,0x4d,0x88,0xc7,
  0x0,0x6d,
  0x0,0x61,0x0,0x69,0x0,0x6e,0x0,0x77,0x0,0x69,0x0,0x6e,0x0,0x64,0x0,0x6f,0x0,0x77,0x0,0x5f,0x0,0x69,0x0,0x63,0x0,0x6f,0x0,0x6e,0x0,0x2e,0x0,0x70,
  0x0,0x6e,0x0,0x67,
};
static const unsigned char qt_resource_struct[] = {
  // :
  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x4,0x0,0x0,0x0,0x1,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  // :/arrowToRight.png
  0x0,0x0,0x0,0x16,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x3,0x5e,
0x0,0x0,0x1,0x8c,0x40,0x8a,0x62,0x57,
  // :/mainwindow_icon.png
  0x0,0x0,0x0,0x60,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x51,0xab,
0x0,0x0,0x1,0x8c,0x40,0x6f,0xb8,0x6,
  // :/plus.png
  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,
0x0,0x0,0x1,0x8c,0x40,0x82,0xd8,0xfd,
  // :/arrowToLeft.png
  0x0,0x0,0x0,0x3c,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x29,0xc8,
0x0,0x0,0x1,0x8c,0x40,0x89,0x83,0x18,
};
#ifdef QT_NAMESPACE
#  define QT_RCC_PREPEND_NAMESPACE(name) ::QT_NAMESPACE::name
#  define QT_RCC_MANGLE_NAMESPACE0(x) x
#  define QT_RCC_MANGLE_NAMESPACE1(a, b) a##_##b
#  define QT_RCC_MANGLE_NAMESPACE2(a, b) QT_RCC_MANGLE_NAMESPACE1(a,b)
#  define QT_RCC_MANGLE_NAMESPACE(name) QT_RCC_MANGLE_NAMESPACE2( \
        QT_RCC_MANGLE_NAMESPACE0(name), QT_RCC_MANGLE_NAMESPACE0(QT_NAMESPACE))
#else
#   define QT_RCC_PREPEND_NAMESPACE(name) name
#   define QT_RCC_MANGLE_NAMESPACE(name) name
#endif
#ifdef QT_NAMESPACE
namespace QT_NAMESPACE {
#endif
bool qRegisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);
bool qUnregisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);
#ifdef QT_NAMESPACE }
#endif
int QT_RCC_MANGLE_NAMESPACE(qInitResources_icons)();
int QT_RCC_MANGLE_NAMESPACE(qInitResources_icons)() {
    int version = 3;
    QT_RCC_PREPEND_NAMESPACE(qRegisterResourceData)
        (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1; }
int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_icons)();
int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_icons)() {
    int version = 3;
    QT_RCC_PREPEND_NAMESPACE(qUnregisterResourceData)
       (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1; }
#ifdef __clang__
#   pragma clang diagnostic push
#   pragma clang diagnostic ignored "-Wexit-time-destructors"
#endif
namespace {
   struct initializer {
       initializer() { QT_RCC_MANGLE_NAMESPACE(qInitResources_icons)(); }
       ~initializer() { QT_RCC_MANGLE_NAMESPACE(qCleanupResources_icons)(); }
   } dummy; }
#ifdef __clang__
#   pragma clang diagnostic pop
#endif
 
Файл ui_mainwindow.h: 
/********************************************************************************
** Form generated from reading UI file 'mainwindow.ui'
**
** Created by: Qt User Interface Compiler version 6.5.1
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/
#ifndef UI_MAINWINDOW_H
#define UI_MAINWINDOW_H
#include <QtCore/QVariant>
#include <QtGui/QAction>
#include <QtGui/QIcon>
#include <QtWidgets/QApplication>
#include <QtWidgets/QGridLayout>
#include <QtWidgets/QHBoxLayout>
#include <QtWidgets/QLabel>
#include <QtWidgets/QMainWindow>
#include <QtWidgets/QMenu>
#include <QtWidgets/QMenuBar>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QSlider>
#include <QtWidgets/QStatusBar>
#include <QtWidgets/QVBoxLayout>
#include <QtWidgets/QWidget>
#include "iconautosizepushbutton.h"
#include "viewwithoutwheel.h"
QT_BEGIN_NAMESPACE
class Ui_MainWindow {
public:
    QAction *actionExport;
    QAction *actionNew_image;
    QAction *actionEnglish;
    QAction *actionRussian;
    QAction *actionBelarusian;
    QWidget *centralwidget;
    QGridLayout *gridLayout_2;
    QVBoxLayout *verticalLayout_2;
    QPushButton *pushButton_addF;
    QPushButton *pushButton_deleteF;
    QSlider *regulation;
    QGridLayout *gridLayout_8;
    IconautosizePushButton *pushButton_leftF;
    QLabel *label_centerFname;
    QLabel *label_rightFname;
    IconautosizePushButton *pushButton_centerF;
    QLabel *label_leftFname;
    QPushButton *pushButton_toLeft;
    QPushButton *pushButton_toRight;
    IconautosizePushButton *pushButton_rightF;
    QGridLayout *gridLayout;
    IconautosizePushButton *pushButton_Rec_open_3;
    IconautosizePushButton *pushButton_Rec_open_2;
    IconautosizePushButton *pushButton_Rec_open_1;
    IconautosizePushButton *pushButton_Rec_open_5;
    QPushButton *pushButton_New;
    IconautosizePushButton *pushButton_Rec_open_4;
    QVBoxLayout *verticalLayout;
    QPushButton *pushButton_brightness;
    QPushButton *pushButton_contrast;
    QPushButton *pushButton_saturation;
    QPushButton *pushButton_clarity;
    QPushButton *pushButton_temperature;
    QPushButton *pushButton_filters;
    QPushButton *pushButton_applyFilter;
    QPushButton *pushButton_back;
    QHBoxLayout *horizontalLayout;
    QPushButton *pushButton_left;
    QPushButton *pushButton_right;
    QLabel *out_amount;
    QLabel *label_greeting;
    ViewWithoutWheel *graphicsView_main_im;
    QMenuBar *menubar;
    QMenu *menuFile;
    QMenu *menuSettings;
    QMenu *menuLanguage;
    QStatusBar *statusbar;
    void setupUi(QMainWindow *MainWindow) {
        if (MainWindow->objectName().isEmpty())
            MainWindow->setObjectName("MainWindow");
        MainWindow->resize(900, 600);
        MainWindow->setMinimumSize(QSize(900, 600));
        MainWindow->setWindowTitle(QString::fromUtf8("Photored"));
        QIcon icon;
        icon.addFile(QString::fromUtf8(":/mainwindow_icon.png"), QSize(), QIcon::Normal, QIcon::Off);
        MainWindow->setWindowIcon(icon);
        MainWindow->setStyleSheet(QString::fromUtf8(""));
        actionExport = new QAction(MainWindow);
        actionExport->setObjectName("actionExport");
        actionNew_image = new QAction(MainWindow);
        actionNew_image->setObjectName("actionNew_image");
        actionEnglish = new QAction(MainWindow);
        actionEnglish->setObjectName("actionEnglish");
        actionRussian = new QAction(MainWindow);
        actionRussian->setObjectName("actionRussian");
        actionBelarusian = new QAction(MainWindow);
        actionBelarusian->setObjectName("actionBelarusian");
        centralwidget = new QWidget(MainWindow);
        centralwidget->setObjectName("centralwidget");
        gridLayout_2 = new QGridLayout(centralwidget);
        gridLayout_2->setObjectName("gridLayout_2");
        verticalLayout_2 = new QVBoxLayout();
        verticalLayout_2->setObjectName("verticalLayout_2");
        pushButton_addF = new QPushButton(centralwidget);
        pushButton_addF->setObjectName("pushButton_addF");
        pushButton_addF->setMinimumSize(QSize(100, 0));
        verticalLayout_2->addWidget(pushButton_addF);
        pushButton_deleteF = new QPushButton(centralwidget);
        pushButton_deleteF->setObjectName("pushButton_deleteF");
        pushButton_deleteF->setMinimumSize(QSize(100, 0));
        verticalLayout_2->addWidget(pushButton_deleteF);
        gridLayout_2->addLayout(verticalLayout_2, 2, 4, 1, 1);
        regulation = new QSlider(centralwidget);
        regulation->setObjectName("regulation");
        QSizePolicy sizePolicy(QSizePolicy::Minimum, QSizePolicy::Expanding);
        sizePolicy.setHorizontalStretch(0);
        sizePolicy.setVerticalStretch(0);
        sizePolicy.setHeightForWidth(regulation->sizePolicy().hasHeightForWidth());
        regulation->setSizePolicy(sizePolicy);
        regulation->setMaximumSize(QSize(20, 16777215));
        regulation->setMinimum(0);
        regulation->setMaximum(101);
        regulation->setTracking(true);
        regulation->setOrientation(Qt::Vertical);
        gridLayout_2->addWidget(regulation, 1, 2, 1, 1);
        gridLayout_8 = new QGridLayout();
        gridLayout_8->setObjectName("gridLayout_8");
        pushButton_leftF = new IconautosizePushButton(centralwidget);
        pushButton_leftF->setObjectName("pushButton_leftF");
        QSizePolicy sizePolicy1(QSizePolicy::Minimum, QSizePolicy::Minimum);
        sizePolicy1.setHorizontalStretch(0);
        sizePolicy1.setVerticalStretch(0);
        sizePolicy1.setHeightForWidth(pushButton_leftF->sizePolicy().hasHeightForWidth());
        pushButton_leftF->setSizePolicy(sizePolicy1);
        pushButton_leftF->setMinimumSize(QSize(100, 100));
        pushButton_leftF->setMaximumSize(QSize(200, 200));
        gridLayout_8->addWidget(pushButton_leftF, 0, 1, 1, 1);
        label_centerFname = new QLabel(centralwidget);
        label_centerFname->setObjectName("label_centerFname");
        label_centerFname->setMaximumSize(QSize(200, 16777215));
        label_centerFname->setAlignment(Qt::AlignCenter);
        label_centerFname->setWordWrap(true);
        gridLayout_8->addWidget(label_centerFname, 1, 2, 1, 1);
        label_rightFname = new QLabel(centralwidget);
        label_rightFname->setObjectName("label_rightFname");
        label_rightFname->setMaximumSize(QSize(200, 16777215));
        label_rightFname->setAlignment(Qt::AlignCenter);
        label_rightFname->setWordWrap(true);
        gridLayout_8->addWidget(label_rightFname, 1, 3, 1, 1);
        pushButton_centerF = new IconautosizePushButton(centralwidget);
        pushButton_centerF->setObjectName("pushButton_centerF");
        sizePolicy1.setHeightForWidth(pushButton_centerF->sizePolicy().hasHeightForWidth());
        pushButton_centerF->setSizePolicy(sizePolicy1);
        pushButton_centerF->setMinimumSize(QSize(100, 100));
        pushButton_centerF->setMaximumSize(QSize(200, 200));
        gridLayout_8->addWidget(pushButton_centerF, 0, 2, 1, 1);
        label_leftFname = new QLabel(centralwidget);
        label_leftFname->setObjectName("label_leftFname");
        label_leftFname->setMaximumSize(QSize(200, 16777215));
        label_leftFname->setAlignment(Qt::AlignCenter);
        label_leftFname->setWordWrap(true);
        gridLayout_8->addWidget(label_leftFname, 1, 1, 1, 1);
        pushButton_toLeft = new QPushButton(centralwidget);
        pushButton_toLeft->setObjectName("pushButton_toLeft");
        pushButton_toLeft->setMaximumSize(QSize(70, 16777215));
        pushButton_toLeft->setText(QString::fromUtf8("<<<"));
        gridLayout_8->addWidget(pushButton_toLeft, 0, 0, 1, 1);
        pushButton_toRight = new QPushButton(centralwidget);
        pushButton_toRight->setObjectName("pushButton_toRight");
        pushButton_toRight->setMaximumSize(QSize(70, 16777215));
        pushButton_toRight->setText(QString::fromUtf8(">>>"));
        gridLayout_8->addWidget(pushButton_toRight, 0, 4, 1, 1);
        pushButton_rightF = new IconautosizePushButton(centralwidget);
        pushButton_rightF->setObjectName("pushButton_rightF");
        sizePolicy1.setHeightForWidth(pushButton_rightF->sizePolicy().hasHeightForWidth());
        pushButton_rightF->setSizePolicy(sizePolicy1);
        pushButton_rightF->setMinimumSize(QSize(100, 101));
        pushButton_rightF->setMaximumSize(QSize(200, 200));
        gridLayout_8->addWidget(pushButton_rightF, 0, 3, 1, 1);
        gridLayout_2->addLayout(gridLayout_8, 2, 1, 1, 1);
        gridLayout = new QGridLayout();
        gridLayout->setObjectName("gridLayout");
        pushButton_Rec_open_3 = new IconautosizePushButton(centralwidget);
        pushButton_Rec_open_3->setObjectName("pushButton_Rec_open_3");
        sizePolicy1.setHeightForWidth(pushButton_Rec_open_3->sizePolicy().hasHeightForWidth());
        pushButton_Rec_open_3->setSizePolicy(sizePolicy1);
        gridLayout->addWidget(pushButton_Rec_open_3, 2, 2, 1, 1);
        pushButton_Rec_open_2 = new IconautosizePushButton(centralwidget);
        pushButton_Rec_open_2->setObjectName("pushButton_Rec_open_2");
        sizePolicy1.setHeightForWidth(pushButton_Rec_open_2->sizePolicy().hasHeightForWidth());
        pushButton_Rec_open_2->setSizePolicy(sizePolicy1);
        gridLayout->addWidget(pushButton_Rec_open_2, 2, 0, 1, 1);
        pushButton_Rec_open_1 = new IconautosizePushButton(centralwidget);
        pushButton_Rec_open_1->setObjectName("pushButton_Rec_open_1");
        pushButton_Rec_open_1->setEnabled(true);
        sizePolicy1.setHeightForWidth(pushButton_Rec_open_1->sizePolicy().hasHeightForWidth());
        pushButton_Rec_open_1->setSizePolicy(sizePolicy1);
        pushButton_Rec_open_1->setStyleSheet(QString::fromUtf8(""));
        pushButton_Rec_open_1->setCheckable(false);
        gridLayout->addWidget(pushButton_Rec_open_1, 1, 2, 1, 1);
        pushButton_Rec_open_5 = new IconautosizePushButton(centralwidget);
        pushButton_Rec_open_5->setObjectName("pushButton_Rec_open_5");
        sizePolicy1.setHeightForWidth(pushButton_Rec_open_5->sizePolicy().hasHeightForWidth());
        pushButton_Rec_open_5->setSizePolicy(sizePolicy1);
        gridLayout->addWidget(pushButton_Rec_open_5, 3, 2, 1, 1);
        pushButton_New = new QPushButton(centralwidget);
        pushButton_New->setObjectName("pushButton_New");
        sizePolicy1.setHeightForWidth(pushButton_New->sizePolicy().hasHeightForWidth());
        pushButton_New->setSizePolicy(sizePolicy1);
        QFont font;
        font.setPointSize(12);
        pushButton_New->setFont(font);
        gridLayout->addWidget(pushButton_New, 1, 0, 1, 1);
        pushButton_Rec_open_4 = new IconautosizePushButton(centralwidget);
        pushButton_Rec_open_4->setObjectName("pushButton_Rec_open_4");
        sizePolicy1.setHeightForWidth(pushButton_Rec_open_4->sizePolicy().hasHeightForWidth());
        pushButton_Rec_open_4->setSizePolicy(sizePolicy1);
        gridLayout->addWidget(pushButton_Rec_open_4, 3, 0, 1, 1);
        gridLayout_2->addLayout(gridLayout, 1, 0, 1, 1);
        verticalLayout = new QVBoxLayout();
        verticalLayout->setObjectName("verticalLayout");
        verticalLayout->setSizeConstraint(QLayout::SetNoConstraint);
        pushButton_brightness = new QPushButton(centralwidget);
        pushButton_brightness->setObjectName("pushButton_brightness");
        pushButton_brightness->setMinimumSize(QSize(100, 0));
        pushButton_brightness->setMaximumSize(QSize(100, 16777215));
        verticalLayout->addWidget(pushButton_brightness);
        pushButton_contrast = new QPushButton(centralwidget);
        pushButton_contrast->setObjectName("pushButton_contrast");
        pushButton_contrast->setMinimumSize(QSize(100, 0));
        pushButton_contrast->setMaximumSize(QSize(100, 16777215));
        verticalLayout->addWidget(pushButton_contrast);
        pushButton_saturation = new QPushButton(centralwidget);
        pushButton_saturation->setObjectName("pushButton_saturation");
        pushButton_saturation->setMinimumSize(QSize(100, 0));
        pushButton_saturation->setMaximumSize(QSize(100, 16777215));
        verticalLayout->addWidget(pushButton_saturation);
        pushButton_clarity = new QPushButton(centralwidget);
        pushButton_clarity->setObjectName("pushButton_clarity");
        pushButton_clarity->setMinimumSize(QSize(100, 0));
        pushButton_clarity->setMaximumSize(QSize(100, 16777215));
        verticalLayout->addWidget(pushButton_clarity);
        pushButton_temperature = new QPushButton(centralwidget);
        pushButton_temperature->setObjectName("pushButton_temperature");
        pushButton_temperature->setMinimumSize(QSize(100, 0));
        pushButton_temperature->setMaximumSize(QSize(100, 16777215));
        verticalLayout->addWidget(pushButton_temperature);
        pushButton_filters = new QPushButton(centralwidget);
        pushButton_filters->setObjectName("pushButton_filters");
        pushButton_filters->setMinimumSize(QSize(100, 0));
        verticalLayout->addWidget(pushButton_filters);
        pushButton_applyFilter = new QPushButton(centralwidget);
        pushButton_applyFilter->setObjectName("pushButton_applyFilter");
        pushButton_applyFilter->setMinimumSize(QSize(100, 0));
        verticalLayout->addWidget(pushButton_applyFilter);
        pushButton_back = new QPushButton(centralwidget);
        pushButton_back->setObjectName("pushButton_back");
        pushButton_back->setMinimumSize(QSize(100, 0));
        verticalLayout->addWidget(pushButton_back);
        horizontalLayout = new QHBoxLayout();
        horizontalLayout->setObjectName("horizontalLayout");
        pushButton_left = new QPushButton(centralwidget);
        pushButton_left->setObjectName("pushButton_left");
        QSizePolicy sizePolicy2(QSizePolicy::Fixed, QSizePolicy::Fixed);
        sizePolicy2.setHorizontalStretch(20);
        sizePolicy2.setVerticalStretch(20);
        sizePolicy2.setHeightForWidth(pushButton_left->sizePolicy().hasHeightForWidth());
        pushButton_left->setSizePolicy(sizePolicy2);
        pushButton_left->setMinimumSize(QSize(35, 35));
        pushButton_left->setMaximumSize(QSize(35, 35));
        QIcon icon1;
        icon1.addFile(QString::fromUtf8(":/arrowToLeft.png"), QSize(), QIcon::Normal, QIcon::Off);
        pushButton_left->setIcon(icon1);
        horizontalLayout->addWidget(pushButton_left);
        pushButton_right = new QPushButton(centralwidget);
        pushButton_right->setObjectName("pushButton_right");
        QSizePolicy sizePolicy3(QSizePolicy::Fixed, QSizePolicy::Fixed);
        sizePolicy3.setHorizontalStretch(0);
        sizePolicy3.setVerticalStretch(0);
        sizePolicy3.setHeightForWidth(pushButton_right->sizePolicy().hasHeightForWidth());
        pushButton_right->setSizePolicy(sizePolicy3);
        pushButton_right->setMinimumSize(QSize(35, 35));
        pushButton_right->setMaximumSize(QSize(35, 35));
        QIcon icon2;
        icon2.addFile(QString::fromUtf8(":/arrowToRight.png"), QSize(), QIcon::Normal, QIcon::Off);
        pushButton_right->setIcon(icon2);
        horizontalLayout->addWidget(pushButton_right);
        verticalLayout->addLayout(horizontalLayout);
        out_amount = new QLabel(centralwidget);
        out_amount->setObjectName("out_amount");
        QSizePolicy sizePolicy4(QSizePolicy::Minimum, QSizePolicy::Fixed);
        sizePolicy4.setHorizontalStretch(0);
        sizePolicy4.setVerticalStretch(0);
        sizePolicy4.setHeightForWidth(out_amount->sizePolicy().hasHeightForWidth());
        out_amount->setSizePolicy(sizePolicy4);
        out_amount->setAlignment(Qt::AlignCenter);
        verticalLayout->addWidget(out_amount);
        gridLayout_2->addLayout(verticalLayout, 1, 4, 1, 1);
        label_greeting = new QLabel(centralwidget);
        label_greeting->setObjectName("label_greeting");
        label_greeting->setMaximumSize(QSize(16777215, 80));
        QFont font1;
        font1.setPointSize(25);
        font1.setKerning(true);
        label_greeting->setFont(font1);
        label_greeting->setStyleSheet(QString::fromUtf8(""));
        label_greeting->setAlignment(Qt::AlignCenter);
        label_greeting->setWordWrap(false);
        label_greeting->setMargin(0);
        gridLayout_2->addWidget(label_greeting, 0, 0, 1, 1);
        graphicsView_main_im = new ViewWithoutWheel(centralwidget);
        graphicsView_main_im->setObjectName("graphicsView_main_im");
        graphicsView_main_im->setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOff);
        graphicsView_main_im->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);
        graphicsView_main_im->setSizeAdjustPolicy(QAbstractScrollArea::AdjustToContents);
        QBrush brush(QColor(0, 0, 0, 255));
        brush.setStyle(Qt::NoBrush);
        graphicsView_main_im->setBackgroundBrush(brush);
        graphicsView_main_im->setInteractive(true);
        graphicsView_main_im->setAlignment(Qt::AlignCenter);
        gridLayout_2->addWidget(graphicsView_main_im, 1, 1, 1, 1);
        MainWindow->setCentralWidget(centralwidget);
        menubar = new QMenuBar(MainWindow);
        menubar->setObjectName("menubar");
        menubar->setGeometry(QRect(0, 0, 900, 26));
        menuFile = new QMenu(menubar);
        menuFile->setObjectName("menuFile");
        menuSettings = new QMenu(menubar);
        menuSettings->setObjectName("menuSettings");
        menuLanguage = new QMenu(menuSettings);
        menuLanguage->setObjectName("menuLanguage");
        MainWindow->setMenuBar(menubar);
        statusbar = new QStatusBar(MainWindow);
        statusbar->setObjectName("statusbar");
        MainWindow->setStatusBar(statusbar);
        menubar->addAction(menuFile->menuAction());
        menubar->addAction(menuSettings->menuAction());
        menuFile->addAction(actionNew_image);
        menuFile->addAction(actionExport);
        menuSettings->addAction(menuLanguage->menuAction());
        menuLanguage->addAction(actionEnglish);
        menuLanguage->addAction(actionRussian);
        menuLanguage->addAction(actionBelarusian);
        retranslateUi(MainWindow);
        QObject::connect(pushButton_Rec_open_1, &IconautosizePushButton::clicked, pushButton_New, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_Rec_open_1, &IconautosizePushButton::clicked, pushButton_Rec_open_2, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_1, &IconautosizePushButton::clicked, pushButton_Rec_open_3, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_1, &IconautosizePushButton::clicked, pushButton_Rec_open_4, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_1, &IconautosizePushButton::clicked, pushButton_Rec_open_5, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_1, &IconautosizePushButton::clicked, pushButton_Rec_open_1, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_2, &IconautosizePushButton::clicked, pushButton_New, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_Rec_open_2, &IconautosizePushButton::clicked, pushButton_Rec_open_1, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_2, &IconautosizePushButton::clicked, pushButton_Rec_open_3, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_2, &IconautosizePushButton::clicked, pushButton_Rec_open_4, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_2, &IconautosizePushButton::clicked, pushButton_Rec_open_5, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_2, &IconautosizePushButton::clicked, pushButton_Rec_open_2, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_3, &IconautosizePushButton::clicked, pushButton_New, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_Rec_open_3, &IconautosizePushButton::clicked, pushButton_Rec_open_1, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_3, &IconautosizePushButton::clicked, pushButton_Rec_open_2, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_3, &IconautosizePushButton::clicked, pushButton_Rec_open_4, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_3, &IconautosizePushButton::clicked, pushButton_Rec_open_5, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_3, &IconautosizePushButton::clicked, pushButton_Rec_open_3, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_4, &IconautosizePushButton::clicked, pushButton_New, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_Rec_open_4, &IconautosizePushButton::clicked, pushButton_Rec_open_1, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_4, &IconautosizePushButton::clicked, pushButton_Rec_open_2, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_4, &IconautosizePushButton::clicked, pushButton_Rec_open_3, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_4, &IconautosizePushButton::clicked, pushButton_Rec_open_5, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_4, &IconautosizePushButton::clicked, pushButton_Rec_open_4, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_5, &IconautosizePushButton::clicked, pushButton_New, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_Rec_open_5, &IconautosizePushButton::clicked, pushButton_Rec_open_1, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_5, &IconautosizePushButton::clicked, pushButton_Rec_open_2, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_5, &IconautosizePushButton::clicked, pushButton_Rec_open_3, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_5, &IconautosizePushButton::clicked, pushButton_Rec_open_4, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_Rec_open_5, &IconautosizePushButton::clicked, pushButton_Rec_open_5, qOverload<>(&IconautosizePushButton::hide));
        QObject::connect(pushButton_brightness, &QPushButton::clicked, regulation, qOverload<>(&QSlider::show));
        QObject::connect(pushButton_contrast, &QPushButton::clicked, regulation, qOverload<>(&QSlider::show));
        QObject::connect(pushButton_saturation, &QPushButton::clicked, regulation, qOverload<>(&QSlider::show));
        QObject::connect(pushButton_clarity, &QPushButton::clicked, regulation, qOverload<>(&QSlider::show));
        QObject::connect(pushButton_temperature, &QPushButton::clicked, regulation, qOverload<>(&QSlider::show));
        QObject::connect(pushButton_brightness, &QPushButton::clicked, out_amount, qOverload<>(&QLabel::show));
        QObject::connect(pushButton_contrast, &QPushButton::clicked, out_amount, qOverload<>(&QLabel::show));
        QObject::connect(pushButton_saturation, &QPushButton::clicked, out_amount, qOverload<>(&QLabel::show));
        QObject::connect(pushButton_clarity, &QPushButton::clicked, out_amount, qOverload<>(&QLabel::show));
        QObject::connect(pushButton_temperature, &QPushButton::clicked, out_amount, qOverload<>(&QLabel::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_brightness, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_contrast, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_saturation, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_clarity, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_temperature, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_filters, &QPushButton::clicked, regulation, qOverload<>(&QSlider::hide));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_left, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_right, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_toLeft, qOverload<>(&QPushButton::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_leftF, qOverload<>(&IconautosizePushButton::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_centerF, qOverload<>(&IconautosizePushButton::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_rightF, qOverload<>(&IconautosizePushButton::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_toRight, qOverload<>(&QPushButton::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, label_leftFname, qOverload<>(&QLabel::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, label_centerFname, qOverload<>(&QLabel::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, label_rightFname, qOverload<>(&QLabel::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_back, qOverload<>(&QPushButton::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_addF, qOverload<>(&QPushButton::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_deleteF, qOverload<>(&QPushButton::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_applyFilter, qOverload<>(&QPushButton::show));
        QObject::connect(pushButton_filters, &QPushButton::clicked, pushButton_filters, qOverload<>(&QPushButton::hide));
        QObject::connect(pushButton_filters, &QPushButton::clicked, out_amount, qOverload<>(&QLabel::hide));
        QObject::connect(pushButton_left, &QPushButton::clicked, regulation, qOverload<>(&QSlider::hide));
        QObject::connect(pushButton_left, &QPushButton::clicked, out_amount, qOverload<>(&QLabel::hide));
        QObject::connect(pushButton_right, &QPushButton::clicked, regulation, qOverload<>(&QSlider::hide));
        QObject::connect(pushButton_right, &QPushButton::clicked, out_amount, qOverload<>(&QLabel::hide));
        QMetaObject::connectSlotsByName(MainWindow);
    } // setupUi
    void retranslateUi(QMainWindow *MainWindow) {
        actionExport->setText(QCoreApplication::translate("MainWindow", "Export", nullptr));
        actionNew_image->setText(QCoreApplication::translate("MainWindow", "New image", nullptr));
        actionEnglish->setText(QCoreApplication::translate("MainWindow", "English", nullptr));
        actionRussian->setText(QCoreApplication::translate("MainWindow", "Russian", nullptr));
        actionBelarusian->setText(QCoreApplication::translate("MainWindow", "Belarusian", nullptr));
        pushButton_addF->setText(QCoreApplication::translate("MainWindow", "Add filter", nullptr));
        pushButton_deleteF->setText(QCoreApplication::translate("MainWindow", "Delete filter", nullptr));
        pushButton_leftF->setText(QString());
        label_centerFname->setText(QString());
        label_rightFname->setText(QString());
        pushButton_centerF->setText(QString());
        label_leftFname->setText(QString());
        pushButton_rightF->setText(QString());
        pushButton_Rec_open_3->setText(QString());
        pushButton_Rec_open_2->setText(QString());
        pushButton_Rec_open_1->setText(QString());
        pushButton_Rec_open_5->setText(QString());
        pushButton_New->setText(QCoreApplication::translate("MainWindow", "Open new image", nullptr));
        pushButton_Rec_open_4->setText(QString());
        pushButton_brightness->setText(QCoreApplication::translate("MainWindow", "Brightness", nullptr));
        pushButton_contrast->setText(QCoreApplication::translate("MainWindow", "Contrast", nullptr));
        pushButton_saturation->setText(QCoreApplication::translate("MainWindow", "Saturation", nullptr));
        pushButton_clarity->setText(QCoreApplication::translate("MainWindow", "Clarity", nullptr));
        pushButton_temperature->setText(QCoreApplication::translate("MainWindow", "Temperature", nullptr));
        pushButton_filters->setText(QCoreApplication::translate("MainWindow", "Filters", nullptr));
        pushButton_applyFilter->setText(QCoreApplication::translate("MainWindow", "Apply", nullptr));
        pushButton_back->setText(QCoreApplication::translate("MainWindow", "Back", nullptr));
#if QT_CONFIG(tooltip)
        pushButton_left->setToolTip(QCoreApplication::translate("MainWindow", "<html><head/><body><p>Rotate left</p></body></html>", nullptr));
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        pushButton_left->setWhatsThis(QString());
#endif // QT_CONFIG(whatsthis)
        pushButton_left->setText(QString());
#if QT_CONFIG(tooltip)
        pushButton_right->setToolTip(QCoreApplication::translate("MainWindow", "<html><head/><body><p>Rotate right</p></body></html>", nullptr));
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        pushButton_right->setWhatsThis(QString());
#endif // QT_CONFIG(whatsthis)
        pushButton_right->setText(QString());
        out_amount->setText(QString());
        label_greeting->setText(QCoreApplication::translate("MainWindow", "Open new image or recenly opened", nullptr));
        menuFile->setTitle(QCoreApplication::translate("MainWindow", "File", nullptr));
        menuSettings->setTitle(QCoreApplication::translate("MainWindow", "Settings", nullptr));
        menuLanguage->setTitle(QCoreApplication::translate("MainWindow", "Language", nullptr));
        (void)MainWindow;
    } // retranslateUi
};
namespace Ui {
    class MainWindow: public Ui_MainWindow {};
} // namespace Ui
QT_END_NAMESPACE
#endif // UI_MAINWINDOW_H
 
Файл ui_set_FilterName_window.h: 
/********************************************************************************
** Form generated from reading UI file 'set_FilterName_window.ui'
**
** Created by: Qt User Interface Compiler version 6.5.1
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/
#ifndef UI_SET_FILTERNAME_WINDOW_H
#define UI_SET_FILTERNAME_WINDOW_H
#include <QtCore/QVariant>
#include <QtGui/QIcon>
#include <QtWidgets/QApplication>
#include <QtWidgets/QGridLayout>
#include <QtWidgets/QLabel>
#include <QtWidgets/QLineEdit>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QWidget>
QT_BEGIN_NAMESPACE
class Ui_Form {
public:
    QGridLayout *gridLayout;
    QPushButton *pushButton_cansel;
    QPushButton *pushButton_save;
    QLabel *label;
    QLineEdit *lineEdit;
    QLabel *label_2;
    void setupUi(QWidget *Form) {
        if (Form->objectName().isEmpty())
            Form->setObjectName("Form");
        Form->resize(500, 100);
        QSizePolicy sizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);
        sizePolicy.setHorizontalStretch(0);
        sizePolicy.setVerticalStretch(0);
        sizePolicy.setHeightForWidth(Form->sizePolicy().hasHeightForWidth());
        Form->setSizePolicy(sizePolicy);
        Form->setMinimumSize(QSize(500, 100));
        Form->setMaximumSize(QSize(500, 100));
        QIcon icon;
        icon.addFile(QString::fromUtf8(":/mainwindow_icon.png"), QSize(), QIcon::Normal, QIcon::Off);
        Form->setWindowIcon(icon);
        gridLayout = new QGridLayout(Form);
        gridLayout->setObjectName("gridLayout");
        pushButton_cansel = new QPushButton(Form);
        pushButton_cansel->setObjectName("pushButton_cansel");
        pushButton_cansel->setMinimumSize(QSize(0, 25));
        pushButton_cansel->setMaximumSize(QSize(16777215, 25));
        gridLayout->addWidget(pushButton_cansel, 2, 2, 1, 1);
        pushButton_save = new QPushButton(Form);
        pushButton_save->setObjectName("pushButton_save");
        pushButton_save->setMinimumSize(QSize(0, 25));
        pushButton_save->setMaximumSize(QSize(16777215, 25));
        gridLayout->addWidget(pushButton_save, 2, 0, 1, 1);
        label = new QLabel(Form);
        label->setObjectName("label");
        QFont font;
        font.setPointSize(15);
        label->setFont(font);
        label->setAlignment(Qt::AlignCenter);
        gridLayout->addWidget(label, 0, 1, 1, 1);
        lineEdit = new QLineEdit(Form);
        lineEdit->setObjectName("lineEdit");
        QSizePolicy sizePolicy1(QSizePolicy::Expanding, QSizePolicy::Fixed);
        sizePolicy1.setHorizontalStretch(200);
        sizePolicy1.setVerticalStretch(30);
        sizePolicy1.setHeightForWidth(lineEdit->sizePolicy().hasHeightForWidth());
        lineEdit->setSizePolicy(sizePolicy1);
        lineEdit->setMinimumSize(QSize(200, 30));
        lineEdit->setMaxLength(80);
        gridLayout->addWidget(lineEdit, 1, 1, 1, 1);
        label_2 = new QLabel(Form);
        label_2->setObjectName("label_2");
        label_2->setStyleSheet(QString::fromUtf8("color: red;\n"
""));
        label_2->setAlignment(Qt::AlignCenter);
        gridLayout->addWidget(label_2, 2, 1, 1, 1);
        retranslateUi(Form);
        QMetaObject::connectSlotsByName(Form);
    } // setupUi
    void retranslateUi(QWidget *Form) {
        Form->setWindowTitle(QCoreApplication::translate("Form", "Filter name", nullptr));
        pushButton_cansel->setText(QCoreApplication::translate("Form", "Cansel", nullptr));
        pushButton_save->setText(QCoreApplication::translate("Form", "Save", nullptr));
        label->setText(QCoreApplication::translate("Form", "Enter filter name", nullptr));
        label_2->setText(QString());
    } // retranslateUi
};
namespace Ui {
    class Form: public Ui_Form {};
} // namespace Ui
QT_END_NAMESPACE
#endif // UI_SET_FILTERNAME_WINDOW_H
 
